---
source: src/lib.rs
expression: languages_toml
input_file: test_data/nodejs
snapshot_kind: text
---
# language-specific settings:

[[language]]
name = "ec2hx-glob-lang-deps-**-ada"
scope = "source.ada"
file-types = [{ glob = "deps/**/*.adb" }, { glob = "deps/**/*.ads" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-language-server"]
grammar = "ada"

[[language]]
name = "ec2hx-glob-lang-deps-**-adl"
scope = "source.adl"
file-types = [{ glob = "deps/**/*.adl" }]
roots = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '<' = '>' }
grammar = "adl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-agda"
scope = "source.agda"
file-types = [{ glob = "deps/**/*.agda" }]
roots = []
comment-token = "--"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', "'" = "'", '{' = '}', '(' = ')', '[' = ']' }
grammar = "agda"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-deps-**-amber"
scope = "source.ab"
file-types = [{ glob = "deps/**/*.ab" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "amber"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-astro"
scope = "source.astro"
file-types = [{ glob = "deps/**/*.astro" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "astro"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-awk"
scope = "source.awk"
file-types = [{ glob = "deps/**/*.awk" }, { glob = "deps/**/*.gawk" }, { glob = "deps/**/*.nawk" }, { glob = "deps/**/*.mawk" }]
comment-token = "#"
language-servers = [ "awk-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "awk"

[[language]]
name = "ec2hx-glob-lang-deps-**-bash"
scope = "source.bash"
file-types = [{ glob = "deps/**/*.sh" }, { glob = "deps/**/*.bash" }, { glob = "deps/**/*.ash" }, { glob = "deps/**/*.dash" }, { glob = "deps/**/*.ksh" }, { glob = "deps/**/*.mksh" }, { glob = "deps/**/*.zsh" }, { glob = "deps/**/*.zshenv" }, { glob = "deps/**/*.zlogin" }, { glob = "deps/**/*.zlogout" }, { glob = "deps/**/*.zprofile" }, { glob = "deps/**/*.zshrc" }, { glob = "deps/**/*.eclass" }, { glob = "deps/**/*.ebuild" }, { glob = "deps/**/*.bazelrc" }, { glob = "deps/**/*.Renviron" }, { glob = "deps/**/*.zsh-theme" }, { glob = "deps/**/*.cshrc" }, { glob = "deps/**/*.tcshrc" }, { glob = "deps/**/*.bashrc_Apple_Terminal" }, { glob = "deps/**/*.zshrc_Apple_Terminal" }, { glob = "deps/**/i3/config" }, { glob = "deps/**/sway/config" }, { glob = "deps/**/tmux.conf" }, { glob = "deps/**/.bash_history" }, { glob = "deps/**/.bash_login" }, { glob = "deps/**/.bash_logout" }, { glob = "deps/**/.bash_profile" }, { glob = "deps/**/.bashrc" }, { glob = "deps/**/.profile" }, { glob = "deps/**/.zshenv" }, { glob = "deps/**/.zlogin" }, { glob = "deps/**/.zlogout" }, { glob = "deps/**/.zprofile" }, { glob = "deps/**/.zshrc" }, { glob = "deps/**/.zimrc" }, { glob = "deps/**/APKBUILD" }, { glob = "deps/**/.bash_aliases" }, { glob = "deps/**/.Renviron" }, { glob = "deps/**/.xprofile" }, { glob = "deps/**/.xsession" }, { glob = "deps/**/.xsessionrc" }, { glob = "deps/**/.yashrc" }, { glob = "deps/**/.yash_profile" }, { glob = "deps/**/.hushlogin" }]
shebangs = ["sh", "bash", "dash", "zsh"]
comment-token = "#"
language-servers = [ "bash-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "bash"

[[language]]
name = "ec2hx-glob-lang-deps-**-bass"
scope = "source.bass"
file-types = [{ glob = "deps/**/*.bass" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bass" ]
grammar = "bass"

[[language]]
name = "ec2hx-glob-lang-deps-**-beancount"
scope = "source.beancount"
file-types = [{ glob = "deps/**/*.beancount" }, { glob = "deps/**/*.bean" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "beancount"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-bibtex"
scope = "source.bib"
file-types = [{ glob = "deps/**/*.bib" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter= { command = 'bibtex-tidy', args = [
  "-",
  "--curly",
  "--drop-all-caps",
  "--remove-empty-fields",
  "--sort-fields",
  "--sort=year,author,id",
  "--strip-enclosing-braces",
  "--trailing-commas",
] }
grammar = "bibtex"

[[language]]
name = "ec2hx-glob-lang-deps-**-bicep"
scope = "source.bicep"
file-types = [{ glob = "deps/**/*.bicep" }, { glob = "deps/**/*.bicepparam" }]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bicep-langserver" ]
grammar = "bicep"

[[language]]
name = "ec2hx-glob-lang-deps-**-bitbake"
language-servers = [ "bitbake-language-server" ]
scope = "source.bitbake"
file-types = [{ glob = "deps/**/*.bb" }, { glob = "deps/**/*.bbappend" }, { glob = "deps/**/*.bbclass" }, { glob = "deps/**/conf/*.conf" }, { glob = "deps/**/conf/*/*.{inc,conf}" }, { glob = "deps/**/recipe-*/*/*.inc" }]
comment-token = "#"
grammar = "bitbake"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-blade"
scope = "source.blade.php"
file-types = [{ glob = "deps/**/*.blade.php" }, { glob = "deps/**/*.blade" }]
roots = ["composer.json", "index.php"]
grammar = "blade"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-blueprint"
scope = "source.blueprint"
file-types = [{ glob = "deps/**/*.blp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "blueprint-compiler" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "blueprint"

[[language]]
name = "ec2hx-glob-lang-deps-**-c"
scope = "source.c"
file-types = [{ glob = "deps/**/*.c" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "c"

[[language]]
name = "ec2hx-glob-lang-deps-**-c-sharp"
scope = "source.csharp"
file-types = [{ glob = "deps/**/*.cs" }, { glob = "deps/**/*.csx" }, { glob = "deps/**/*.cake" }]
roots = ["sln", "csproj"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "omnisharp" ]
debugger= { name = "netcoredbg", transport = "tcp", command = "netcoredbg", args = [ "--interpreter=vscode" ], port-arg = "--server={}", templates = [{ name = "launch", request = "launch", completion = [ { name = "path to dll", completion = "filename" } ], args = { type = "coreclr", console = "internalConsole", internalConsoleOptions = "openOnSessionStart", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { processId = "{0}" } }] }
grammar = "c-sharp"

[[language]]
name = "ec2hx-glob-lang-deps-**-cabal"
scope = "source.cabal"
file-types = [{ glob = "deps/**/*.cabal" }]
roots = ["cabal.project", "Setup.hs"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "--"
language-servers = [ "haskell-language-server" ]
grammar = "cabal"

[[language]]
name = "ec2hx-glob-lang-deps-**-cairo"
scope = "source.cairo"
file-types = [{ glob = "deps/**/*.cairo" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
# auto-format = true
language-servers = [ "cairo-language-server" ]
grammar = "cairo"

[[language]]
name = "ec2hx-glob-lang-deps-**-capnp"
scope = "source.capnp"
file-types = [{ glob = "deps/**/*.capnp" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "capnp"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-cel"
scope = "source.cel"
file-types = [{ glob = "deps/**/*.cel" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cel"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-circom"
scope            = "source.circom"
file-types = [{ glob = "deps/**/*.circom" }]
roots            = ["package.json"]
comment-tokens   = "//"
indent = { unit = "  ", tab-width = 2 }
auto-format      = false
language-servers = ["circom-lsp"]
grammar = "circom"

[[language]]
name = "ec2hx-glob-lang-deps-**-clojure"
scope = "source.clojure"
file-types = [{ glob = "deps/**/*.clj" }, { glob = "deps/**/*.cljs" }, { glob = "deps/**/*.cljc" }, { glob = "deps/**/*.clje" }, { glob = "deps/**/*.cljr" }, { glob = "deps/**/*.cljx" }, { glob = "deps/**/*.edn" }, { glob = "deps/**/*.boot" }]
roots = ["project.clj", "build.boot", "deps.edn", "shadow-cljs.edn"]
comment-token = ";"
language-servers = [ "clojure-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "clojure"

[[language]]
name = "ec2hx-glob-lang-deps-**-cmake"
scope = "source.cmake"
file-types = [{ glob = "deps/**/*.cmake" }, { glob = "deps/**/CMakeLists.txt" }]
comment-token = "#"
block-comment-tokens = { start = "#[[", end = "]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cmake-language-server" ]
grammar = "cmake"

[[language]]
name = "ec2hx-glob-lang-deps-**-comment"
scope = "scope.comment"
file-types = []
grammar = "comment"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-common-lisp"
scope = "source.lisp"
file-types = [{ glob = "deps/**/*.lisp" }, { glob = "deps/**/*.asd" }, { glob = "deps/**/*.cl" }, { glob = "deps/**/*.l" }, { glob = "deps/**/*.lsp" }, { glob = "deps/**/*.ny" }, { glob = "deps/**/*.podsl" }, { glob = "deps/**/*.sexp" }]
shebangs = ["lisp", "sbcl", "ccl", "clisp", "ecl"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cl-lsp" ]
grammar = "common-lisp"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-deps-**-cpon"
scope = "scope.cpon"
file-types = [{ glob = "deps/**/*.cpon" }, { glob = "deps/**/*.cp" }]
auto-format = true
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cpon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-deps-**-cpp"
scope = "source.cpp"
file-types = [{ glob = "deps/**/*.cc" }, { glob = "deps/**/*.hh" }, { glob = "deps/**/*.c++" }, { glob = "deps/**/*.cpp" }, { glob = "deps/**/*.hpp" }, { glob = "deps/**/*.h" }, { glob = "deps/**/*.ipp" }, { glob = "deps/**/*.tpp" }, { glob = "deps/**/*.cxx" }, { glob = "deps/**/*.hxx" }, { glob = "deps/**/*.ixx" }, { glob = "deps/**/*.txx" }, { glob = "deps/**/*.ino" }, { glob = "deps/**/*.C" }, { glob = "deps/**/*.H" }, { glob = "deps/**/*.cu" }, { glob = "deps/**/*.cuh" }, { glob = "deps/**/*.cppm" }, { glob = "deps/**/*.h++" }, { glob = "deps/**/*.ii" }, { glob = "deps/**/*.inl" }, { glob = "deps/**/.hpp.in" }, { glob = "deps/**/.h.in" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "cpp"

[[language]]
name = "ec2hx-glob-lang-deps-**-crystal"
scope = "source.cr"
file-types = [{ glob = "deps/**/*.cr" }]
roots = ["shard.yml", "shard.lock"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "crystal"
language-servers = [ "crystalline" ]

[[language]]
name = "ec2hx-glob-lang-deps-**-css"
scope = "source.css"
file-types = [{ glob = "deps/**/*.css" }, { glob = "deps/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "css"

[[language]]
name = "ec2hx-glob-lang-deps-**-cue"
scope = "source.cue"
file-types = [{ glob = "deps/**/*.cue" }]
roots = ["cue.mod"]
auto-format = true
comment-token = "//"
language-servers = [ "cuelsp" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "cue", args = ["fmt", "-"] }
grammar = "cue"

[[language]]
name = "ec2hx-glob-lang-deps-**-cylc"
scope = "source.cylc"
file-types = [{ glob = "deps/**/*.cylc" }, { glob = "deps/**/suite.rc" }]
comment-tokens = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "cylc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-d"
scope = "source.d"
file-types = [{ glob = "deps/**/*.d" }, { glob = "deps/**/*.dd" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "serve-d" ]
formatter = { command = "dfmt" }
grammar = "d"

[[language]]
name = "ec2hx-glob-lang-deps-**-dart"
scope = "source.dart"
file-types = [{ glob = "deps/**/*.dart" }]
roots = ["pubspec.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "dart" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "dart"

[[language]]
name = "ec2hx-glob-lang-deps-**-dbml"
scope = "source.dbml"
file-types = [{ glob = "deps/**/*.dbml" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dbml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-devicetree"
scope = "source.devicetree"
file-types = [{ glob = "deps/**/*.dts" }, { glob = "deps/**/*.dtsi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "devicetree"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-dhall"
scope = "source.dhall"
file-types = [{ glob = "deps/**/*.dhall" }]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dhall-lsp-server" ]
formatter = { command = "dhall" , args = ["format"] }
grammar = "dhall"

[[language]]
name = "ec2hx-glob-lang-deps-**-diff"
scope = "source.diff"
file-types = [{ glob = "deps/**/*.diff" }, { glob = "deps/**/*.patch" }, { glob = "deps/**/*.rej" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "diff"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-docker-compose"
scope = "source.yaml.docker-compose"
roots = ["docker-compose.yaml", "docker-compose.yml"]
language-servers = [ "docker-compose-langserver", "yaml-language-server" ]
file-types = [{ glob = "deps/**/docker-compose.yaml" }, { glob = "deps/**/docker-compose.yml" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "docker-compose"

[[language]]
name = "ec2hx-glob-lang-deps-**-dockerfile"
scope = "source.dockerfile"
roots = ["Dockerfile", "Containerfile"]
file-types = [{ glob = "deps/**/*.Dockerfile" }, { glob = "deps/**/Dockerfile" }, { glob = "deps/**/Dockerfile.*" }, { glob = "deps/**/*.dockerfile" }, { glob = "deps/**/dockerfile" }, { glob = "deps/**/dockerfile.*" }, { glob = "deps/**/*.Containerfile" }, { glob = "deps/**/Containerfile" }, { glob = "deps/**/Containerfile.*" }, { glob = "deps/**/*.containerfile" }, { glob = "deps/**/containerfile" }, { glob = "deps/**/containerfile.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "docker-langserver" ]
grammar = "dockerfile"

[[language]]
name = "ec2hx-glob-lang-deps-**-dot"
scope = "source.dot"
file-types = [{ glob = "deps/**/*.dot" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dot-language-server" ]
grammar = "dot"

[[language]]
name = "ec2hx-glob-lang-deps-**-dtd"
scope = "source.dtd"
file-types = [{ glob = "deps/**/*.dtd" }, { glob = "deps/**/*.ent" }]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '<' = '>' }
grammar = "dtd"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-dune"
scope = "source.dune"
roots = ["dune-project"]
file-types = [{ glob = "deps/**/dune-project" }, { glob = "deps/**/dune" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dune"
auto-format = true
formatter = { command = "dune", args = ["format-dune-file"] }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-deps-**-earthfile"
scope = "source.earthfile"
roots = ["Earthfile"]
file-types = [{ glob = "deps/**/Earthfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["earthlyls"]
grammar = "earthfile"

[[language]]
name = "ec2hx-glob-lang-deps-**-edoc"
scope = "source.edoc"
file-types = [{ glob = "deps/**/*.edoc" }, { glob = "deps/**/*.edoc.in" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "edoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-eex"
scope = "source.eex"
file-types = [{ glob = "deps/**/*.eex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "eex"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-ejs"
scope = "text.html.ejs"
file-types = [{ glob = "deps/**/*.ejs" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ejs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-elisp"
scope = "source.elisp"
file-types = [{ glob = "deps/**/*.el" }]
comment-tokens = [";"]
auto-pairs= { '(' = ')', '"' = '"' }
grammar = "elisp"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-elixir"
scope = "source.elixir"
file-types = [{ glob = "deps/**/*.ex" }, { glob = "deps/**/*.exs" }, { glob = "deps/**/mix.lock" }]
shebangs = ["elixir"]
roots = ["mix.exs", "mix.lock"]
comment-token = "#"
language-servers = [ "elixir-ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elixir"

[[language]]
name = "ec2hx-glob-lang-deps-**-elm"
scope = "source.elm"
file-types = [{ glob = "deps/**/*.elm" }]
roots = ["elm.json"]
auto-format = true
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "elm-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elm"

[[language]]
name = "ec2hx-glob-lang-deps-**-elvish"
scope = "source.elvish"
shebangs = ["elvish"]
file-types = [{ glob = "deps/**/*.elv" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elvish" ]
grammar = "elvish"

[[language]]
name = "ec2hx-glob-lang-deps-**-env"
scope = "source.env"
file-types = [{ glob = "deps/**/.env" }, { glob = "deps/**/.env.*" }, { glob = "deps/**/.envrc" }, { glob = "deps/**/.envrc.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "env"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-erb"
scope = "text.html.erb"
file-types = [{ glob = "deps/**/*.erb" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "erb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-erlang"
scope = "source.erlang"
file-types = [{ glob = "deps/**/*.erl" }, { glob = "deps/**/*.hrl" }, { glob = "deps/**/*.app" }, { glob = "deps/**/rebar.config" }, { glob = "deps/**/rebar.lock" }, { glob = "deps/**/*.app.src" }]
roots = ["rebar.config"]
shebangs = ["escript"]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "erlang-ls", "elp" ]
grammar = "erlang"

[[language]]
name = "ec2hx-glob-lang-deps-**-esdl"
scope = "source.esdl"
file-types = [{ glob = "deps/**/*.esdl" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
roots = ["edgedb.toml"]
grammar = "esdl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-fidl"
scope = "source.fidl"
file-types = [{ glob = "deps/**/*.fidl" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "fidl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-fish"
scope = "source.fish"
file-types = [{ glob = "deps/**/*.fish" }]
shebangs = ["fish"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "fish_indent" }
grammar = "fish"

[[language]]
name = "ec2hx-glob-lang-deps-**-forth"
scope = "source.forth"
file-types = [{ glob = "deps/**/*.fs" }, { glob = "deps/**/*.forth" }, { glob = "deps/**/*.fth" }, { glob = "deps/**/*.4th" }]
comment-token = "\\"
language-servers = [ "forth-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "forth"

[[language]]
name = "ec2hx-glob-lang-deps-**-fortran"
scope = "source.fortran"
file-types = [{ glob = "deps/**/*.f" }, { glob = "deps/**/*.for" }, { glob = "deps/**/*.f90" }, { glob = "deps/**/*.f95" }, { glob = "deps/**/*.f03" }]
roots = ["fpm.toml"]
comment-token = "!"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "fortls" ]
grammar = "fortran"

[[language]]
name = "ec2hx-glob-lang-deps-**-fsharp"
scope = "source.fs"
roots = ["sln", "fsproj"]
file-types = [{ glob = "deps/**/*.fs" }, { glob = "deps/**/*.fsx" }, { glob = "deps/**/*.fsi" }, { glob = "deps/**/*.fsscript" }]
comment-token = "//"
block-comment-tokens = { start = "(*", end = "*)" }
indent = { unit = "  ", tab-width = 2 }
auto-format = true
language-servers = ["fsharp-ls"]
grammar = "fsharp"

[[language]]
name = "ec2hx-glob-lang-deps-**-gas"
scope = "source.gas"
file-types = [{ glob = "deps/**/*.s" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gas"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-gdscript"
scope = "source.gdscript"
file-types = [{ glob = "deps/**/*.gd" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
formatter = { command = "gdformat", args = ["-"] }
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
grammar = "gdscript"

[[language]]
name = "ec2hx-glob-lang-deps-**-gemini"
scope = "source.gmi"
file-types = [{ glob = "deps/**/*.gmi" }]
grammar = "gemini"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-gherkin"
scope = "source.feature"
file-types = [{ glob = "deps/**/*.feature" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gherkin"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-git-attributes"
scope = "source.gitattributes"
file-types = [{ glob = "deps/**/.gitattributes" }]
comment-token = "#"
grammar = "git-attributes"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-git-commit"
scope = "git.commitmsg"
file-types = [{ glob = "deps/**/COMMIT_EDITMSG" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "git-commit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-git-config"
scope = "source.gitconfig"
file-types = [{ glob = "deps/**/.gitmodules" }, { glob = "deps/**/.gitconfig" }, { glob = "deps/**/.git/config" }, { glob = "deps/**/.config/git/config" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-config"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-git-ignore"
scope = "source.gitignore"
file-types = [{ glob = "deps/**/.gitignore_global" }, { glob = "deps/**/git/ignore" }, { glob = "deps/**/.ignore" }, { glob = "deps/**/CODEOWNERS" }, { glob = "deps/**/.config/helix/ignore" }, { glob = "deps/**/.helix/ignore" }, { glob = "deps/**/.*ignore" }]
comment-token = "#"
grammar = "git-ignore"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-git-rebase"
scope = "source.gitrebase"
file-types = [{ glob = "deps/**/git-rebase-todo" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-rebase"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-gjs"
scope = "source.gjs"
file-types = [{ glob = "deps/**/*.gjs" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gjs"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-deps-**-gleam"
scope = "source.gleam"
file-types = [{ glob = "deps/**/*.gleam" }]
roots = ["gleam.toml"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "gleam" ]
auto-format = true
grammar = "gleam"

[[language]]
name = "ec2hx-glob-lang-deps-**-glimmer"
scope = "source.glimmer"
file-types = [{ glob = "deps/**/{app,addon}/{components,templates}/*.hbs" }]
block-comment-tokens = { start = "{{!", end = "}}" }
roots = ["package.json", "ember-cli-build.js"]
grammar = "glimmer"
language-servers = ["ember-language-server"]
formatter = { command = "prettier", args = ['--parser', 'glimmer'] }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>', "'" = "'" }
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-glsl"
scope = "source.glsl"
file-types = [{ glob = "deps/**/*.glsl" }, { glob = "deps/**/*.vert" }, { glob = "deps/**/*.tesc" }, { glob = "deps/**/*.tese" }, { glob = "deps/**/*.geom" }, { glob = "deps/**/*.frag" }, { glob = "deps/**/*.comp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "glsl_analyzer" ]
grammar = "glsl"

[[language]]
name = "ec2hx-glob-lang-deps-**-gn"
scope = "source.gn"
file-types = [{ glob = "deps/**/*.gn" }, { glob = "deps/**/*.gni" }]
roots = []
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "gn", args = ["format", "--stdin"] }
grammar = "gn"

[[language]]
name = "ec2hx-glob-lang-deps-**-go"
scope = "source.go"
file-types = [{ glob = "deps/**/*.go" }]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls", "golangci-lint-lsp" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "go", transport = "tcp", command = "dlv", args = ["dap"], port-arg = "-l 127.0.0.1:{}", templates = [{ name = "source", request = "launch", completion = [ { name = "entrypoint", completion = "filename", default = "." } ], args = { mode = "debug", program = "{0}" } }, { name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { mode = "exec", program = "{0}" } }, { name = "test", request = "launch", completion = [ { name = "tests", completion = "directory", default = "." } ], args = { mode = "test", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { mode = "local", processId = "{0}" } }, { name = "core", request = "launch", completion = [ { name = "binary", completion = "filename" }, { name = "core", completion = "filename" } ], args = { mode = "core", program = "{0}", coreFilePath = "{1}" } }] }
grammar = "go"

[[language]]
name = "ec2hx-glob-lang-deps-**-godot-resource"
scope = "source.tscn"
file-types = [{ glob = "deps/**/*.tscn" }, { glob = "deps/**/*.tres" }, { glob = "deps/**/*.godot" }, { glob = "deps/**/*.gdextension" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "godot-resource"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-deps-**-gomod"
scope = "source.gomod"
file-types = [{ glob = "deps/**/go.mod" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gomod"

[[language]]
name = "ec2hx-glob-lang-deps-**-gotmpl"
scope = "source.gotmpl"
file-types = [{ glob = "deps/**/*.gotmpl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gotmpl"

[[language]]
name = "ec2hx-glob-lang-deps-**-gowork"
scope = "source.gowork"
file-types = [{ glob = "deps/**/go.work" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gowork"

[[language]]
name = "ec2hx-glob-lang-deps-**-gpr"
scope = "source.gpr"
file-types = [{ glob = "deps/**/*.gpr" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-gpr-language-server"]
grammar = "gpr"

[[language]]
name = "ec2hx-glob-lang-deps-**-graphql"
scope = "source.graphql"
file-types = [{ glob = "deps/**/*.gql" }, { glob = "deps/**/*.graphql" }, { glob = "deps/**/*.graphqls" }]
language-servers = [ "graphql-language-service" ]
comment-token = "#"
block-comment-tokens = { start = "\"\"\"", end = "\"\"\"" }
indent = { unit = "  ", tab-width = 2 }
grammar = "graphql"

[[language]]
name = "ec2hx-glob-lang-deps-**-groovy"
language-id = "groovy"
scope = "source.groovy"
file-types = [{ glob = "deps/**/*.gradle" }, { glob = "deps/**/*.groovy" }, { glob = "deps/**/*.jenkinsfile" }, { glob = "deps/**/Jenkinsfile" }, { glob = "deps/**/Jenkinsfile.*" }]
shebangs = ["groovy"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "groovy"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-gts"
scope = "source.gts"
file-types = [{ glob = "deps/**/*.gts" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gts"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-deps-**-hare"
scope = "source.hare"
file-types = [{ glob = "deps/**/*.ha" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "hare"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-haskell"
scope = "source.haskell"
file-types = [{ glob = "deps/**/*.hs" }, { glob = "deps/**/*.hs-boot" }, { glob = "deps/**/*.hsc" }]
roots = ["Setup.hs", "stack.yaml", "cabal.project"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "haskell-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell"

[[language]]
name = "ec2hx-glob-lang-deps-**-haskell-persistent"
scope = "source.persistentmodels"
file-types = [{ glob = "deps/**/*.persistentmodels" }]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell-persistent"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-hcl"
scope = "source.hcl"
language-id = "terraform"
file-types = [{ glob = "deps/**/*.hcl" }, { glob = "deps/**/*.tf" }, { glob = "deps/**/*.nomad" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "hcl"

[[language]]
name = "ec2hx-glob-lang-deps-**-heex"
scope = "source.heex"
file-types = [{ glob = "deps/**/*.heex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elixir-ls" ]
grammar = "heex"

[[language]]
name = "ec2hx-glob-lang-deps-**-helm"
grammar = "helm"
scope = "source.helm"
roots = ["Chart.yaml"]
comment-token = "#"
language-servers = ["helm_ls"]
file-types = [{ glob = "deps/**/templates/*.yaml" }, { glob = "deps/**/templates/*.yml" }, { glob = "deps/**/templates/_*.tpl" }, { glob = "deps/**/templates/NOTES.txt" }]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-hocon"
scope = "source.conf"
file-types = [{ glob = "deps/**/**/src/*/resources/**/*.conf" }, { glob = "deps/**/*scalafmt*.conf" }, { glob = "deps/**/*scalafix*.conf" }]
comment-token = "#"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "hocon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-deps-**-hoon"
scope = "source.hoon"
file-types = [{ glob = "deps/**/*.hoon" }]
comment-token = "::"
indent = { unit = "  ", tab-width = 2 }
grammar = "hoon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-hosts"
scope = "source.hosts"
file-types = [{ glob = "deps/**/hosts" }]
comment-token = "#"
grammar = "hosts"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-html"
scope = "text.html.basic"
file-types = [{ glob = "deps/**/*.html" }, { glob = "deps/**/*.htm" }, { glob = "deps/**/*.shtml" }, { glob = "deps/**/*.xhtml" }, { glob = "deps/**/*.xht" }, { glob = "deps/**/*.jsp" }, { glob = "deps/**/*.asp" }, { glob = "deps/**/*.aspx" }, { glob = "deps/**/*.jshtm" }, { glob = "deps/**/*.volt" }, { glob = "deps/**/*.rhtml" }, { glob = "deps/**/*.cshtml" }]
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "vscode-html-language-server", "superhtml" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "html"

[[language]]
name = "ec2hx-glob-lang-deps-**-hurl"
scope = "source.hurl"
file-types = [{ glob = "deps/**/*.hurl" }]
comment-token = "#"
formatter = { command = "hurlfmt" }
indent = { unit = "  ", tab-width = 2 }
grammar = "hurl"

[[language]]
name = "ec2hx-glob-lang-deps-**-hyprlang"
scope = "source.hyprlang"
roots = ["hyprland.conf"]
file-types = [{ glob = "deps/**/hypr/*.conf" }]
comment-token = "#"
grammar = "hyprlang"
language-servers = ["hyprls"]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-idris"
scope = "source.idr"
file-types = [{ glob = "deps/**/*.idr" }]
shebangs = []
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "idris2-lsp" ]
grammar = "idris"

[[language]]
name = "ec2hx-glob-lang-deps-**-iex"
scope = "source.iex"
file-types = [{ glob = "deps/**/*.iex" }]
comment-token = "#"
grammar = "iex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-ini"
scope = "source.ini"
file-types = [{ glob = "deps/**/*.ini" }, { glob = "deps/**/*.service" }, { glob = "deps/**/*.automount" }, { glob = "deps/**/*.device" }, { glob = "deps/**/*.mount" }, { glob = "deps/**/*.path" }, { glob = "deps/**/*.service" }, { glob = "deps/**/*.slice" }, { glob = "deps/**/*.socket" }, { glob = "deps/**/*.swap" }, { glob = "deps/**/*.target" }, { glob = "deps/**/*.timer" }, { glob = "deps/**/*.container" }, { glob = "deps/**/*.volume" }, { glob = "deps/**/*.kube" }, { glob = "deps/**/*.network" }, { glob = "deps/**/.editorconfig" }, { glob = "deps/**/.npmrc" }, { glob = "deps/**/npmrc" }, { glob = "deps/**/rclone.conf" }, { glob = "deps/**/*.properties" }, { glob = "deps/**/*.cfg" }, { glob = "deps/**/*.directory" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "ini"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-inko"
auto-format = true
scope = "source.inko"
file-types = [{ glob = "deps/**/*.inko" }]
roots = ["inko.pkg"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "inko", args = ["fmt", "-"] }
grammar = "inko"

[[language]]
name = "ec2hx-glob-lang-deps-**-janet"
scope = "source.janet"
file-types = [{ glob = "deps/**/*.cgen" }, { glob = "deps/**/*.janet" }, { glob = "deps/**/*.jdn" }]
shebangs = ["janet"]
roots = ["project.janet"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "janet-format" }
grammar = "janet"
auto-pairs= { '"' = '"', '(' = ')', '[' = ']', '{' = '}', "`" = "`" }

[[language]]
name = "ec2hx-glob-lang-deps-**-java"
scope = "source.java"
file-types = [{ glob = "deps/**/*.java" }, { glob = "deps/**/*.jav" }, { glob = "deps/**/*.pde" }]
roots = ["pom.xml", "build.gradle", "build.gradle.kts"]
language-servers = [ "jdtls" ]
indent = { unit = "  ", tab-width = 2 }
comment-tokens = ["//"]
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "java"

[[language]]
name = "ec2hx-glob-lang-deps-**-javascript"
scope = "source.js"
language-id = "javascript"
file-types = [{ glob = "deps/**/*.js" }, { glob = "deps/**/*.mjs" }, { glob = "deps/**/*.cjs" }, { glob = "deps/**/*.rules" }, { glob = "deps/**/*.es6" }, { glob = "deps/**/*.pac" }, { glob = "deps/**/.node_repl_history" }, { glob = "deps/**/jakefile" }]
shebangs = ["node"]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "node-debug2", transport = "stdio", quirks = { absolute-paths = true }, templates = [{ name = "source", request = "launch", completion = [ { name = "main", completion = "filename", default = "index.js" } ], args = { program = "{0}" } }] }
grammar = "javascript"

[[language]]
name = "ec2hx-glob-lang-deps-**-jinja"
scope = "text.html.jinja"
file-types = [{ glob = "deps/**/*.jinja" }, { glob = "deps/**/*.jinja2" }, { glob = "deps/**/*.j2" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jinja"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-jjdescription"
scope = "jj.description"
file-types = [{ glob = "deps/**/*.jjdescription" }]
comment-token = "JJ:"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "jjdescription"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-jq"
scope = "source.jq"
file-types = [{ glob = "deps/**/*.jq" }]
comment-token = "#"
language-servers = ["jq-lsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "jq"

[[language]]
name = "ec2hx-glob-lang-deps-**-jsdoc"
scope = "source.jsdoc"
file-types = [{ glob = "deps/**/*.jsdoc" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsdoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-json"
scope = "source.json"
file-types = [{ glob = "deps/**/*.json" }, { glob = "deps/**/*.arb" }, { glob = "deps/**/*.ipynb" }, { glob = "deps/**/*.geojson" }, { glob = "deps/**/*.gltf" }, { glob = "deps/**/*.webmanifest" }, { glob = "deps/**/flake.lock" }, { glob = "deps/**/.babelrc" }, { glob = "deps/**/.bowerrc" }, { glob = "deps/**/.jscrc" }, { glob = "deps/**/*.js.map" }, { glob = "deps/**/*.ts.map" }, { glob = "deps/**/*.css.map" }, { glob = "deps/**/.jslintrc" }, { glob = "deps/**/*.jsonl" }, { glob = "deps/**/*.jsonld" }, { glob = "deps/**/.vuerc" }, { glob = "deps/**/composer.lock" }, { glob = "deps/**/.watchmanconfig" }, { glob = "deps/**/*.avsc" }, { glob = "deps/**/*.ldtk" }, { glob = "deps/**/*.ldtkl" }, { glob = "deps/**/.swift-format" }]
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "json"

[[language]]
name = "ec2hx-glob-lang-deps-**-json5"
scope = "source.json5"
file-types = [{ glob = "deps/**/*.json5" }]
language-servers = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "json5"

[[language]]
name = "ec2hx-glob-lang-deps-**-jsonc"
scope = "source.json"
file-types = [{ glob = "deps/**/*.jsonc" }, { glob = "deps/**/tsconfig.json" }]
grammar = "jsonc"
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-jsonnet"
scope = "source.jsonnet"
file-types = [{ glob = "deps/**/*.libsonnet" }, { glob = "deps/**/*.jsonnet" }]
roots = ["jsonnetfile.json"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "jsonnet-language-server" ]
grammar = "jsonnet"

[[language]]
name = "ec2hx-glob-lang-deps-**-jsx"
scope = "source.jsx"
language-id = "javascriptreact"
file-types = [{ glob = "deps/**/*.jsx" }]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsx"

[[language]]
name = "ec2hx-glob-lang-deps-**-julia"
scope = "source.julia"
file-types = [{ glob = "deps/**/*.jl" }]
shebangs = ["julia"]
roots = ["Manifest.toml", "Project.toml"]
comment-token = "#"
block-comment-tokens = { start = "#=", end = "=#" }
language-servers = [ "julia" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "julia"

[[language]]
name = "ec2hx-glob-lang-deps-**-just"
scope = "source.just"
file-types = [{ glob = "deps/**/*.just" }, { glob = "deps/**/justfile" }, { glob = "deps/**/Justfile" }, { glob = "deps/**/.justfile" }, { glob = "deps/**/.Justfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "just"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-kdl"
scope = "source.kdl"
file-types = [{ glob = "deps/**/*.kdl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "kdl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-koka"
scope = "source.koka"
file-types = [{ glob = "deps/**/*.kk" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koka"]
grammar = "koka"

[[language]]
name = "ec2hx-glob-lang-deps-**-kotlin"
scope = "source.kotlin"
file-types = [{ glob = "deps/**/*.kt" }, { glob = "deps/**/*.kts" }]
roots = ["settings.gradle", "settings.gradle.kts"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "kotlin-language-server" ]
grammar = "kotlin"

[[language]]
name = "ec2hx-glob-lang-deps-**-koto"
scope = "source.koto"
file-types = [{ glob = "deps/**/*.koto" }]
comment-token = "#"
block-comment-tokens = ["#-", "-#"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koto-ls"]
grammar = "koto"

[[language]]
name = "ec2hx-glob-lang-deps-**-latex"
scope = "source.tex"
file-types = [{ glob = "deps/**/*.tex" }, { glob = "deps/**/*.sty" }, { glob = "deps/**/*.cls" }, { glob = "deps/**/*.Rd" }, { glob = "deps/**/*.bbx" }, { glob = "deps/**/*.cbx" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "latex"

[[language]]
name = "ec2hx-glob-lang-deps-**-ld"
scope = "source.ld"
file-types = [{ glob = "deps/**/*.ld" }]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ld"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-ldif"
scope = "source.ldif"
file-types = [{ glob = "deps/**/*.ldif" }]
comment-token = "#"
grammar = "ldif"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-lean"
scope = "source.lean"
file-types = [{ glob = "deps/**/*.lean" }]
roots = [ "lakefile.lean" ]
comment-token = "--"
block-comment-tokens = { start = "/-", end = "-/" }
language-servers = [ "lean" ]
indent = { unit = "  ", tab-width = 2 }
rulers = [101]
text-width = 100
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '⟨' = '⟩' }
grammar = "lean"

[[language]]
name = "ec2hx-glob-lang-deps-**-ledger"
scope = "source.ledger"
file-types = [{ glob = "deps/**/*.ldg" }, { glob = "deps/**/*.ledger" }, { glob = "deps/**/*.journal" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "ledger"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-llvm"
scope = "source.llvm"
file-types = [{ glob = "deps/**/*.ll" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-llvm-mir"
scope = "source.llvm_mir"
file-types = []
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-llvm-mir-yaml"
# TODO allow languages to point to their grammar like so:
#
#     grammar = "yaml"
scope = "source.yaml"
file-types = [{ glob = "deps/**/*.mir" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir-yaml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-log"
scope = "source.log"
file-types = [{ glob = "deps/**/*.log" }]
grammar = "log"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-lpf"
comment-token = "#"
scope = "source.lpf"
file-types = [{ glob = "deps/**/*.lpf" }]
grammar = "lpf"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-lua"
scope = "source.lua"
file-types = [{ glob = "deps/**/*.lua" }]
shebangs = ["lua", "luajit"]
roots = [".luarc.json", ".luacheckrc", ".stylua.toml", "selene.toml", ".git"]
comment-token = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "lua-language-server" ]
grammar = "lua"

[[language]]
name = "ec2hx-glob-lang-deps-**-make"
scope = "source.make"
file-types = [{ glob = "deps/**/Makefile" }, { glob = "deps/**/makefile" }, { glob = "deps/**/*.make" }, { glob = "deps/**/*.mk" }, { glob = "deps/**/*.mak" }, { glob = "deps/**/GNUmakefile" }, { glob = "deps/**/OCamlMakefile" }]
shebangs = ["make", "gmake"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "make"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-markdoc"
scope = "text.markdoc"
block-comment-tokens = { start = "<!--", end = "-->" }
file-types = [{ glob = "deps/**/*.mdoc" }]
language-servers = [ "markdoc-ls" ]
grammar = "markdoc"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-markdown"
scope = "source.md"
file-types = [{ glob = "deps/**/*.md" }, { glob = "deps/**/*.livemd" }, { glob = "deps/**/*.markdown" }, { glob = "deps/**/*.mdx" }, { glob = "deps/**/*.mkd" }, { glob = "deps/**/*.mkdn" }, { glob = "deps/**/*.mdwn" }, { glob = "deps/**/*.mdown" }, { glob = "deps/**/*.markdn" }, { glob = "deps/**/*.mdtxt" }, { glob = "deps/**/*.mdtext" }, { glob = "deps/**/*.workbook" }, { glob = "deps/**/PULLREQ_EDITMSG" }]
roots = [".marksman.toml"]
language-servers = [ "marksman", "markdown-oxide" ]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "markdown"

[[language]]
name = "ec2hx-glob-lang-deps-**-markdown.inline"
scope = "source.markdown.inline"
file-types = []
grammar = "markdown.inline"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-matlab"
scope = "source.m"
file-types = [{ glob = "deps/**/*.m" }]
comment-token = "%"
shebangs = ["octave-cli", "matlab"]
indent = { unit = "  ", tab-width = 2 }
grammar = "matlab"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-mermaid"
scope = "source.mermaid"
file-types = [{ glob = "deps/**/*.mermaid" }, { glob = "deps/**/*.mmd" }]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
grammar = "mermaid"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-meson"
scope = "source.meson"
file-types = [{ glob = "deps/**/meson.build" }, { glob = "deps/**/meson.options" }, { glob = "deps/**/meson_options.txt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["mesonlsp"]
grammar = "meson"

[[language]]
name = "ec2hx-glob-lang-deps-**-mint"
scope = "source.mint"
file-types = [{ glob = "deps/**/*.mint" }]
shebangs = []
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "mint" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "mint"

[[language]]
name = "ec2hx-glob-lang-deps-**-mojo"
scope = "source.mojo"
roots = ["__init__.mojo"]
file-types = [{ glob = "deps/**/*.mojo" }, { glob = "deps/**/*.🔥" }]
language-servers = [ "mojo-lsp" ]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "magic", args = ["run", "mojo" , "format", "-q", "-"]}
grammar = "mojo"

[[language]]
name = "ec2hx-glob-lang-deps-**-move"
scope = "source.move"
roots = ["Move.toml"]
file-types = [{ glob = "deps/**/*.move" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = []
grammar = "move"

[[language]]
name = "ec2hx-glob-lang-deps-**-msbuild"
scope = "source.msbuild"
file-types = [{ glob = "deps/**/*.proj" }, { glob = "deps/**/*.vbproj" }, { glob = "deps/**/*.csproj" }, { glob = "deps/**/*.fsproj" }, { glob = "deps/**/*.targets" }, { glob = "deps/**/*.props" }]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "msbuild"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-nasm"
scope = "source.nasm"
file-types = [{ glob = "deps/**/*.asm" }, { glob = "deps/**/*.S" }, { glob = "deps/**/*.nasm" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "nasm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-nestedtext"
scope = "text.nested"
file-types = [{ glob = "deps/**/*.nt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nestedtext"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-nginx"
scope = "source.nginx"
file-types = [{ glob = "deps/**/sites-available/*.conf" }, { glob = "deps/**/sites-enabled/*.conf" }, { glob = "deps/**/nginx.conf" }, { glob = "deps/**/conf.d/*.conf" }]
roots = ["nginx.conf"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nginx"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-nickel"
scope = "source.nickel"
file-types = [{ glob = "deps/**/*.ncl" }]
shebangs = []
comment-token = "#"
language-servers = [ "nls" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "nickel"

[[language]]
name = "ec2hx-glob-lang-deps-**-nim"
scope = "source.nim"
file-types = [{ glob = "deps/**/*.nim" }, { glob = "deps/**/*.nims" }, { glob = "deps/**/*.nimble" }]
shebangs = []
comment-token = "#"
block-comment-tokens = { start = "#[", end = "]#" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nimlangserver" ]
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '{' = '}' }
grammar = "nim"

[[language]]
name = "ec2hx-glob-lang-deps-**-nix"
scope = "source.nix"
file-types = [{ glob = "deps/**/*.nix" }]
shebangs = []
comment-token = "#"
language-servers = [ "nil", "nixd" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "nix"

[[language]]
name = "ec2hx-glob-lang-deps-**-nu"
scope = "source.nu"
file-types = [{ glob = "deps/**/*.nu" }, { glob = "deps/**/*.nuon" }]
shebangs = ["nu"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nu-lsp" ]
grammar = "nu"

[[language]]
name = "ec2hx-glob-lang-deps-**-nunjucks"
scope = "text.html.nunjucks"
file-types = [{ glob = "deps/**/*.njk" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "nunjucks"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-ocaml"
scope = "source.ocaml"
file-types = [{ glob = "deps/**/*.ml" }]
shebangs = ["ocaml", "ocamlrun", "ocamlscript"]
block-comment-tokens = { start = "(*", end = "*)" }
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml"

[[language]]
name = "ec2hx-glob-lang-deps-**-ocaml-interface"
scope = "source.ocaml.interface"
file-types = [{ glob = "deps/**/*.mli" }]
shebangs = []
block-comment-tokens = { start = "(*", end = "*)" }
comment-token = "(**)"
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml-interface"

[[language]]
name = "ec2hx-glob-lang-deps-**-odin"
auto-format = true
scope = "source.odin"
file-types = [{ glob = "deps/**/*.odin" }]
roots = ["ols.json", "main.odin"]
language-servers = [ "ols" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "odinfmt", args = [ "-stdin" ] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "odin"

[[language]]
name = "ec2hx-glob-lang-deps-**-ohm"
scope = "source.ohm"
file-types = [{ glob = "deps/**/*.ohm" }]
comment-token = "//"
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "ohm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-opencl"
scope = "source.cl"
file-types = [{ glob = "deps/**/*.cl" }]
comment-token = "//"
language-servers = [ "clangd" ]
grammar = "opencl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-openscad"
scope = "source.openscad"
file-types = [{ glob = "deps/**/*.scad" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "openscad-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "openscad"

[[language]]
name = "ec2hx-glob-lang-deps-**-org"
scope = "source.org"
file-types = [{ glob = "deps/**/*.org" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "org"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-pascal"
scope = "source.pascal"
file-types = [{ glob = "deps/**/*.pas" }, { glob = "deps/**/*.pp" }, { glob = "deps/**/*.inc" }, { glob = "deps/**/*.lpr" }, { glob = "deps/**/*.lfm" }]
comment-token = "//"
block-comment-tokens = { start = "{", end = "}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "pasls" ]
grammar = "pascal"

[[language]]
name = "ec2hx-glob-lang-deps-**-passwd"
scope = "source.passwd"
file-types = [{ glob = "deps/**/passwd" }]
grammar = "passwd"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-pem"
scope = "source.pem"
file-types = [{ glob = "deps/**/*.pem" }, { glob = "deps/**/*.cert" }, { glob = "deps/**/*.crt" }]
grammar = "pem"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-perl"
scope = "source.perl"
file-types = [{ glob = "deps/**/*.pl" }, { glob = "deps/**/*.pm" }, { glob = "deps/**/*.t" }, { glob = "deps/**/*.psgi" }, { glob = "deps/**/*.raku" }, { glob = "deps/**/*.rakumod" }, { glob = "deps/**/*.rakutest" }, { glob = "deps/**/*.rakudoc" }, { glob = "deps/**/*.nqp" }, { glob = "deps/**/*.p6" }, { glob = "deps/**/*.pl6" }, { glob = "deps/**/*.pm6" }]
shebangs = ["perl"]
comment-token = "#"
language-servers = [ "perlnavigator" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "perl"

[[language]]
name = "ec2hx-glob-lang-deps-**-pest"
scope = "source.pest"
file-types = [{ glob = "deps/**/*.pest" }]
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pest-language-server"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "pest"

[[language]]
name = "ec2hx-glob-lang-deps-**-php"
scope = "source.php"
file-types = [{ glob = "deps/**/*.php" }, { glob = "deps/**/*.inc" }, { glob = "deps/**/*.php4" }, { glob = "deps/**/*.php5" }, { glob = "deps/**/*.phtml" }, { glob = "deps/**/*.ctp" }]
shebangs = ["php"]
roots = ["composer.json", "index.php"]
comment-token = "//"
language-servers = [ "intelephense" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "php"

[[language]]
name = "ec2hx-glob-lang-deps-**-php-only"
scope = "source.php-only"
file-types = []
indent = { unit = "  ", tab-width = 2 }
roots = ["composer.json", "index.php"]
grammar = "php-only"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-pkgbuild"
scope = "source.bash"
file-types = [{ glob = "deps/**/PKGBUILD" }]
comment-token = "#"
grammar = "pkgbuild"
language-servers = [
  "pkgbuild-language-server",
  { except-features = [
    "diagnostics",
  ], name = "bash-language-server" },
]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-pkl"
scope = "source.pkl"
file-types = [{ glob = "deps/**/*.pkl" }, { glob = "deps/**/*.pcf" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "pkl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-po"
scope = "source.po"
file-types = [{ glob = "deps/**/*.po" }, { glob = "deps/**/*.pot" }]
comment-token = "#"
grammar = "po"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-pod"
scope = "source.pod"
file-types = [{ glob = "deps/**/*.pod" }]
grammar = "pod"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-ponylang"
scope = "source.pony"
file-types = [{ glob = "deps/**/*.pony" }]
roots = ["corral.json", "lock.json"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "ponylang"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-powershell"
scope = "source.powershell"
file-types = [{ glob = "deps/**/*.ps1" }, { glob = "deps/**/*.psm1" }, { glob = "deps/**/*.psd1" }, { glob = "deps/**/*.pscc" }, { glob = "deps/**/*.psrc" }]
shebangs = [ "pwsh", "powershell" ]
comment-token = '#'
block-comment-tokens = { start = "<#", end = "#>" }
indent = { unit = "  ", tab-width = 2 }
grammar = "powershell"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-prisma"
scope = "source.prisma"
file-types = [{ glob = "deps/**/*.prisma" }]
roots = ["package.json"]
comment-token = "//"
language-servers = [ "prisma-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "prisma"

[[language]]
name = "ec2hx-glob-lang-deps-**-prolog"
scope = "source.prolog"
file-types = [{ glob = "deps/**/*.pl" }, { glob = "deps/**/*.prolog" }]
shebangs = ["swipl"]
comment-token = "%"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "swipl" ]
grammar = "prolog"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-protobuf"
scope = "source.proto"
file-types = [{ glob = "deps/**/*.proto" }]
language-servers = [ "bufls", "pbkit" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "protobuf"

[[language]]
name = "ec2hx-glob-lang-deps-**-prql"
scope = "source.prql"
file-types = [{ glob = "deps/**/*.prql" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "prql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-purescript"
scope = "source.purescript"
file-types = [{ glob = "deps/**/*.purs" }]
roots = ["spago.yaml", "spago.dhall", "bower.json"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "purescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "purs-tidy", args = ["format"] }
grammar = "purescript"

[[language]]
name = "ec2hx-glob-lang-deps-**-python"
scope = "source.python"
file-types = [{ glob = "deps/**/*.py" }, { glob = "deps/**/*.pyi" }, { glob = "deps/**/*.py3" }, { glob = "deps/**/*.pyw" }, { glob = "deps/**/*.ptl" }, { glob = "deps/**/*.rpy" }, { glob = "deps/**/*.cpy" }, { glob = "deps/**/*.ipy" }, { glob = "deps/**/*.pyt" }, { glob = "deps/**/.python_history" }, { glob = "deps/**/.pythonstartup" }, { glob = "deps/**/.pythonrc" }, { glob = "deps/**/SConstruct" }, { glob = "deps/**/SConscript" }]
shebangs = ["python", "uv"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["ruff", "jedi", "pylsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "python"

[[language]]
name = "ec2hx-glob-lang-deps-**-qml"
scope = "source.qml"
file-types = [{ glob = "deps/**/*.qml" }]
language-servers = [ "qmlls" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "qml"

[[language]]
name = "ec2hx-glob-lang-deps-**-quint"
scope = "source.quint"
file-types = [{ glob = "deps/**/*.qnt" }]
language-servers = ["quint-language-server"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "quint"

[[language]]
name = "ec2hx-glob-lang-deps-**-r"
scope = "source.r"
file-types = [{ glob = "deps/**/*.r" }, { glob = "deps/**/*.R" }, { glob = "deps/**/.Rprofile" }, { glob = "deps/**/Rprofile.site" }, { glob = "deps/**/.RHistory" }]
shebangs = ["r", "R"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "r" ]
grammar = "r"

[[language]]
name = "ec2hx-glob-lang-deps-**-racket"
scope = "source.racket"
file-types = [{ glob = "deps/**/*.rkt" }, { glob = "deps/**/*.rktd" }, { glob = "deps/**/*.rktl" }, { glob = "deps/**/*.scrbl" }]
shebangs = ["racket"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "#|", end = "|#" }
language-servers = [ "racket" ]
grammar = "racket"

[[language]]
name = "ec2hx-glob-lang-deps-**-regex"
scope = "source.regex"
file-types = [{ glob = "deps/**/*.regex" }, { glob = "deps/**/.Rbuildignore" }]
grammar = "regex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-rego"
scope = "source.rego"
file-types = [{ glob = "deps/**/*.rego" }]
auto-format = true
comment-token = "#"
language-servers = [ "regols" ]
grammar = "rego"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-rescript"
scope = "source.rescript"
file-types = [{ glob = "deps/**/*.res" }]
roots = ["bsconfig.json"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "rescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "rescript"

[[language]]
name = "ec2hx-glob-lang-deps-**-rmarkdown"
scope = "source.rmd"
language-id = "rmd"
file-types = [{ glob = "deps/**/*.rmd" }, { glob = "deps/**/*.Rmd" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "rmarkdown"
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "r" ]

[[language]]
name = "ec2hx-glob-lang-deps-**-robot"
scope = "source.robot"
file-types = [{ glob = "deps/**/*.robot" }, { glob = "deps/**/*.resource" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "robotframework_ls" ]
grammar = "robot"

[[language]]
name = "ec2hx-glob-lang-deps-**-ron"
scope = "source.ron"
file-types = [{ glob = "deps/**/*.ron" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ron"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-rst"
scope = "source.rst"
comment-token = ".."
file-types = [{ glob = "deps/**/*.rst" }]
grammar = "rst"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-ruby"
scope = "source.ruby"
file-types = [{ glob = "deps/**/*.rb" }, { glob = "deps/**/*.rake" }, { glob = "deps/**/*.irb" }, { glob = "deps/**/*.gemspec" }, { glob = "deps/**/*.rabl" }, { glob = "deps/**/*.jbuilder" }, { glob = "deps/**/*.jb" }, { glob = "deps/**/*.podspec" }, { glob = "deps/**/*.rjs" }, { glob = "deps/**/*.rbi" }, { glob = "deps/**/*.rbs" }, { glob = "deps/**/rakefile" }, { glob = "deps/**/gemfile" }, { glob = "deps/**/Rakefile" }, { glob = "deps/**/Gemfile" }, { glob = "deps/**/Podfile" }, { glob = "deps/**/Vagrantfile" }, { glob = "deps/**/Brewfile" }, { glob = "deps/**/Guardfile" }, { glob = "deps/**/Capfile" }, { glob = "deps/**/Cheffile" }, { glob = "deps/**/Hobofile" }, { glob = "deps/**/Appraisals" }, { glob = "deps/**/Rantfile" }, { glob = "deps/**/Berksfile" }, { glob = "deps/**/Berksfile.lock" }, { glob = "deps/**/Thorfile" }, { glob = "deps/**/Puppetfile" }, { glob = "deps/**/Fastfile" }, { glob = "deps/**/Appfile" }, { glob = "deps/**/Deliverfile" }, { glob = "deps/**/Matchfile" }, { glob = "deps/**/Scanfile" }, { glob = "deps/**/Snapfile" }, { glob = "deps/**/Gymfile" }]
shebangs = ["ruby"]
comment-token = "#"
language-servers = [ "solargraph" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "ruby"

[[language]]
name = "ec2hx-glob-lang-deps-**-rust"
scope = "source.rust"
file-types = [{ glob = "deps/**/*.rs" }]
roots = ["Cargo.toml", "Cargo.lock"]
shebangs = ["rust-script", "cargo"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
  { start = "/*!", end = "*/" },
]
language-servers = [ "rust-analyzer" ]
indent = { unit = "  ", tab-width = 2 }
persistent-diagnostic-sources = ["rustc", "clippy"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}" } }, { name = "binary (terminal)", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}", runInTerminal = true } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "rust"

[[language]]
name = "ec2hx-glob-lang-deps-**-sage"
scope = "source.sage"
file-types = [{ glob = "deps/**/*.sage" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "sage"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-scala"
scope = "source.scala"
roots = ["build.sbt", "build.sc", "build.gradle", "build.gradle.kts", "pom.xml", ".scala-build"]
file-types = [{ glob = "deps/**/*.scala" }, { glob = "deps/**/*.sbt" }, { glob = "deps/**/*.sc" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "metals" ]
grammar = "scala"

[[language]]
name = "ec2hx-glob-lang-deps-**-scheme"
scope = "source.scheme"
file-types = [{ glob = "deps/**/*.ss" }, { glob = "deps/**/*.scm" }]
shebangs = ["scheme", "guile", "chicken"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "scheme"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-scss"
scope = "source.scss"
file-types = [{ glob = "deps/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "scss"

[[language]]
name = "ec2hx-glob-lang-deps-**-slint"
scope = "source.slint"
file-types = [{ glob = "deps/**/*.slint" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "slint-lsp" ]
grammar = "slint"

[[language]]
name = "ec2hx-glob-lang-deps-**-smali"
scope = "source.smali"
file-types = [{ glob = "deps/**/*.smali" }]
comment-token = "#"
roots = []
indent = { unit = "  ", tab-width = 2 }
grammar = "smali"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-smithy"
scope = "source.smithy"
file-types = [{ glob = "deps/**/*.smithy" }]
roots = ["smithy-build.json"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cs" ]
grammar = "smithy"

[[language]]
name = "ec2hx-glob-lang-deps-**-sml"
scope = "source.sml"
file-types = [{ glob = "deps/**/*.sml" }]
block-comment-tokens = { start = "(*", end = "*)" }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "sml"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-snakemake"
scope = "source.snakemake"
roots = ["Snakefile", "config.yaml", "environment.yaml", "workflow/"]
file-types = [{ glob = "deps/**/*.smk" }, { glob = "deps/**/Snakefile" }]
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pylsp" ]
formatter= { command = "snakefmt", args = ["-"] }
grammar = "snakemake"

[[language]]
name = "ec2hx-glob-lang-deps-**-solidity"
scope = "source.sol"
file-types = [{ glob = "deps/**/*.sol" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "solc" ]
grammar = "solidity"

[[language]]
name = "ec2hx-glob-lang-deps-**-spade"
scope = "source.spade"
roots = ["swim.toml"]
file-types = [{ glob = "deps/**/*.spade" }]
comment-tokens = ["//", "///"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
language-servers = [ "spade-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '<' = '>' }
grammar = "spade"

[[language]]
name = "ec2hx-glob-lang-deps-**-spicedb"
scope = "source.zed"
file-types = [{ glob = "deps/**/*.zed" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "spicedb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-sql"
scope = "source.sql"
file-types = [{ glob = "deps/**/*.sql" }, { glob = "deps/**/*.dsql" }]
comment-token = "--"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "sql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-sshclientconfig"
scope = "source.sshclientconfig"
file-types = [{ glob = "deps/**/.ssh/config" }, { glob = "deps/**//etc/ssh/ssh_config" }, { glob = "deps/**/ssh_config.d/*.conf" }]
comment-token = "#"
grammar = "sshclientconfig"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-starlark"
scope = "source.starlark"
file-types = [{ glob = "deps/**/*.bzl" }, { glob = "deps/**/*.bazel" }, { glob = "deps/**/*.star" }, { glob = "deps/**/BUILD" }, { glob = "deps/**/BUILD.*" }, { glob = "deps/**/Tiltfile" }, { glob = "deps/**/WORKSPACE" }, { glob = "deps/**/WORKSPACE.bzlmod" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "starlark"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-strace"
scope = "source.strace"
file-types = [{ glob = "deps/**/*.strace" }]
grammar = "strace"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-supercollider"
scope = "source.supercollider"
file-types = [{ glob = "deps/**/*.scd" }, { glob = "deps/**/*.sc" }, { glob = "deps/**/*.quark" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "supercollider"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-svelte"
scope = "source.svelte"
file-types = [{ glob = "deps/**/*.svelte" }]
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "svelteserver" ]
grammar = "svelte"

[[language]]
name = "ec2hx-glob-lang-deps-**-sway"
scope = "source.sway"
file-types = [{ glob = "deps/**/*.sw" }]
language-servers = [ "forc" ]
roots = ["Forc.toml", "Forc.lock"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
grammar = "sway"

[[language]]
name = "ec2hx-glob-lang-deps-**-swift"
scope = "source.swift"
file-types = [{ glob = "deps/**/*.swift" }, { glob = "deps/**/*.swiftinterface" }]
roots = [ "Package.swift" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
formatter = { command = "swift-format" }
language-servers = [ "sourcekit-lsp" ]
grammar = "swift"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-t32"
scope = "source.t32"
file-types = [{ glob = "deps/**/*.cmm" }, { glob = "deps/**/*.t32" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "t32"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-tablegen"
scope = "source.tablegen"
file-types = [{ glob = "deps/**/*.td" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "tablegen"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-tact"
scope = "source.tact"
file-types = [{ glob = "deps/**/*.tact" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "tact"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-task"
scope = "source.task"
file-types = [{ glob = "deps/**/*.task" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "task"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-tcl"
scope = "source.tcl"
file-types = [{ glob = "deps/**/*.tcl" }]
shebangs = [ "tclsh", "tclish", "jimsh", "wish" ]
comment-token = '#'
grammar = "tcl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-teal"
scope = "source.tl"
file-types = [{ glob = "deps/**/*.tl" }]
comment-tokens = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
roots = [ "tlconfig.lua" ]
language-servers = [ "teal-lsp" ]
grammar = "teal"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-templ"
scope = "source.templ"
file-types = [{ glob = "deps/**/*.templ" }]
roots = ["go.work", "go.mod"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "templ" ]
grammar = "templ"

[[language]]
name = "ec2hx-glob-lang-deps-**-textproto"
file-types = [{ glob = "deps/**/*.txtpb" }, { glob = "deps/**/*.textpb" }, { glob = "deps/**/*.textproto" }]
comment-token = "#"
scope = "source.textproto"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "txtpbfmt" }
auto-format = true
grammar = "textproto"

[[language]]
name = "ec2hx-glob-lang-deps-**-tfvars"
scope = "source.tfvars"
language-id = "terraform-vars"
file-types = [{ glob = "deps/**/*.tfvars" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "tfvars"

[[language]]
name = "ec2hx-glob-lang-deps-**-thrift"
scope = "source.thrift"
file-types = [{ glob = "deps/**/*.thrift" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "thrift"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-todotxt"
scope = "text.todotxt"
file-types = [{ glob = "deps/**/*.todo.txt" }, { glob = "deps/**/*.todotxt" }]
formatter = { command = "sort" }
auto-format = true
grammar = "todotxt"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-deps-**-toml"
scope = "source.toml"
file-types = [{ glob = "deps/**/*.toml" }, { glob = "deps/**/pdm.lock" }, { glob = "deps/**/poetry.lock" }, { glob = "deps/**/Cargo.lock" }, { glob = "deps/**/uv.lock" }]
comment-token = "#"
language-servers = [ "taplo" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "toml"

[[language]]
name = "ec2hx-glob-lang-deps-**-tsq"
scope = "source.tsq"
file-types = [{ glob = "deps/**/queries/*.scm" }, { glob = "deps/**/injections.scm" }, { glob = "deps/**/highlights.scm" }, { glob = "deps/**/indents.scm" }, { glob = "deps/**/textobjects.scm" }, { glob = "deps/**/locals.scm" }, { glob = "deps/**/tags.scm" }]
comment-token = ";"
language-servers = ["ts_query_ls"]
grammar = "tsq"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-deps-**-tsx"
scope = "source.tsx"
language-id = "typescriptreact"
file-types = [{ glob = "deps/**/*.tsx" }]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "tsx"

[[language]]
name = "ec2hx-glob-lang-deps-**-twig"
scope = "source.twig"
file-types = [{ glob = "deps/**/*.twig" }]
block-comment-tokens = { start = "{#", end = "#}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "twig"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-typescript"
scope = "source.ts"
language-id = "typescript"
file-types = [{ glob = "deps/**/*.ts" }, { glob = "deps/**/*.mts" }, { glob = "deps/**/*.cts" }]
shebangs = ["deno", "bun", "ts-node"]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "typescript"

[[language]]
name = "ec2hx-glob-lang-deps-**-typespec"
scope = "source.typespec"
language-id = "typespec"
file-types = [{ glob = "deps/**/*.tsp" }]
roots = ["tspconfig.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["typespec"]
indent = { unit = "  ", tab-width = 2 }
grammar = "typespec"

[[language]]
name = "ec2hx-glob-lang-deps-**-typst"
scope = "source.typst"
file-types = [{ glob = "deps/**/*.typst" }, { glob = "deps/**/*.typ" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["tinymist", "typst-lsp"]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '$' = '$', '"' = '"' }
grammar = "typst"

[[language]]
name = "ec2hx-glob-lang-deps-**-ungrammar"
scope = "source.ungrammar"
file-types = [{ glob = "deps/**/*.ungram" }, { glob = "deps/**/*.ungrammar" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "ungrammar"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-unison"
scope = "source.unison"
file-types = [{ glob = "deps/**/*.u" }]
shebangs = []
auto-format = true
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
grammar = "unison"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-deps-**-unknown"
scope = "text.plain"
file-types = [{ glob = "*.foo" }, { glob = "*.txt" }]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-uxntal"
scope = "source.tal"
file-types = [{ glob = "deps/**/*.tal" }]
auto-format = true
block-comment-tokens = { start = "(", end = ")" }
grammar = "uxntal"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-deps-**-v"
scope = "source.v"
file-types = [{ glob = "deps/**/*.v" }, { glob = "deps/**/*.vv" }, { glob = "deps/**/*.vsh" }]
shebangs = ["v run"]
roots = ["v.mod"]
language-servers = [ "vlang-language-server" ]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "v"

[[language]]
name = "ec2hx-glob-lang-deps-**-vala"
scope = "source.vala"
file-types = [{ glob = "deps/**/*.vala" }, { glob = "deps/**/*.vapi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vala-language-server" ]
grammar = "vala"

[[language]]
name = "ec2hx-glob-lang-deps-**-vento"
scope = "text.html.vto"
file-types = [{ glob = "deps/**/*.vto" }]
block-comment-tokens = { start = "{{#", end = "#}}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "vento"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-verilog"
scope = "source.verilog"
file-types = [{ glob = "deps/**/*.v" }, { glob = "deps/**/*.vh" }, { glob = "deps/**/*.sv" }, { glob = "deps/**/*.svh" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "svlangserver" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "verilog"

[[language]]
name = "ec2hx-glob-lang-deps-**-vhdl"
scope = "source.vhdl"
file-types = [{ glob = "deps/**/*.vhd" }, { glob = "deps/**/*.vhdl" }]
comment-token = "--"
language-servers = [ "vhdl_ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "vhdl"

[[language]]
name = "ec2hx-glob-lang-deps-**-vhs"
scope = "source.vhs"
file-types = [{ glob = "deps/**/*.tape" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "vhs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-vue"
scope = "source.vue"
file-types = [{ glob = "deps/**/*.vue" }]
roots = ["package.json"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vuels" ]
grammar = "vue"

[[language]]
name = "ec2hx-glob-lang-deps-**-wast"
scope = "source.wast"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "deps/**/*.wast" }]
grammar = "wast"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-wat"
scope = "source.wat"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "deps/**/*.wat" }]
grammar = "wat"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-webc"
scope = "text.html.webc"
file-types = [{ glob = "deps/**/*.webc" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "webc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-wgsl"
scope = "source.wgsl"
file-types = [{ glob = "deps/**/*.wgsl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "wgsl_analyzer" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "wgsl"

[[language]]
name = "ec2hx-glob-lang-deps-**-wit"
scope = "source.wit"
file-types = [{ glob = "deps/**/*.wit" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "wit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-wren"
scope = "source.wren"
file-types = [{ glob = "deps/**/*.wren" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "wren"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-xit"
scope = "source.xit"
file-types = [{ glob = "deps/**/*.xit" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "xit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-xml"
scope = "source.xml"
file-types = [{ glob = "deps/**/*.xml" }, { glob = "deps/**/*.mobileconfig" }, { glob = "deps/**/*.plist" }, { glob = "deps/**/*.xib" }, { glob = "deps/**/*.storyboard" }, { glob = "deps/**/*.svg" }, { glob = "deps/**/*.xsd" }, { glob = "deps/**/*.gml" }, { glob = "deps/**/*.xaml" }, { glob = "deps/**/*.gir" }, { glob = "deps/**/*.rss" }, { glob = "deps/**/*.atom" }, { glob = "deps/**/*.opml" }, { glob = "deps/**/*.policy" }, { glob = "deps/**/*.ascx" }, { glob = "deps/**/*.axml" }, { glob = "deps/**/*.axaml" }, { glob = "deps/**/*.bpmn" }, { glob = "deps/**/*.cpt" }, { glob = "deps/**/*.csl" }, { glob = "deps/**/*.csproj.user" }, { glob = "deps/**/*.dita" }, { glob = "deps/**/*.ditamap" }, { glob = "deps/**/*.dtml" }, { glob = "deps/**/*.fxml" }, { glob = "deps/**/*.iml" }, { glob = "deps/**/*.isml" }, { glob = "deps/**/*.jmx" }, { glob = "deps/**/*.launch" }, { glob = "deps/**/*.menu" }, { glob = "deps/**/*.mxml" }, { glob = "deps/**/*.nuspec" }, { glob = "deps/**/*.osc" }, { glob = "deps/**/*.osm" }, { glob = "deps/**/*.pt" }, { glob = "deps/**/*.publishsettings" }, { glob = "deps/**/*.pubxml" }, { glob = "deps/**/*.pubxml.user" }, { glob = "deps/**/*.rbxlx" }, { glob = "deps/**/*.rbxmx" }, { glob = "deps/**/*.rng" }, { glob = "deps/**/*.shproj" }, { glob = "deps/**/*.tld" }, { glob = "deps/**/*.tmx" }, { glob = "deps/**/*.vbproj.user" }, { glob = "deps/**/*.vcxproj" }, { glob = "deps/**/*.vcxproj.filters" }, { glob = "deps/**/*.wsdl" }, { glob = "deps/**/*.wxi" }, { glob = "deps/**/*.wxs" }, { glob = "deps/**/*.xbl" }, { glob = "deps/**/*.xlf" }, { glob = "deps/**/*.xliff" }, { glob = "deps/**/*.xpdl" }, { glob = "deps/**/*.xul" }, { glob = "deps/**/*.xoml" }, { glob = "deps/**/*.musicxml" }, { glob = "deps/**/*.glif" }, { glob = "deps/**/*.ui" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "xml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-xtc"
scope = "source.xtc"
file-types = [{ glob = "deps/**/*.xtc" }, { glob = "deps/**/*.xpc" }, { glob = "deps/**/*.xoa" }]
comment-token = ";"
grammar = "xtc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-yaml"
scope = "source.yaml"
file-types = [{ glob = "deps/**/*.yml" }, { glob = "deps/**/*.yaml" }, { glob = "deps/**/.prettierrc" }, { glob = "deps/**/.clangd" }, { glob = "deps/**/.clang-format" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "yaml-language-server", "ansible-language-server" ]
grammar = "yaml"

[[language]]
name = "ec2hx-glob-lang-deps-**-yuck"
scope = "source.yuck"
file-types = [{ glob = "deps/**/*.yuck" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "yuck"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-deps-**-zig"
scope = "source.zig"
file-types = [{ glob = "deps/**/*.zig" }, { glob = "deps/**/*.zon" }]
roots = ["build.zig"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
language-servers = [ "zls" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "zig" , args = ["fmt", "--stdin"] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "zig"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ada"
scope = "source.ada"
file-types = [{ glob = "test/fixtures/**/*.adb" }, { glob = "test/fixtures/**/*.ads" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-language-server"]
grammar = "ada"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-adl"
scope = "source.adl"
file-types = [{ glob = "test/fixtures/**/*.adl" }]
roots = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '<' = '>' }
grammar = "adl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-agda"
scope = "source.agda"
file-types = [{ glob = "test/fixtures/**/*.agda" }]
roots = []
comment-token = "--"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', "'" = "'", '{' = '}', '(' = ')', '[' = ']' }
grammar = "agda"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-amber"
scope = "source.ab"
file-types = [{ glob = "test/fixtures/**/*.ab" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "amber"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-astro"
scope = "source.astro"
file-types = [{ glob = "test/fixtures/**/*.astro" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "astro"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-awk"
scope = "source.awk"
file-types = [{ glob = "test/fixtures/**/*.awk" }, { glob = "test/fixtures/**/*.gawk" }, { glob = "test/fixtures/**/*.nawk" }, { glob = "test/fixtures/**/*.mawk" }]
comment-token = "#"
language-servers = [ "awk-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "awk"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-bash"
scope = "source.bash"
file-types = [{ glob = "test/fixtures/**/*.sh" }, { glob = "test/fixtures/**/*.bash" }, { glob = "test/fixtures/**/*.ash" }, { glob = "test/fixtures/**/*.dash" }, { glob = "test/fixtures/**/*.ksh" }, { glob = "test/fixtures/**/*.mksh" }, { glob = "test/fixtures/**/*.zsh" }, { glob = "test/fixtures/**/*.zshenv" }, { glob = "test/fixtures/**/*.zlogin" }, { glob = "test/fixtures/**/*.zlogout" }, { glob = "test/fixtures/**/*.zprofile" }, { glob = "test/fixtures/**/*.zshrc" }, { glob = "test/fixtures/**/*.eclass" }, { glob = "test/fixtures/**/*.ebuild" }, { glob = "test/fixtures/**/*.bazelrc" }, { glob = "test/fixtures/**/*.Renviron" }, { glob = "test/fixtures/**/*.zsh-theme" }, { glob = "test/fixtures/**/*.cshrc" }, { glob = "test/fixtures/**/*.tcshrc" }, { glob = "test/fixtures/**/*.bashrc_Apple_Terminal" }, { glob = "test/fixtures/**/*.zshrc_Apple_Terminal" }, { glob = "test/fixtures/**/i3/config" }, { glob = "test/fixtures/**/sway/config" }, { glob = "test/fixtures/**/tmux.conf" }, { glob = "test/fixtures/**/.bash_history" }, { glob = "test/fixtures/**/.bash_login" }, { glob = "test/fixtures/**/.bash_logout" }, { glob = "test/fixtures/**/.bash_profile" }, { glob = "test/fixtures/**/.bashrc" }, { glob = "test/fixtures/**/.profile" }, { glob = "test/fixtures/**/.zshenv" }, { glob = "test/fixtures/**/.zlogin" }, { glob = "test/fixtures/**/.zlogout" }, { glob = "test/fixtures/**/.zprofile" }, { glob = "test/fixtures/**/.zshrc" }, { glob = "test/fixtures/**/.zimrc" }, { glob = "test/fixtures/**/APKBUILD" }, { glob = "test/fixtures/**/.bash_aliases" }, { glob = "test/fixtures/**/.Renviron" }, { glob = "test/fixtures/**/.xprofile" }, { glob = "test/fixtures/**/.xsession" }, { glob = "test/fixtures/**/.xsessionrc" }, { glob = "test/fixtures/**/.yashrc" }, { glob = "test/fixtures/**/.yash_profile" }, { glob = "test/fixtures/**/.hushlogin" }]
shebangs = ["sh", "bash", "dash", "zsh"]
comment-token = "#"
language-servers = [ "bash-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "bash"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-bass"
scope = "source.bass"
file-types = [{ glob = "test/fixtures/**/*.bass" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bass" ]
grammar = "bass"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-beancount"
scope = "source.beancount"
file-types = [{ glob = "test/fixtures/**/*.beancount" }, { glob = "test/fixtures/**/*.bean" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "beancount"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-bibtex"
scope = "source.bib"
file-types = [{ glob = "test/fixtures/**/*.bib" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter= { command = 'bibtex-tidy', args = [
  "-",
  "--curly",
  "--drop-all-caps",
  "--remove-empty-fields",
  "--sort-fields",
  "--sort=year,author,id",
  "--strip-enclosing-braces",
  "--trailing-commas",
] }
grammar = "bibtex"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-bicep"
scope = "source.bicep"
file-types = [{ glob = "test/fixtures/**/*.bicep" }, { glob = "test/fixtures/**/*.bicepparam" }]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bicep-langserver" ]
grammar = "bicep"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-bitbake"
language-servers = [ "bitbake-language-server" ]
scope = "source.bitbake"
file-types = [{ glob = "test/fixtures/**/*.bb" }, { glob = "test/fixtures/**/*.bbappend" }, { glob = "test/fixtures/**/*.bbclass" }, { glob = "test/fixtures/**/conf/*.conf" }, { glob = "test/fixtures/**/conf/*/*.{inc,conf}" }, { glob = "test/fixtures/**/recipe-*/*/*.inc" }]
comment-token = "#"
grammar = "bitbake"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-blade"
scope = "source.blade.php"
file-types = [{ glob = "test/fixtures/**/*.blade.php" }, { glob = "test/fixtures/**/*.blade" }]
roots = ["composer.json", "index.php"]
grammar = "blade"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-blueprint"
scope = "source.blueprint"
file-types = [{ glob = "test/fixtures/**/*.blp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "blueprint-compiler" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "blueprint"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-c"
scope = "source.c"
file-types = [{ glob = "test/fixtures/**/*.c" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "c"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-c-sharp"
scope = "source.csharp"
file-types = [{ glob = "test/fixtures/**/*.cs" }, { glob = "test/fixtures/**/*.csx" }, { glob = "test/fixtures/**/*.cake" }]
roots = ["sln", "csproj"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "omnisharp" ]
debugger= { name = "netcoredbg", transport = "tcp", command = "netcoredbg", args = [ "--interpreter=vscode" ], port-arg = "--server={}", templates = [{ name = "launch", request = "launch", completion = [ { name = "path to dll", completion = "filename" } ], args = { type = "coreclr", console = "internalConsole", internalConsoleOptions = "openOnSessionStart", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { processId = "{0}" } }] }
grammar = "c-sharp"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-cabal"
scope = "source.cabal"
file-types = [{ glob = "test/fixtures/**/*.cabal" }]
roots = ["cabal.project", "Setup.hs"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "--"
language-servers = [ "haskell-language-server" ]
grammar = "cabal"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-cairo"
scope = "source.cairo"
file-types = [{ glob = "test/fixtures/**/*.cairo" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
# auto-format = true
language-servers = [ "cairo-language-server" ]
grammar = "cairo"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-capnp"
scope = "source.capnp"
file-types = [{ glob = "test/fixtures/**/*.capnp" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "capnp"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-cel"
scope = "source.cel"
file-types = [{ glob = "test/fixtures/**/*.cel" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cel"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-circom"
scope            = "source.circom"
file-types = [{ glob = "test/fixtures/**/*.circom" }]
roots            = ["package.json"]
comment-tokens   = "//"
indent = { unit = "  ", tab-width = 2 }
auto-format      = false
language-servers = ["circom-lsp"]
grammar = "circom"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-clojure"
scope = "source.clojure"
file-types = [{ glob = "test/fixtures/**/*.clj" }, { glob = "test/fixtures/**/*.cljs" }, { glob = "test/fixtures/**/*.cljc" }, { glob = "test/fixtures/**/*.clje" }, { glob = "test/fixtures/**/*.cljr" }, { glob = "test/fixtures/**/*.cljx" }, { glob = "test/fixtures/**/*.edn" }, { glob = "test/fixtures/**/*.boot" }]
roots = ["project.clj", "build.boot", "deps.edn", "shadow-cljs.edn"]
comment-token = ";"
language-servers = [ "clojure-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "clojure"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-cmake"
scope = "source.cmake"
file-types = [{ glob = "test/fixtures/**/*.cmake" }, { glob = "test/fixtures/**/CMakeLists.txt" }]
comment-token = "#"
block-comment-tokens = { start = "#[[", end = "]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cmake-language-server" ]
grammar = "cmake"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-comment"
scope = "scope.comment"
file-types = []
grammar = "comment"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-common-lisp"
scope = "source.lisp"
file-types = [{ glob = "test/fixtures/**/*.lisp" }, { glob = "test/fixtures/**/*.asd" }, { glob = "test/fixtures/**/*.cl" }, { glob = "test/fixtures/**/*.l" }, { glob = "test/fixtures/**/*.lsp" }, { glob = "test/fixtures/**/*.ny" }, { glob = "test/fixtures/**/*.podsl" }, { glob = "test/fixtures/**/*.sexp" }]
shebangs = ["lisp", "sbcl", "ccl", "clisp", "ecl"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cl-lsp" ]
grammar = "common-lisp"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-cpon"
scope = "scope.cpon"
file-types = [{ glob = "test/fixtures/**/*.cpon" }, { glob = "test/fixtures/**/*.cp" }]
auto-format = true
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cpon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-cpp"
scope = "source.cpp"
file-types = [{ glob = "test/fixtures/**/*.cc" }, { glob = "test/fixtures/**/*.hh" }, { glob = "test/fixtures/**/*.c++" }, { glob = "test/fixtures/**/*.cpp" }, { glob = "test/fixtures/**/*.hpp" }, { glob = "test/fixtures/**/*.h" }, { glob = "test/fixtures/**/*.ipp" }, { glob = "test/fixtures/**/*.tpp" }, { glob = "test/fixtures/**/*.cxx" }, { glob = "test/fixtures/**/*.hxx" }, { glob = "test/fixtures/**/*.ixx" }, { glob = "test/fixtures/**/*.txx" }, { glob = "test/fixtures/**/*.ino" }, { glob = "test/fixtures/**/*.C" }, { glob = "test/fixtures/**/*.H" }, { glob = "test/fixtures/**/*.cu" }, { glob = "test/fixtures/**/*.cuh" }, { glob = "test/fixtures/**/*.cppm" }, { glob = "test/fixtures/**/*.h++" }, { glob = "test/fixtures/**/*.ii" }, { glob = "test/fixtures/**/*.inl" }, { glob = "test/fixtures/**/.hpp.in" }, { glob = "test/fixtures/**/.h.in" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "cpp"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-crystal"
scope = "source.cr"
file-types = [{ glob = "test/fixtures/**/*.cr" }]
roots = ["shard.yml", "shard.lock"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "crystal"
language-servers = [ "crystalline" ]

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-css"
scope = "source.css"
file-types = [{ glob = "test/fixtures/**/*.css" }, { glob = "test/fixtures/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "css"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-cue"
scope = "source.cue"
file-types = [{ glob = "test/fixtures/**/*.cue" }]
roots = ["cue.mod"]
auto-format = true
comment-token = "//"
language-servers = [ "cuelsp" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "cue", args = ["fmt", "-"] }
grammar = "cue"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-cylc"
scope = "source.cylc"
file-types = [{ glob = "test/fixtures/**/*.cylc" }, { glob = "test/fixtures/**/suite.rc" }]
comment-tokens = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "cylc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-d"
scope = "source.d"
file-types = [{ glob = "test/fixtures/**/*.d" }, { glob = "test/fixtures/**/*.dd" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "serve-d" ]
formatter = { command = "dfmt" }
grammar = "d"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-dart"
scope = "source.dart"
file-types = [{ glob = "test/fixtures/**/*.dart" }]
roots = ["pubspec.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "dart" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "dart"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-dbml"
scope = "source.dbml"
file-types = [{ glob = "test/fixtures/**/*.dbml" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dbml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-devicetree"
scope = "source.devicetree"
file-types = [{ glob = "test/fixtures/**/*.dts" }, { glob = "test/fixtures/**/*.dtsi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "devicetree"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-dhall"
scope = "source.dhall"
file-types = [{ glob = "test/fixtures/**/*.dhall" }]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dhall-lsp-server" ]
formatter = { command = "dhall" , args = ["format"] }
grammar = "dhall"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-diff"
scope = "source.diff"
file-types = [{ glob = "test/fixtures/**/*.diff" }, { glob = "test/fixtures/**/*.patch" }, { glob = "test/fixtures/**/*.rej" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "diff"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-docker-compose"
scope = "source.yaml.docker-compose"
roots = ["docker-compose.yaml", "docker-compose.yml"]
language-servers = [ "docker-compose-langserver", "yaml-language-server" ]
file-types = [{ glob = "test/fixtures/**/docker-compose.yaml" }, { glob = "test/fixtures/**/docker-compose.yml" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "docker-compose"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-dockerfile"
scope = "source.dockerfile"
roots = ["Dockerfile", "Containerfile"]
file-types = [{ glob = "test/fixtures/**/*.Dockerfile" }, { glob = "test/fixtures/**/Dockerfile" }, { glob = "test/fixtures/**/Dockerfile.*" }, { glob = "test/fixtures/**/*.dockerfile" }, { glob = "test/fixtures/**/dockerfile" }, { glob = "test/fixtures/**/dockerfile.*" }, { glob = "test/fixtures/**/*.Containerfile" }, { glob = "test/fixtures/**/Containerfile" }, { glob = "test/fixtures/**/Containerfile.*" }, { glob = "test/fixtures/**/*.containerfile" }, { glob = "test/fixtures/**/containerfile" }, { glob = "test/fixtures/**/containerfile.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "docker-langserver" ]
grammar = "dockerfile"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-dot"
scope = "source.dot"
file-types = [{ glob = "test/fixtures/**/*.dot" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dot-language-server" ]
grammar = "dot"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-dtd"
scope = "source.dtd"
file-types = [{ glob = "test/fixtures/**/*.dtd" }, { glob = "test/fixtures/**/*.ent" }]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '<' = '>' }
grammar = "dtd"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-dune"
scope = "source.dune"
roots = ["dune-project"]
file-types = [{ glob = "test/fixtures/**/dune-project" }, { glob = "test/fixtures/**/dune" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dune"
auto-format = true
formatter = { command = "dune", args = ["format-dune-file"] }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-earthfile"
scope = "source.earthfile"
roots = ["Earthfile"]
file-types = [{ glob = "test/fixtures/**/Earthfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["earthlyls"]
grammar = "earthfile"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-edoc"
scope = "source.edoc"
file-types = [{ glob = "test/fixtures/**/*.edoc" }, { glob = "test/fixtures/**/*.edoc.in" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "edoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-eex"
scope = "source.eex"
file-types = [{ glob = "test/fixtures/**/*.eex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "eex"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ejs"
scope = "text.html.ejs"
file-types = [{ glob = "test/fixtures/**/*.ejs" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ejs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-elisp"
scope = "source.elisp"
file-types = [{ glob = "test/fixtures/**/*.el" }]
comment-tokens = [";"]
auto-pairs= { '(' = ')', '"' = '"' }
grammar = "elisp"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-elixir"
scope = "source.elixir"
file-types = [{ glob = "test/fixtures/**/*.ex" }, { glob = "test/fixtures/**/*.exs" }, { glob = "test/fixtures/**/mix.lock" }]
shebangs = ["elixir"]
roots = ["mix.exs", "mix.lock"]
comment-token = "#"
language-servers = [ "elixir-ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elixir"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-elm"
scope = "source.elm"
file-types = [{ glob = "test/fixtures/**/*.elm" }]
roots = ["elm.json"]
auto-format = true
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "elm-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elm"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-elvish"
scope = "source.elvish"
shebangs = ["elvish"]
file-types = [{ glob = "test/fixtures/**/*.elv" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elvish" ]
grammar = "elvish"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-env"
scope = "source.env"
file-types = [{ glob = "test/fixtures/**/.env" }, { glob = "test/fixtures/**/.env.*" }, { glob = "test/fixtures/**/.envrc" }, { glob = "test/fixtures/**/.envrc.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "env"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-erb"
scope = "text.html.erb"
file-types = [{ glob = "test/fixtures/**/*.erb" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "erb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-erlang"
scope = "source.erlang"
file-types = [{ glob = "test/fixtures/**/*.erl" }, { glob = "test/fixtures/**/*.hrl" }, { glob = "test/fixtures/**/*.app" }, { glob = "test/fixtures/**/rebar.config" }, { glob = "test/fixtures/**/rebar.lock" }, { glob = "test/fixtures/**/*.app.src" }]
roots = ["rebar.config"]
shebangs = ["escript"]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "erlang-ls", "elp" ]
grammar = "erlang"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-esdl"
scope = "source.esdl"
file-types = [{ glob = "test/fixtures/**/*.esdl" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
roots = ["edgedb.toml"]
grammar = "esdl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-fidl"
scope = "source.fidl"
file-types = [{ glob = "test/fixtures/**/*.fidl" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "fidl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-fish"
scope = "source.fish"
file-types = [{ glob = "test/fixtures/**/*.fish" }]
shebangs = ["fish"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "fish_indent" }
grammar = "fish"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-forth"
scope = "source.forth"
file-types = [{ glob = "test/fixtures/**/*.fs" }, { glob = "test/fixtures/**/*.forth" }, { glob = "test/fixtures/**/*.fth" }, { glob = "test/fixtures/**/*.4th" }]
comment-token = "\\"
language-servers = [ "forth-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "forth"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-fortran"
scope = "source.fortran"
file-types = [{ glob = "test/fixtures/**/*.f" }, { glob = "test/fixtures/**/*.for" }, { glob = "test/fixtures/**/*.f90" }, { glob = "test/fixtures/**/*.f95" }, { glob = "test/fixtures/**/*.f03" }]
roots = ["fpm.toml"]
comment-token = "!"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "fortls" ]
grammar = "fortran"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-fsharp"
scope = "source.fs"
roots = ["sln", "fsproj"]
file-types = [{ glob = "test/fixtures/**/*.fs" }, { glob = "test/fixtures/**/*.fsx" }, { glob = "test/fixtures/**/*.fsi" }, { glob = "test/fixtures/**/*.fsscript" }]
comment-token = "//"
block-comment-tokens = { start = "(*", end = "*)" }
indent = { unit = "  ", tab-width = 2 }
auto-format = true
language-servers = ["fsharp-ls"]
grammar = "fsharp"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gas"
scope = "source.gas"
file-types = [{ glob = "test/fixtures/**/*.s" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gas"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gdscript"
scope = "source.gdscript"
file-types = [{ glob = "test/fixtures/**/*.gd" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
formatter = { command = "gdformat", args = ["-"] }
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
grammar = "gdscript"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gemini"
scope = "source.gmi"
file-types = [{ glob = "test/fixtures/**/*.gmi" }]
grammar = "gemini"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gherkin"
scope = "source.feature"
file-types = [{ glob = "test/fixtures/**/*.feature" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gherkin"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-git-attributes"
scope = "source.gitattributes"
file-types = [{ glob = "test/fixtures/**/.gitattributes" }]
comment-token = "#"
grammar = "git-attributes"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-git-commit"
scope = "git.commitmsg"
file-types = [{ glob = "test/fixtures/**/COMMIT_EDITMSG" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "git-commit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-git-config"
scope = "source.gitconfig"
file-types = [{ glob = "test/fixtures/**/.gitmodules" }, { glob = "test/fixtures/**/.gitconfig" }, { glob = "test/fixtures/**/.git/config" }, { glob = "test/fixtures/**/.config/git/config" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-config"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-git-ignore"
scope = "source.gitignore"
file-types = [{ glob = "test/fixtures/**/.gitignore_global" }, { glob = "test/fixtures/**/git/ignore" }, { glob = "test/fixtures/**/.ignore" }, { glob = "test/fixtures/**/CODEOWNERS" }, { glob = "test/fixtures/**/.config/helix/ignore" }, { glob = "test/fixtures/**/.helix/ignore" }, { glob = "test/fixtures/**/.*ignore" }]
comment-token = "#"
grammar = "git-ignore"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-git-rebase"
scope = "source.gitrebase"
file-types = [{ glob = "test/fixtures/**/git-rebase-todo" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-rebase"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gjs"
scope = "source.gjs"
file-types = [{ glob = "test/fixtures/**/*.gjs" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gjs"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gleam"
scope = "source.gleam"
file-types = [{ glob = "test/fixtures/**/*.gleam" }]
roots = ["gleam.toml"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "gleam" ]
auto-format = true
grammar = "gleam"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-glimmer"
scope = "source.glimmer"
file-types = [{ glob = "test/fixtures/**/{app,addon}/{components,templates}/*.hbs" }]
block-comment-tokens = { start = "{{!", end = "}}" }
roots = ["package.json", "ember-cli-build.js"]
grammar = "glimmer"
language-servers = ["ember-language-server"]
formatter = { command = "prettier", args = ['--parser', 'glimmer'] }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>', "'" = "'" }
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-glsl"
scope = "source.glsl"
file-types = [{ glob = "test/fixtures/**/*.glsl" }, { glob = "test/fixtures/**/*.vert" }, { glob = "test/fixtures/**/*.tesc" }, { glob = "test/fixtures/**/*.tese" }, { glob = "test/fixtures/**/*.geom" }, { glob = "test/fixtures/**/*.frag" }, { glob = "test/fixtures/**/*.comp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "glsl_analyzer" ]
grammar = "glsl"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gn"
scope = "source.gn"
file-types = [{ glob = "test/fixtures/**/*.gn" }, { glob = "test/fixtures/**/*.gni" }]
roots = []
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "gn", args = ["format", "--stdin"] }
grammar = "gn"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-go"
scope = "source.go"
file-types = [{ glob = "test/fixtures/**/*.go" }]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls", "golangci-lint-lsp" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "go", transport = "tcp", command = "dlv", args = ["dap"], port-arg = "-l 127.0.0.1:{}", templates = [{ name = "source", request = "launch", completion = [ { name = "entrypoint", completion = "filename", default = "." } ], args = { mode = "debug", program = "{0}" } }, { name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { mode = "exec", program = "{0}" } }, { name = "test", request = "launch", completion = [ { name = "tests", completion = "directory", default = "." } ], args = { mode = "test", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { mode = "local", processId = "{0}" } }, { name = "core", request = "launch", completion = [ { name = "binary", completion = "filename" }, { name = "core", completion = "filename" } ], args = { mode = "core", program = "{0}", coreFilePath = "{1}" } }] }
grammar = "go"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-godot-resource"
scope = "source.tscn"
file-types = [{ glob = "test/fixtures/**/*.tscn" }, { glob = "test/fixtures/**/*.tres" }, { glob = "test/fixtures/**/*.godot" }, { glob = "test/fixtures/**/*.gdextension" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "godot-resource"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gomod"
scope = "source.gomod"
file-types = [{ glob = "test/fixtures/**/go.mod" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gomod"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gotmpl"
scope = "source.gotmpl"
file-types = [{ glob = "test/fixtures/**/*.gotmpl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gotmpl"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gowork"
scope = "source.gowork"
file-types = [{ glob = "test/fixtures/**/go.work" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gowork"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gpr"
scope = "source.gpr"
file-types = [{ glob = "test/fixtures/**/*.gpr" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-gpr-language-server"]
grammar = "gpr"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-graphql"
scope = "source.graphql"
file-types = [{ glob = "test/fixtures/**/*.gql" }, { glob = "test/fixtures/**/*.graphql" }, { glob = "test/fixtures/**/*.graphqls" }]
language-servers = [ "graphql-language-service" ]
comment-token = "#"
block-comment-tokens = { start = "\"\"\"", end = "\"\"\"" }
indent = { unit = "  ", tab-width = 2 }
grammar = "graphql"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-groovy"
language-id = "groovy"
scope = "source.groovy"
file-types = [{ glob = "test/fixtures/**/*.gradle" }, { glob = "test/fixtures/**/*.groovy" }, { glob = "test/fixtures/**/*.jenkinsfile" }, { glob = "test/fixtures/**/Jenkinsfile" }, { glob = "test/fixtures/**/Jenkinsfile.*" }]
shebangs = ["groovy"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "groovy"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-gts"
scope = "source.gts"
file-types = [{ glob = "test/fixtures/**/*.gts" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gts"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-hare"
scope = "source.hare"
file-types = [{ glob = "test/fixtures/**/*.ha" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "hare"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-haskell"
scope = "source.haskell"
file-types = [{ glob = "test/fixtures/**/*.hs" }, { glob = "test/fixtures/**/*.hs-boot" }, { glob = "test/fixtures/**/*.hsc" }]
roots = ["Setup.hs", "stack.yaml", "cabal.project"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "haskell-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-haskell-persistent"
scope = "source.persistentmodels"
file-types = [{ glob = "test/fixtures/**/*.persistentmodels" }]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell-persistent"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-hcl"
scope = "source.hcl"
language-id = "terraform"
file-types = [{ glob = "test/fixtures/**/*.hcl" }, { glob = "test/fixtures/**/*.tf" }, { glob = "test/fixtures/**/*.nomad" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "hcl"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-heex"
scope = "source.heex"
file-types = [{ glob = "test/fixtures/**/*.heex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elixir-ls" ]
grammar = "heex"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-helm"
grammar = "helm"
scope = "source.helm"
roots = ["Chart.yaml"]
comment-token = "#"
language-servers = ["helm_ls"]
file-types = [{ glob = "test/fixtures/**/templates/*.yaml" }, { glob = "test/fixtures/**/templates/*.yml" }, { glob = "test/fixtures/**/templates/_*.tpl" }, { glob = "test/fixtures/**/templates/NOTES.txt" }]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-hocon"
scope = "source.conf"
file-types = [{ glob = "test/fixtures/**/**/src/*/resources/**/*.conf" }, { glob = "test/fixtures/**/*scalafmt*.conf" }, { glob = "test/fixtures/**/*scalafix*.conf" }]
comment-token = "#"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "hocon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-hoon"
scope = "source.hoon"
file-types = [{ glob = "test/fixtures/**/*.hoon" }]
comment-token = "::"
indent = { unit = "  ", tab-width = 2 }
grammar = "hoon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-hosts"
scope = "source.hosts"
file-types = [{ glob = "test/fixtures/**/hosts" }]
comment-token = "#"
grammar = "hosts"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-html"
scope = "text.html.basic"
file-types = [{ glob = "test/fixtures/**/*.html" }, { glob = "test/fixtures/**/*.htm" }, { glob = "test/fixtures/**/*.shtml" }, { glob = "test/fixtures/**/*.xhtml" }, { glob = "test/fixtures/**/*.xht" }, { glob = "test/fixtures/**/*.jsp" }, { glob = "test/fixtures/**/*.asp" }, { glob = "test/fixtures/**/*.aspx" }, { glob = "test/fixtures/**/*.jshtm" }, { glob = "test/fixtures/**/*.volt" }, { glob = "test/fixtures/**/*.rhtml" }, { glob = "test/fixtures/**/*.cshtml" }]
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "vscode-html-language-server", "superhtml" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "html"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-hurl"
scope = "source.hurl"
file-types = [{ glob = "test/fixtures/**/*.hurl" }]
comment-token = "#"
formatter = { command = "hurlfmt" }
indent = { unit = "  ", tab-width = 2 }
grammar = "hurl"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-hyprlang"
scope = "source.hyprlang"
roots = ["hyprland.conf"]
file-types = [{ glob = "test/fixtures/**/hypr/*.conf" }]
comment-token = "#"
grammar = "hyprlang"
language-servers = ["hyprls"]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-idris"
scope = "source.idr"
file-types = [{ glob = "test/fixtures/**/*.idr" }]
shebangs = []
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "idris2-lsp" ]
grammar = "idris"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-iex"
scope = "source.iex"
file-types = [{ glob = "test/fixtures/**/*.iex" }]
comment-token = "#"
grammar = "iex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ini"
scope = "source.ini"
file-types = [{ glob = "test/fixtures/**/*.ini" }, { glob = "test/fixtures/**/*.service" }, { glob = "test/fixtures/**/*.automount" }, { glob = "test/fixtures/**/*.device" }, { glob = "test/fixtures/**/*.mount" }, { glob = "test/fixtures/**/*.path" }, { glob = "test/fixtures/**/*.service" }, { glob = "test/fixtures/**/*.slice" }, { glob = "test/fixtures/**/*.socket" }, { glob = "test/fixtures/**/*.swap" }, { glob = "test/fixtures/**/*.target" }, { glob = "test/fixtures/**/*.timer" }, { glob = "test/fixtures/**/*.container" }, { glob = "test/fixtures/**/*.volume" }, { glob = "test/fixtures/**/*.kube" }, { glob = "test/fixtures/**/*.network" }, { glob = "test/fixtures/**/.editorconfig" }, { glob = "test/fixtures/**/.npmrc" }, { glob = "test/fixtures/**/npmrc" }, { glob = "test/fixtures/**/rclone.conf" }, { glob = "test/fixtures/**/*.properties" }, { glob = "test/fixtures/**/*.cfg" }, { glob = "test/fixtures/**/*.directory" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "ini"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-inko"
auto-format = true
scope = "source.inko"
file-types = [{ glob = "test/fixtures/**/*.inko" }]
roots = ["inko.pkg"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "inko", args = ["fmt", "-"] }
grammar = "inko"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-janet"
scope = "source.janet"
file-types = [{ glob = "test/fixtures/**/*.cgen" }, { glob = "test/fixtures/**/*.janet" }, { glob = "test/fixtures/**/*.jdn" }]
shebangs = ["janet"]
roots = ["project.janet"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "janet-format" }
grammar = "janet"
auto-pairs= { '"' = '"', '(' = ')', '[' = ']', '{' = '}', "`" = "`" }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-java"
scope = "source.java"
file-types = [{ glob = "test/fixtures/**/*.java" }, { glob = "test/fixtures/**/*.jav" }, { glob = "test/fixtures/**/*.pde" }]
roots = ["pom.xml", "build.gradle", "build.gradle.kts"]
language-servers = [ "jdtls" ]
indent = { unit = "  ", tab-width = 2 }
comment-tokens = ["//"]
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "java"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-javascript"
scope = "source.js"
language-id = "javascript"
file-types = [{ glob = "test/fixtures/**/*.js" }, { glob = "test/fixtures/**/*.mjs" }, { glob = "test/fixtures/**/*.cjs" }, { glob = "test/fixtures/**/*.rules" }, { glob = "test/fixtures/**/*.es6" }, { glob = "test/fixtures/**/*.pac" }, { glob = "test/fixtures/**/.node_repl_history" }, { glob = "test/fixtures/**/jakefile" }]
shebangs = ["node"]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "node-debug2", transport = "stdio", quirks = { absolute-paths = true }, templates = [{ name = "source", request = "launch", completion = [ { name = "main", completion = "filename", default = "index.js" } ], args = { program = "{0}" } }] }
grammar = "javascript"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-jinja"
scope = "text.html.jinja"
file-types = [{ glob = "test/fixtures/**/*.jinja" }, { glob = "test/fixtures/**/*.jinja2" }, { glob = "test/fixtures/**/*.j2" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jinja"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-jjdescription"
scope = "jj.description"
file-types = [{ glob = "test/fixtures/**/*.jjdescription" }]
comment-token = "JJ:"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "jjdescription"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-jq"
scope = "source.jq"
file-types = [{ glob = "test/fixtures/**/*.jq" }]
comment-token = "#"
language-servers = ["jq-lsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "jq"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-jsdoc"
scope = "source.jsdoc"
file-types = [{ glob = "test/fixtures/**/*.jsdoc" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsdoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-json"
scope = "source.json"
file-types = [{ glob = "test/fixtures/**/*.json" }, { glob = "test/fixtures/**/*.arb" }, { glob = "test/fixtures/**/*.ipynb" }, { glob = "test/fixtures/**/*.geojson" }, { glob = "test/fixtures/**/*.gltf" }, { glob = "test/fixtures/**/*.webmanifest" }, { glob = "test/fixtures/**/flake.lock" }, { glob = "test/fixtures/**/.babelrc" }, { glob = "test/fixtures/**/.bowerrc" }, { glob = "test/fixtures/**/.jscrc" }, { glob = "test/fixtures/**/*.js.map" }, { glob = "test/fixtures/**/*.ts.map" }, { glob = "test/fixtures/**/*.css.map" }, { glob = "test/fixtures/**/.jslintrc" }, { glob = "test/fixtures/**/*.jsonl" }, { glob = "test/fixtures/**/*.jsonld" }, { glob = "test/fixtures/**/.vuerc" }, { glob = "test/fixtures/**/composer.lock" }, { glob = "test/fixtures/**/.watchmanconfig" }, { glob = "test/fixtures/**/*.avsc" }, { glob = "test/fixtures/**/*.ldtk" }, { glob = "test/fixtures/**/*.ldtkl" }, { glob = "test/fixtures/**/.swift-format" }]
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "json"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-json5"
scope = "source.json5"
file-types = [{ glob = "test/fixtures/**/*.json5" }]
language-servers = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "json5"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-jsonc"
scope = "source.json"
file-types = [{ glob = "test/fixtures/**/*.jsonc" }, { glob = "test/fixtures/**/tsconfig.json" }]
grammar = "jsonc"
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-jsonnet"
scope = "source.jsonnet"
file-types = [{ glob = "test/fixtures/**/*.libsonnet" }, { glob = "test/fixtures/**/*.jsonnet" }]
roots = ["jsonnetfile.json"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "jsonnet-language-server" ]
grammar = "jsonnet"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-jsx"
scope = "source.jsx"
language-id = "javascriptreact"
file-types = [{ glob = "test/fixtures/**/*.jsx" }]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsx"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-julia"
scope = "source.julia"
file-types = [{ glob = "test/fixtures/**/*.jl" }]
shebangs = ["julia"]
roots = ["Manifest.toml", "Project.toml"]
comment-token = "#"
block-comment-tokens = { start = "#=", end = "=#" }
language-servers = [ "julia" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "julia"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-just"
scope = "source.just"
file-types = [{ glob = "test/fixtures/**/*.just" }, { glob = "test/fixtures/**/justfile" }, { glob = "test/fixtures/**/Justfile" }, { glob = "test/fixtures/**/.justfile" }, { glob = "test/fixtures/**/.Justfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "just"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-kdl"
scope = "source.kdl"
file-types = [{ glob = "test/fixtures/**/*.kdl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "kdl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-koka"
scope = "source.koka"
file-types = [{ glob = "test/fixtures/**/*.kk" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koka"]
grammar = "koka"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-kotlin"
scope = "source.kotlin"
file-types = [{ glob = "test/fixtures/**/*.kt" }, { glob = "test/fixtures/**/*.kts" }]
roots = ["settings.gradle", "settings.gradle.kts"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "kotlin-language-server" ]
grammar = "kotlin"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-koto"
scope = "source.koto"
file-types = [{ glob = "test/fixtures/**/*.koto" }]
comment-token = "#"
block-comment-tokens = ["#-", "-#"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koto-ls"]
grammar = "koto"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-latex"
scope = "source.tex"
file-types = [{ glob = "test/fixtures/**/*.tex" }, { glob = "test/fixtures/**/*.sty" }, { glob = "test/fixtures/**/*.cls" }, { glob = "test/fixtures/**/*.Rd" }, { glob = "test/fixtures/**/*.bbx" }, { glob = "test/fixtures/**/*.cbx" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "latex"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ld"
scope = "source.ld"
file-types = [{ glob = "test/fixtures/**/*.ld" }]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ld"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ldif"
scope = "source.ldif"
file-types = [{ glob = "test/fixtures/**/*.ldif" }]
comment-token = "#"
grammar = "ldif"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-lean"
scope = "source.lean"
file-types = [{ glob = "test/fixtures/**/*.lean" }]
roots = [ "lakefile.lean" ]
comment-token = "--"
block-comment-tokens = { start = "/-", end = "-/" }
language-servers = [ "lean" ]
indent = { unit = "  ", tab-width = 2 }
rulers = [101]
text-width = 100
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '⟨' = '⟩' }
grammar = "lean"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ledger"
scope = "source.ledger"
file-types = [{ glob = "test/fixtures/**/*.ldg" }, { glob = "test/fixtures/**/*.ledger" }, { glob = "test/fixtures/**/*.journal" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "ledger"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-llvm"
scope = "source.llvm"
file-types = [{ glob = "test/fixtures/**/*.ll" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-llvm-mir"
scope = "source.llvm_mir"
file-types = []
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-llvm-mir-yaml"
# TODO allow languages to point to their grammar like so:
#
#     grammar = "yaml"
scope = "source.yaml"
file-types = [{ glob = "test/fixtures/**/*.mir" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir-yaml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-log"
scope = "source.log"
file-types = [{ glob = "test/fixtures/**/*.log" }]
grammar = "log"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-lpf"
comment-token = "#"
scope = "source.lpf"
file-types = [{ glob = "test/fixtures/**/*.lpf" }]
grammar = "lpf"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-lua"
scope = "source.lua"
file-types = [{ glob = "test/fixtures/**/*.lua" }]
shebangs = ["lua", "luajit"]
roots = [".luarc.json", ".luacheckrc", ".stylua.toml", "selene.toml", ".git"]
comment-token = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "lua-language-server" ]
grammar = "lua"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-make"
scope = "source.make"
file-types = [{ glob = "test/fixtures/**/Makefile" }, { glob = "test/fixtures/**/makefile" }, { glob = "test/fixtures/**/*.make" }, { glob = "test/fixtures/**/*.mk" }, { glob = "test/fixtures/**/*.mak" }, { glob = "test/fixtures/**/GNUmakefile" }, { glob = "test/fixtures/**/OCamlMakefile" }]
shebangs = ["make", "gmake"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "make"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-markdoc"
scope = "text.markdoc"
block-comment-tokens = { start = "<!--", end = "-->" }
file-types = [{ glob = "test/fixtures/**/*.mdoc" }]
language-servers = [ "markdoc-ls" ]
grammar = "markdoc"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-markdown"
scope = "source.md"
file-types = [{ glob = "test/fixtures/**/*.md" }, { glob = "test/fixtures/**/*.livemd" }, { glob = "test/fixtures/**/*.markdown" }, { glob = "test/fixtures/**/*.mdx" }, { glob = "test/fixtures/**/*.mkd" }, { glob = "test/fixtures/**/*.mkdn" }, { glob = "test/fixtures/**/*.mdwn" }, { glob = "test/fixtures/**/*.mdown" }, { glob = "test/fixtures/**/*.markdn" }, { glob = "test/fixtures/**/*.mdtxt" }, { glob = "test/fixtures/**/*.mdtext" }, { glob = "test/fixtures/**/*.workbook" }, { glob = "test/fixtures/**/PULLREQ_EDITMSG" }]
roots = [".marksman.toml"]
language-servers = [ "marksman", "markdown-oxide" ]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "markdown"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-markdown.inline"
scope = "source.markdown.inline"
file-types = []
grammar = "markdown.inline"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-matlab"
scope = "source.m"
file-types = [{ glob = "test/fixtures/**/*.m" }]
comment-token = "%"
shebangs = ["octave-cli", "matlab"]
indent = { unit = "  ", tab-width = 2 }
grammar = "matlab"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-mermaid"
scope = "source.mermaid"
file-types = [{ glob = "test/fixtures/**/*.mermaid" }, { glob = "test/fixtures/**/*.mmd" }]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
grammar = "mermaid"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-meson"
scope = "source.meson"
file-types = [{ glob = "test/fixtures/**/meson.build" }, { glob = "test/fixtures/**/meson.options" }, { glob = "test/fixtures/**/meson_options.txt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["mesonlsp"]
grammar = "meson"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-mint"
scope = "source.mint"
file-types = [{ glob = "test/fixtures/**/*.mint" }]
shebangs = []
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "mint" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "mint"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-mojo"
scope = "source.mojo"
roots = ["__init__.mojo"]
file-types = [{ glob = "test/fixtures/**/*.mojo" }, { glob = "test/fixtures/**/*.🔥" }]
language-servers = [ "mojo-lsp" ]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "magic", args = ["run", "mojo" , "format", "-q", "-"]}
grammar = "mojo"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-move"
scope = "source.move"
roots = ["Move.toml"]
file-types = [{ glob = "test/fixtures/**/*.move" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = []
grammar = "move"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-msbuild"
scope = "source.msbuild"
file-types = [{ glob = "test/fixtures/**/*.proj" }, { glob = "test/fixtures/**/*.vbproj" }, { glob = "test/fixtures/**/*.csproj" }, { glob = "test/fixtures/**/*.fsproj" }, { glob = "test/fixtures/**/*.targets" }, { glob = "test/fixtures/**/*.props" }]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "msbuild"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-nasm"
scope = "source.nasm"
file-types = [{ glob = "test/fixtures/**/*.asm" }, { glob = "test/fixtures/**/*.S" }, { glob = "test/fixtures/**/*.nasm" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "nasm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-nestedtext"
scope = "text.nested"
file-types = [{ glob = "test/fixtures/**/*.nt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nestedtext"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-nginx"
scope = "source.nginx"
file-types = [{ glob = "test/fixtures/**/sites-available/*.conf" }, { glob = "test/fixtures/**/sites-enabled/*.conf" }, { glob = "test/fixtures/**/nginx.conf" }, { glob = "test/fixtures/**/conf.d/*.conf" }]
roots = ["nginx.conf"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nginx"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-nickel"
scope = "source.nickel"
file-types = [{ glob = "test/fixtures/**/*.ncl" }]
shebangs = []
comment-token = "#"
language-servers = [ "nls" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "nickel"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-nim"
scope = "source.nim"
file-types = [{ glob = "test/fixtures/**/*.nim" }, { glob = "test/fixtures/**/*.nims" }, { glob = "test/fixtures/**/*.nimble" }]
shebangs = []
comment-token = "#"
block-comment-tokens = { start = "#[", end = "]#" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nimlangserver" ]
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '{' = '}' }
grammar = "nim"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-nix"
scope = "source.nix"
file-types = [{ glob = "test/fixtures/**/*.nix" }]
shebangs = []
comment-token = "#"
language-servers = [ "nil", "nixd" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "nix"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-nu"
scope = "source.nu"
file-types = [{ glob = "test/fixtures/**/*.nu" }, { glob = "test/fixtures/**/*.nuon" }]
shebangs = ["nu"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nu-lsp" ]
grammar = "nu"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-nunjucks"
scope = "text.html.nunjucks"
file-types = [{ glob = "test/fixtures/**/*.njk" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "nunjucks"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ocaml"
scope = "source.ocaml"
file-types = [{ glob = "test/fixtures/**/*.ml" }]
shebangs = ["ocaml", "ocamlrun", "ocamlscript"]
block-comment-tokens = { start = "(*", end = "*)" }
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ocaml-interface"
scope = "source.ocaml.interface"
file-types = [{ glob = "test/fixtures/**/*.mli" }]
shebangs = []
block-comment-tokens = { start = "(*", end = "*)" }
comment-token = "(**)"
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml-interface"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-odin"
auto-format = true
scope = "source.odin"
file-types = [{ glob = "test/fixtures/**/*.odin" }]
roots = ["ols.json", "main.odin"]
language-servers = [ "ols" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "odinfmt", args = [ "-stdin" ] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "odin"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ohm"
scope = "source.ohm"
file-types = [{ glob = "test/fixtures/**/*.ohm" }]
comment-token = "//"
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "ohm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-opencl"
scope = "source.cl"
file-types = [{ glob = "test/fixtures/**/*.cl" }]
comment-token = "//"
language-servers = [ "clangd" ]
grammar = "opencl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-openscad"
scope = "source.openscad"
file-types = [{ glob = "test/fixtures/**/*.scad" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "openscad-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "openscad"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-org"
scope = "source.org"
file-types = [{ glob = "test/fixtures/**/*.org" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "org"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-pascal"
scope = "source.pascal"
file-types = [{ glob = "test/fixtures/**/*.pas" }, { glob = "test/fixtures/**/*.pp" }, { glob = "test/fixtures/**/*.inc" }, { glob = "test/fixtures/**/*.lpr" }, { glob = "test/fixtures/**/*.lfm" }]
comment-token = "//"
block-comment-tokens = { start = "{", end = "}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "pasls" ]
grammar = "pascal"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-passwd"
scope = "source.passwd"
file-types = [{ glob = "test/fixtures/**/passwd" }]
grammar = "passwd"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-pem"
scope = "source.pem"
file-types = [{ glob = "test/fixtures/**/*.pem" }, { glob = "test/fixtures/**/*.cert" }, { glob = "test/fixtures/**/*.crt" }]
grammar = "pem"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-perl"
scope = "source.perl"
file-types = [{ glob = "test/fixtures/**/*.pl" }, { glob = "test/fixtures/**/*.pm" }, { glob = "test/fixtures/**/*.t" }, { glob = "test/fixtures/**/*.psgi" }, { glob = "test/fixtures/**/*.raku" }, { glob = "test/fixtures/**/*.rakumod" }, { glob = "test/fixtures/**/*.rakutest" }, { glob = "test/fixtures/**/*.rakudoc" }, { glob = "test/fixtures/**/*.nqp" }, { glob = "test/fixtures/**/*.p6" }, { glob = "test/fixtures/**/*.pl6" }, { glob = "test/fixtures/**/*.pm6" }]
shebangs = ["perl"]
comment-token = "#"
language-servers = [ "perlnavigator" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "perl"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-pest"
scope = "source.pest"
file-types = [{ glob = "test/fixtures/**/*.pest" }]
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pest-language-server"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "pest"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-php"
scope = "source.php"
file-types = [{ glob = "test/fixtures/**/*.php" }, { glob = "test/fixtures/**/*.inc" }, { glob = "test/fixtures/**/*.php4" }, { glob = "test/fixtures/**/*.php5" }, { glob = "test/fixtures/**/*.phtml" }, { glob = "test/fixtures/**/*.ctp" }]
shebangs = ["php"]
roots = ["composer.json", "index.php"]
comment-token = "//"
language-servers = [ "intelephense" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "php"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-php-only"
scope = "source.php-only"
file-types = []
indent = { unit = "  ", tab-width = 2 }
roots = ["composer.json", "index.php"]
grammar = "php-only"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-pkgbuild"
scope = "source.bash"
file-types = [{ glob = "test/fixtures/**/PKGBUILD" }]
comment-token = "#"
grammar = "pkgbuild"
language-servers = [
  "pkgbuild-language-server",
  { except-features = [
    "diagnostics",
  ], name = "bash-language-server" },
]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-pkl"
scope = "source.pkl"
file-types = [{ glob = "test/fixtures/**/*.pkl" }, { glob = "test/fixtures/**/*.pcf" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "pkl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-po"
scope = "source.po"
file-types = [{ glob = "test/fixtures/**/*.po" }, { glob = "test/fixtures/**/*.pot" }]
comment-token = "#"
grammar = "po"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-pod"
scope = "source.pod"
file-types = [{ glob = "test/fixtures/**/*.pod" }]
grammar = "pod"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ponylang"
scope = "source.pony"
file-types = [{ glob = "test/fixtures/**/*.pony" }]
roots = ["corral.json", "lock.json"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "ponylang"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-powershell"
scope = "source.powershell"
file-types = [{ glob = "test/fixtures/**/*.ps1" }, { glob = "test/fixtures/**/*.psm1" }, { glob = "test/fixtures/**/*.psd1" }, { glob = "test/fixtures/**/*.pscc" }, { glob = "test/fixtures/**/*.psrc" }]
shebangs = [ "pwsh", "powershell" ]
comment-token = '#'
block-comment-tokens = { start = "<#", end = "#>" }
indent = { unit = "  ", tab-width = 2 }
grammar = "powershell"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-prisma"
scope = "source.prisma"
file-types = [{ glob = "test/fixtures/**/*.prisma" }]
roots = ["package.json"]
comment-token = "//"
language-servers = [ "prisma-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "prisma"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-prolog"
scope = "source.prolog"
file-types = [{ glob = "test/fixtures/**/*.pl" }, { glob = "test/fixtures/**/*.prolog" }]
shebangs = ["swipl"]
comment-token = "%"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "swipl" ]
grammar = "prolog"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-protobuf"
scope = "source.proto"
file-types = [{ glob = "test/fixtures/**/*.proto" }]
language-servers = [ "bufls", "pbkit" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "protobuf"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-prql"
scope = "source.prql"
file-types = [{ glob = "test/fixtures/**/*.prql" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "prql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-purescript"
scope = "source.purescript"
file-types = [{ glob = "test/fixtures/**/*.purs" }]
roots = ["spago.yaml", "spago.dhall", "bower.json"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "purescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "purs-tidy", args = ["format"] }
grammar = "purescript"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-python"
scope = "source.python"
file-types = [{ glob = "test/fixtures/**/*.py" }, { glob = "test/fixtures/**/*.pyi" }, { glob = "test/fixtures/**/*.py3" }, { glob = "test/fixtures/**/*.pyw" }, { glob = "test/fixtures/**/*.ptl" }, { glob = "test/fixtures/**/*.rpy" }, { glob = "test/fixtures/**/*.cpy" }, { glob = "test/fixtures/**/*.ipy" }, { glob = "test/fixtures/**/*.pyt" }, { glob = "test/fixtures/**/.python_history" }, { glob = "test/fixtures/**/.pythonstartup" }, { glob = "test/fixtures/**/.pythonrc" }, { glob = "test/fixtures/**/SConstruct" }, { glob = "test/fixtures/**/SConscript" }]
shebangs = ["python", "uv"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["ruff", "jedi", "pylsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "python"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-qml"
scope = "source.qml"
file-types = [{ glob = "test/fixtures/**/*.qml" }]
language-servers = [ "qmlls" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "qml"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-quint"
scope = "source.quint"
file-types = [{ glob = "test/fixtures/**/*.qnt" }]
language-servers = ["quint-language-server"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "quint"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-r"
scope = "source.r"
file-types = [{ glob = "test/fixtures/**/*.r" }, { glob = "test/fixtures/**/*.R" }, { glob = "test/fixtures/**/.Rprofile" }, { glob = "test/fixtures/**/Rprofile.site" }, { glob = "test/fixtures/**/.RHistory" }]
shebangs = ["r", "R"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "r" ]
grammar = "r"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-racket"
scope = "source.racket"
file-types = [{ glob = "test/fixtures/**/*.rkt" }, { glob = "test/fixtures/**/*.rktd" }, { glob = "test/fixtures/**/*.rktl" }, { glob = "test/fixtures/**/*.scrbl" }]
shebangs = ["racket"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "#|", end = "|#" }
language-servers = [ "racket" ]
grammar = "racket"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-regex"
scope = "source.regex"
file-types = [{ glob = "test/fixtures/**/*.regex" }, { glob = "test/fixtures/**/.Rbuildignore" }]
grammar = "regex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-rego"
scope = "source.rego"
file-types = [{ glob = "test/fixtures/**/*.rego" }]
auto-format = true
comment-token = "#"
language-servers = [ "regols" ]
grammar = "rego"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-rescript"
scope = "source.rescript"
file-types = [{ glob = "test/fixtures/**/*.res" }]
roots = ["bsconfig.json"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "rescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "rescript"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-rmarkdown"
scope = "source.rmd"
language-id = "rmd"
file-types = [{ glob = "test/fixtures/**/*.rmd" }, { glob = "test/fixtures/**/*.Rmd" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "rmarkdown"
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "r" ]

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-robot"
scope = "source.robot"
file-types = [{ glob = "test/fixtures/**/*.robot" }, { glob = "test/fixtures/**/*.resource" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "robotframework_ls" ]
grammar = "robot"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ron"
scope = "source.ron"
file-types = [{ glob = "test/fixtures/**/*.ron" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ron"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-rst"
scope = "source.rst"
comment-token = ".."
file-types = [{ glob = "test/fixtures/**/*.rst" }]
grammar = "rst"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ruby"
scope = "source.ruby"
file-types = [{ glob = "test/fixtures/**/*.rb" }, { glob = "test/fixtures/**/*.rake" }, { glob = "test/fixtures/**/*.irb" }, { glob = "test/fixtures/**/*.gemspec" }, { glob = "test/fixtures/**/*.rabl" }, { glob = "test/fixtures/**/*.jbuilder" }, { glob = "test/fixtures/**/*.jb" }, { glob = "test/fixtures/**/*.podspec" }, { glob = "test/fixtures/**/*.rjs" }, { glob = "test/fixtures/**/*.rbi" }, { glob = "test/fixtures/**/*.rbs" }, { glob = "test/fixtures/**/rakefile" }, { glob = "test/fixtures/**/gemfile" }, { glob = "test/fixtures/**/Rakefile" }, { glob = "test/fixtures/**/Gemfile" }, { glob = "test/fixtures/**/Podfile" }, { glob = "test/fixtures/**/Vagrantfile" }, { glob = "test/fixtures/**/Brewfile" }, { glob = "test/fixtures/**/Guardfile" }, { glob = "test/fixtures/**/Capfile" }, { glob = "test/fixtures/**/Cheffile" }, { glob = "test/fixtures/**/Hobofile" }, { glob = "test/fixtures/**/Appraisals" }, { glob = "test/fixtures/**/Rantfile" }, { glob = "test/fixtures/**/Berksfile" }, { glob = "test/fixtures/**/Berksfile.lock" }, { glob = "test/fixtures/**/Thorfile" }, { glob = "test/fixtures/**/Puppetfile" }, { glob = "test/fixtures/**/Fastfile" }, { glob = "test/fixtures/**/Appfile" }, { glob = "test/fixtures/**/Deliverfile" }, { glob = "test/fixtures/**/Matchfile" }, { glob = "test/fixtures/**/Scanfile" }, { glob = "test/fixtures/**/Snapfile" }, { glob = "test/fixtures/**/Gymfile" }]
shebangs = ["ruby"]
comment-token = "#"
language-servers = [ "solargraph" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "ruby"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-rust"
scope = "source.rust"
file-types = [{ glob = "test/fixtures/**/*.rs" }]
roots = ["Cargo.toml", "Cargo.lock"]
shebangs = ["rust-script", "cargo"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
  { start = "/*!", end = "*/" },
]
language-servers = [ "rust-analyzer" ]
indent = { unit = "  ", tab-width = 2 }
persistent-diagnostic-sources = ["rustc", "clippy"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}" } }, { name = "binary (terminal)", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}", runInTerminal = true } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "rust"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-sage"
scope = "source.sage"
file-types = [{ glob = "test/fixtures/**/*.sage" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "sage"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-scala"
scope = "source.scala"
roots = ["build.sbt", "build.sc", "build.gradle", "build.gradle.kts", "pom.xml", ".scala-build"]
file-types = [{ glob = "test/fixtures/**/*.scala" }, { glob = "test/fixtures/**/*.sbt" }, { glob = "test/fixtures/**/*.sc" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "metals" ]
grammar = "scala"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-scheme"
scope = "source.scheme"
file-types = [{ glob = "test/fixtures/**/*.ss" }, { glob = "test/fixtures/**/*.scm" }]
shebangs = ["scheme", "guile", "chicken"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "scheme"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-scss"
scope = "source.scss"
file-types = [{ glob = "test/fixtures/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "scss"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-slint"
scope = "source.slint"
file-types = [{ glob = "test/fixtures/**/*.slint" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "slint-lsp" ]
grammar = "slint"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-smali"
scope = "source.smali"
file-types = [{ glob = "test/fixtures/**/*.smali" }]
comment-token = "#"
roots = []
indent = { unit = "  ", tab-width = 2 }
grammar = "smali"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-smithy"
scope = "source.smithy"
file-types = [{ glob = "test/fixtures/**/*.smithy" }]
roots = ["smithy-build.json"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cs" ]
grammar = "smithy"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-sml"
scope = "source.sml"
file-types = [{ glob = "test/fixtures/**/*.sml" }]
block-comment-tokens = { start = "(*", end = "*)" }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "sml"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-snakemake"
scope = "source.snakemake"
roots = ["Snakefile", "config.yaml", "environment.yaml", "workflow/"]
file-types = [{ glob = "test/fixtures/**/*.smk" }, { glob = "test/fixtures/**/Snakefile" }]
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pylsp" ]
formatter= { command = "snakefmt", args = ["-"] }
grammar = "snakemake"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-solidity"
scope = "source.sol"
file-types = [{ glob = "test/fixtures/**/*.sol" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "solc" ]
grammar = "solidity"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-spade"
scope = "source.spade"
roots = ["swim.toml"]
file-types = [{ glob = "test/fixtures/**/*.spade" }]
comment-tokens = ["//", "///"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
language-servers = [ "spade-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '<' = '>' }
grammar = "spade"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-spicedb"
scope = "source.zed"
file-types = [{ glob = "test/fixtures/**/*.zed" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "spicedb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-sql"
scope = "source.sql"
file-types = [{ glob = "test/fixtures/**/*.sql" }, { glob = "test/fixtures/**/*.dsql" }]
comment-token = "--"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "sql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-sshclientconfig"
scope = "source.sshclientconfig"
file-types = [{ glob = "test/fixtures/**/.ssh/config" }, { glob = "test/fixtures/**//etc/ssh/ssh_config" }, { glob = "test/fixtures/**/ssh_config.d/*.conf" }]
comment-token = "#"
grammar = "sshclientconfig"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-starlark"
scope = "source.starlark"
file-types = [{ glob = "test/fixtures/**/*.bzl" }, { glob = "test/fixtures/**/*.bazel" }, { glob = "test/fixtures/**/*.star" }, { glob = "test/fixtures/**/BUILD" }, { glob = "test/fixtures/**/BUILD.*" }, { glob = "test/fixtures/**/Tiltfile" }, { glob = "test/fixtures/**/WORKSPACE" }, { glob = "test/fixtures/**/WORKSPACE.bzlmod" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "starlark"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-strace"
scope = "source.strace"
file-types = [{ glob = "test/fixtures/**/*.strace" }]
grammar = "strace"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-supercollider"
scope = "source.supercollider"
file-types = [{ glob = "test/fixtures/**/*.scd" }, { glob = "test/fixtures/**/*.sc" }, { glob = "test/fixtures/**/*.quark" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "supercollider"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-svelte"
scope = "source.svelte"
file-types = [{ glob = "test/fixtures/**/*.svelte" }]
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "svelteserver" ]
grammar = "svelte"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-sway"
scope = "source.sway"
file-types = [{ glob = "test/fixtures/**/*.sw" }]
language-servers = [ "forc" ]
roots = ["Forc.toml", "Forc.lock"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
grammar = "sway"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-swift"
scope = "source.swift"
file-types = [{ glob = "test/fixtures/**/*.swift" }, { glob = "test/fixtures/**/*.swiftinterface" }]
roots = [ "Package.swift" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
formatter = { command = "swift-format" }
language-servers = [ "sourcekit-lsp" ]
grammar = "swift"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-t32"
scope = "source.t32"
file-types = [{ glob = "test/fixtures/**/*.cmm" }, { glob = "test/fixtures/**/*.t32" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "t32"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-tablegen"
scope = "source.tablegen"
file-types = [{ glob = "test/fixtures/**/*.td" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "tablegen"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-tact"
scope = "source.tact"
file-types = [{ glob = "test/fixtures/**/*.tact" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "tact"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-task"
scope = "source.task"
file-types = [{ glob = "test/fixtures/**/*.task" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "task"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-tcl"
scope = "source.tcl"
file-types = [{ glob = "test/fixtures/**/*.tcl" }]
shebangs = [ "tclsh", "tclish", "jimsh", "wish" ]
comment-token = '#'
grammar = "tcl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-teal"
scope = "source.tl"
file-types = [{ glob = "test/fixtures/**/*.tl" }]
comment-tokens = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
roots = [ "tlconfig.lua" ]
language-servers = [ "teal-lsp" ]
grammar = "teal"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-templ"
scope = "source.templ"
file-types = [{ glob = "test/fixtures/**/*.templ" }]
roots = ["go.work", "go.mod"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "templ" ]
grammar = "templ"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-textproto"
file-types = [{ glob = "test/fixtures/**/*.txtpb" }, { glob = "test/fixtures/**/*.textpb" }, { glob = "test/fixtures/**/*.textproto" }]
comment-token = "#"
scope = "source.textproto"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "txtpbfmt" }
auto-format = true
grammar = "textproto"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-tfvars"
scope = "source.tfvars"
language-id = "terraform-vars"
file-types = [{ glob = "test/fixtures/**/*.tfvars" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "tfvars"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-thrift"
scope = "source.thrift"
file-types = [{ glob = "test/fixtures/**/*.thrift" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "thrift"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-todotxt"
scope = "text.todotxt"
file-types = [{ glob = "test/fixtures/**/*.todo.txt" }, { glob = "test/fixtures/**/*.todotxt" }]
formatter = { command = "sort" }
auto-format = true
grammar = "todotxt"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-toml"
scope = "source.toml"
file-types = [{ glob = "test/fixtures/**/*.toml" }, { glob = "test/fixtures/**/pdm.lock" }, { glob = "test/fixtures/**/poetry.lock" }, { glob = "test/fixtures/**/Cargo.lock" }, { glob = "test/fixtures/**/uv.lock" }]
comment-token = "#"
language-servers = [ "taplo" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "toml"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-tsq"
scope = "source.tsq"
file-types = [{ glob = "test/fixtures/**/queries/*.scm" }, { glob = "test/fixtures/**/injections.scm" }, { glob = "test/fixtures/**/highlights.scm" }, { glob = "test/fixtures/**/indents.scm" }, { glob = "test/fixtures/**/textobjects.scm" }, { glob = "test/fixtures/**/locals.scm" }, { glob = "test/fixtures/**/tags.scm" }]
comment-token = ";"
language-servers = ["ts_query_ls"]
grammar = "tsq"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-tsx"
scope = "source.tsx"
language-id = "typescriptreact"
file-types = [{ glob = "test/fixtures/**/*.tsx" }]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "tsx"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-twig"
scope = "source.twig"
file-types = [{ glob = "test/fixtures/**/*.twig" }]
block-comment-tokens = { start = "{#", end = "#}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "twig"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-typescript"
scope = "source.ts"
language-id = "typescript"
file-types = [{ glob = "test/fixtures/**/*.ts" }, { glob = "test/fixtures/**/*.mts" }, { glob = "test/fixtures/**/*.cts" }]
shebangs = ["deno", "bun", "ts-node"]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "typescript"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-typespec"
scope = "source.typespec"
language-id = "typespec"
file-types = [{ glob = "test/fixtures/**/*.tsp" }]
roots = ["tspconfig.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["typespec"]
indent = { unit = "  ", tab-width = 2 }
grammar = "typespec"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-typst"
scope = "source.typst"
file-types = [{ glob = "test/fixtures/**/*.typst" }, { glob = "test/fixtures/**/*.typ" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["tinymist", "typst-lsp"]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '$' = '$', '"' = '"' }
grammar = "typst"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-ungrammar"
scope = "source.ungrammar"
file-types = [{ glob = "test/fixtures/**/*.ungram" }, { glob = "test/fixtures/**/*.ungrammar" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "ungrammar"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-unison"
scope = "source.unison"
file-types = [{ glob = "test/fixtures/**/*.u" }]
shebangs = []
auto-format = true
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
grammar = "unison"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-unknown"
scope = "text.plain"
file-types = [{ glob = "*.foo" }, { glob = "*.txt" }]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-uxntal"
scope = "source.tal"
file-types = [{ glob = "test/fixtures/**/*.tal" }]
auto-format = true
block-comment-tokens = { start = "(", end = ")" }
grammar = "uxntal"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-v"
scope = "source.v"
file-types = [{ glob = "test/fixtures/**/*.v" }, { glob = "test/fixtures/**/*.vv" }, { glob = "test/fixtures/**/*.vsh" }]
shebangs = ["v run"]
roots = ["v.mod"]
language-servers = [ "vlang-language-server" ]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "v"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-vala"
scope = "source.vala"
file-types = [{ glob = "test/fixtures/**/*.vala" }, { glob = "test/fixtures/**/*.vapi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vala-language-server" ]
grammar = "vala"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-vento"
scope = "text.html.vto"
file-types = [{ glob = "test/fixtures/**/*.vto" }]
block-comment-tokens = { start = "{{#", end = "#}}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "vento"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-verilog"
scope = "source.verilog"
file-types = [{ glob = "test/fixtures/**/*.v" }, { glob = "test/fixtures/**/*.vh" }, { glob = "test/fixtures/**/*.sv" }, { glob = "test/fixtures/**/*.svh" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "svlangserver" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "verilog"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-vhdl"
scope = "source.vhdl"
file-types = [{ glob = "test/fixtures/**/*.vhd" }, { glob = "test/fixtures/**/*.vhdl" }]
comment-token = "--"
language-servers = [ "vhdl_ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "vhdl"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-vhs"
scope = "source.vhs"
file-types = [{ glob = "test/fixtures/**/*.tape" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "vhs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-vue"
scope = "source.vue"
file-types = [{ glob = "test/fixtures/**/*.vue" }]
roots = ["package.json"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vuels" ]
grammar = "vue"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-wast"
scope = "source.wast"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "test/fixtures/**/*.wast" }]
grammar = "wast"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-wat"
scope = "source.wat"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "test/fixtures/**/*.wat" }]
grammar = "wat"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-webc"
scope = "text.html.webc"
file-types = [{ glob = "test/fixtures/**/*.webc" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "webc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-wgsl"
scope = "source.wgsl"
file-types = [{ glob = "test/fixtures/**/*.wgsl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "wgsl_analyzer" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "wgsl"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-wit"
scope = "source.wit"
file-types = [{ glob = "test/fixtures/**/*.wit" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "wit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-wren"
scope = "source.wren"
file-types = [{ glob = "test/fixtures/**/*.wren" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "wren"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-xit"
scope = "source.xit"
file-types = [{ glob = "test/fixtures/**/*.xit" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "xit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-xml"
scope = "source.xml"
file-types = [{ glob = "test/fixtures/**/*.xml" }, { glob = "test/fixtures/**/*.mobileconfig" }, { glob = "test/fixtures/**/*.plist" }, { glob = "test/fixtures/**/*.xib" }, { glob = "test/fixtures/**/*.storyboard" }, { glob = "test/fixtures/**/*.svg" }, { glob = "test/fixtures/**/*.xsd" }, { glob = "test/fixtures/**/*.gml" }, { glob = "test/fixtures/**/*.xaml" }, { glob = "test/fixtures/**/*.gir" }, { glob = "test/fixtures/**/*.rss" }, { glob = "test/fixtures/**/*.atom" }, { glob = "test/fixtures/**/*.opml" }, { glob = "test/fixtures/**/*.policy" }, { glob = "test/fixtures/**/*.ascx" }, { glob = "test/fixtures/**/*.axml" }, { glob = "test/fixtures/**/*.axaml" }, { glob = "test/fixtures/**/*.bpmn" }, { glob = "test/fixtures/**/*.cpt" }, { glob = "test/fixtures/**/*.csl" }, { glob = "test/fixtures/**/*.csproj.user" }, { glob = "test/fixtures/**/*.dita" }, { glob = "test/fixtures/**/*.ditamap" }, { glob = "test/fixtures/**/*.dtml" }, { glob = "test/fixtures/**/*.fxml" }, { glob = "test/fixtures/**/*.iml" }, { glob = "test/fixtures/**/*.isml" }, { glob = "test/fixtures/**/*.jmx" }, { glob = "test/fixtures/**/*.launch" }, { glob = "test/fixtures/**/*.menu" }, { glob = "test/fixtures/**/*.mxml" }, { glob = "test/fixtures/**/*.nuspec" }, { glob = "test/fixtures/**/*.osc" }, { glob = "test/fixtures/**/*.osm" }, { glob = "test/fixtures/**/*.pt" }, { glob = "test/fixtures/**/*.publishsettings" }, { glob = "test/fixtures/**/*.pubxml" }, { glob = "test/fixtures/**/*.pubxml.user" }, { glob = "test/fixtures/**/*.rbxlx" }, { glob = "test/fixtures/**/*.rbxmx" }, { glob = "test/fixtures/**/*.rng" }, { glob = "test/fixtures/**/*.shproj" }, { glob = "test/fixtures/**/*.tld" }, { glob = "test/fixtures/**/*.tmx" }, { glob = "test/fixtures/**/*.vbproj.user" }, { glob = "test/fixtures/**/*.vcxproj" }, { glob = "test/fixtures/**/*.vcxproj.filters" }, { glob = "test/fixtures/**/*.wsdl" }, { glob = "test/fixtures/**/*.wxi" }, { glob = "test/fixtures/**/*.wxs" }, { glob = "test/fixtures/**/*.xbl" }, { glob = "test/fixtures/**/*.xlf" }, { glob = "test/fixtures/**/*.xliff" }, { glob = "test/fixtures/**/*.xpdl" }, { glob = "test/fixtures/**/*.xul" }, { glob = "test/fixtures/**/*.xoml" }, { glob = "test/fixtures/**/*.musicxml" }, { glob = "test/fixtures/**/*.glif" }, { glob = "test/fixtures/**/*.ui" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "xml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-xtc"
scope = "source.xtc"
file-types = [{ glob = "test/fixtures/**/*.xtc" }, { glob = "test/fixtures/**/*.xpc" }, { glob = "test/fixtures/**/*.xoa" }]
comment-token = ";"
grammar = "xtc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-yaml"
scope = "source.yaml"
file-types = [{ glob = "test/fixtures/**/*.yml" }, { glob = "test/fixtures/**/*.yaml" }, { glob = "test/fixtures/**/.prettierrc" }, { glob = "test/fixtures/**/.clangd" }, { glob = "test/fixtures/**/.clang-format" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "yaml-language-server", "ansible-language-server" ]
grammar = "yaml"

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-yuck"
scope = "source.yuck"
file-types = [{ glob = "test/fixtures/**/*.yuck" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "yuck"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-test-fixtures-**-zig"
scope = "source.zig"
file-types = [{ glob = "test/fixtures/**/*.zig" }, { glob = "test/fixtures/**/*.zon" }]
roots = ["build.zig"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
language-servers = [ "zls" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "zig" , args = ["fmt", "--stdin"] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "zig"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ada"
scope = "source.ada"
file-types = [{ glob = "tools/eslint/node_modules/**/*.adb" }, { glob = "tools/eslint/node_modules/**/*.ads" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-language-server"]
grammar = "ada"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-adl"
scope = "source.adl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.adl" }]
roots = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '<' = '>' }
grammar = "adl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-agda"
scope = "source.agda"
file-types = [{ glob = "tools/eslint/node_modules/**/*.agda" }]
roots = []
comment-token = "--"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', "'" = "'", '{' = '}', '(' = ')', '[' = ']' }
grammar = "agda"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-amber"
scope = "source.ab"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ab" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "amber"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-astro"
scope = "source.astro"
file-types = [{ glob = "tools/eslint/node_modules/**/*.astro" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "astro"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-awk"
scope = "source.awk"
file-types = [{ glob = "tools/eslint/node_modules/**/*.awk" }, { glob = "tools/eslint/node_modules/**/*.gawk" }, { glob = "tools/eslint/node_modules/**/*.nawk" }, { glob = "tools/eslint/node_modules/**/*.mawk" }]
comment-token = "#"
language-servers = [ "awk-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "awk"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-bash"
scope = "source.bash"
file-types = [{ glob = "tools/eslint/node_modules/**/*.sh" }, { glob = "tools/eslint/node_modules/**/*.bash" }, { glob = "tools/eslint/node_modules/**/*.ash" }, { glob = "tools/eslint/node_modules/**/*.dash" }, { glob = "tools/eslint/node_modules/**/*.ksh" }, { glob = "tools/eslint/node_modules/**/*.mksh" }, { glob = "tools/eslint/node_modules/**/*.zsh" }, { glob = "tools/eslint/node_modules/**/*.zshenv" }, { glob = "tools/eslint/node_modules/**/*.zlogin" }, { glob = "tools/eslint/node_modules/**/*.zlogout" }, { glob = "tools/eslint/node_modules/**/*.zprofile" }, { glob = "tools/eslint/node_modules/**/*.zshrc" }, { glob = "tools/eslint/node_modules/**/*.eclass" }, { glob = "tools/eslint/node_modules/**/*.ebuild" }, { glob = "tools/eslint/node_modules/**/*.bazelrc" }, { glob = "tools/eslint/node_modules/**/*.Renviron" }, { glob = "tools/eslint/node_modules/**/*.zsh-theme" }, { glob = "tools/eslint/node_modules/**/*.cshrc" }, { glob = "tools/eslint/node_modules/**/*.tcshrc" }, { glob = "tools/eslint/node_modules/**/*.bashrc_Apple_Terminal" }, { glob = "tools/eslint/node_modules/**/*.zshrc_Apple_Terminal" }, { glob = "tools/eslint/node_modules/**/i3/config" }, { glob = "tools/eslint/node_modules/**/sway/config" }, { glob = "tools/eslint/node_modules/**/tmux.conf" }, { glob = "tools/eslint/node_modules/**/.bash_history" }, { glob = "tools/eslint/node_modules/**/.bash_login" }, { glob = "tools/eslint/node_modules/**/.bash_logout" }, { glob = "tools/eslint/node_modules/**/.bash_profile" }, { glob = "tools/eslint/node_modules/**/.bashrc" }, { glob = "tools/eslint/node_modules/**/.profile" }, { glob = "tools/eslint/node_modules/**/.zshenv" }, { glob = "tools/eslint/node_modules/**/.zlogin" }, { glob = "tools/eslint/node_modules/**/.zlogout" }, { glob = "tools/eslint/node_modules/**/.zprofile" }, { glob = "tools/eslint/node_modules/**/.zshrc" }, { glob = "tools/eslint/node_modules/**/.zimrc" }, { glob = "tools/eslint/node_modules/**/APKBUILD" }, { glob = "tools/eslint/node_modules/**/.bash_aliases" }, { glob = "tools/eslint/node_modules/**/.Renviron" }, { glob = "tools/eslint/node_modules/**/.xprofile" }, { glob = "tools/eslint/node_modules/**/.xsession" }, { glob = "tools/eslint/node_modules/**/.xsessionrc" }, { glob = "tools/eslint/node_modules/**/.yashrc" }, { glob = "tools/eslint/node_modules/**/.yash_profile" }, { glob = "tools/eslint/node_modules/**/.hushlogin" }]
shebangs = ["sh", "bash", "dash", "zsh"]
comment-token = "#"
language-servers = [ "bash-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "bash"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-bass"
scope = "source.bass"
file-types = [{ glob = "tools/eslint/node_modules/**/*.bass" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bass" ]
grammar = "bass"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-beancount"
scope = "source.beancount"
file-types = [{ glob = "tools/eslint/node_modules/**/*.beancount" }, { glob = "tools/eslint/node_modules/**/*.bean" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "beancount"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-bibtex"
scope = "source.bib"
file-types = [{ glob = "tools/eslint/node_modules/**/*.bib" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter= { command = 'bibtex-tidy', args = [
  "-",
  "--curly",
  "--drop-all-caps",
  "--remove-empty-fields",
  "--sort-fields",
  "--sort=year,author,id",
  "--strip-enclosing-braces",
  "--trailing-commas",
] }
grammar = "bibtex"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-bicep"
scope = "source.bicep"
file-types = [{ glob = "tools/eslint/node_modules/**/*.bicep" }, { glob = "tools/eslint/node_modules/**/*.bicepparam" }]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bicep-langserver" ]
grammar = "bicep"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-bitbake"
language-servers = [ "bitbake-language-server" ]
scope = "source.bitbake"
file-types = [{ glob = "tools/eslint/node_modules/**/*.bb" }, { glob = "tools/eslint/node_modules/**/*.bbappend" }, { glob = "tools/eslint/node_modules/**/*.bbclass" }, { glob = "tools/eslint/node_modules/**/conf/*.conf" }, { glob = "tools/eslint/node_modules/**/conf/*/*.{inc,conf}" }, { glob = "tools/eslint/node_modules/**/recipe-*/*/*.inc" }]
comment-token = "#"
grammar = "bitbake"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-blade"
scope = "source.blade.php"
file-types = [{ glob = "tools/eslint/node_modules/**/*.blade.php" }, { glob = "tools/eslint/node_modules/**/*.blade" }]
roots = ["composer.json", "index.php"]
grammar = "blade"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-blueprint"
scope = "source.blueprint"
file-types = [{ glob = "tools/eslint/node_modules/**/*.blp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "blueprint-compiler" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "blueprint"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-c"
scope = "source.c"
file-types = [{ glob = "tools/eslint/node_modules/**/*.c" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "c"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-c-sharp"
scope = "source.csharp"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cs" }, { glob = "tools/eslint/node_modules/**/*.csx" }, { glob = "tools/eslint/node_modules/**/*.cake" }]
roots = ["sln", "csproj"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "omnisharp" ]
debugger= { name = "netcoredbg", transport = "tcp", command = "netcoredbg", args = [ "--interpreter=vscode" ], port-arg = "--server={}", templates = [{ name = "launch", request = "launch", completion = [ { name = "path to dll", completion = "filename" } ], args = { type = "coreclr", console = "internalConsole", internalConsoleOptions = "openOnSessionStart", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { processId = "{0}" } }] }
grammar = "c-sharp"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-cabal"
scope = "source.cabal"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cabal" }]
roots = ["cabal.project", "Setup.hs"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "--"
language-servers = [ "haskell-language-server" ]
grammar = "cabal"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-cairo"
scope = "source.cairo"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cairo" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
# auto-format = true
language-servers = [ "cairo-language-server" ]
grammar = "cairo"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-capnp"
scope = "source.capnp"
file-types = [{ glob = "tools/eslint/node_modules/**/*.capnp" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "capnp"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-cel"
scope = "source.cel"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cel" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cel"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-circom"
scope            = "source.circom"
file-types = [{ glob = "tools/eslint/node_modules/**/*.circom" }]
roots            = ["package.json"]
comment-tokens   = "//"
indent = { unit = "  ", tab-width = 2 }
auto-format      = false
language-servers = ["circom-lsp"]
grammar = "circom"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-clojure"
scope = "source.clojure"
file-types = [{ glob = "tools/eslint/node_modules/**/*.clj" }, { glob = "tools/eslint/node_modules/**/*.cljs" }, { glob = "tools/eslint/node_modules/**/*.cljc" }, { glob = "tools/eslint/node_modules/**/*.clje" }, { glob = "tools/eslint/node_modules/**/*.cljr" }, { glob = "tools/eslint/node_modules/**/*.cljx" }, { glob = "tools/eslint/node_modules/**/*.edn" }, { glob = "tools/eslint/node_modules/**/*.boot" }]
roots = ["project.clj", "build.boot", "deps.edn", "shadow-cljs.edn"]
comment-token = ";"
language-servers = [ "clojure-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "clojure"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-cmake"
scope = "source.cmake"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cmake" }, { glob = "tools/eslint/node_modules/**/CMakeLists.txt" }]
comment-token = "#"
block-comment-tokens = { start = "#[[", end = "]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cmake-language-server" ]
grammar = "cmake"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-comment"
scope = "scope.comment"
file-types = []
grammar = "comment"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-common-lisp"
scope = "source.lisp"
file-types = [{ glob = "tools/eslint/node_modules/**/*.lisp" }, { glob = "tools/eslint/node_modules/**/*.asd" }, { glob = "tools/eslint/node_modules/**/*.cl" }, { glob = "tools/eslint/node_modules/**/*.l" }, { glob = "tools/eslint/node_modules/**/*.lsp" }, { glob = "tools/eslint/node_modules/**/*.ny" }, { glob = "tools/eslint/node_modules/**/*.podsl" }, { glob = "tools/eslint/node_modules/**/*.sexp" }]
shebangs = ["lisp", "sbcl", "ccl", "clisp", "ecl"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cl-lsp" ]
grammar = "common-lisp"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-cpon"
scope = "scope.cpon"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cpon" }, { glob = "tools/eslint/node_modules/**/*.cp" }]
auto-format = true
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cpon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-cpp"
scope = "source.cpp"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cc" }, { glob = "tools/eslint/node_modules/**/*.hh" }, { glob = "tools/eslint/node_modules/**/*.c++" }, { glob = "tools/eslint/node_modules/**/*.cpp" }, { glob = "tools/eslint/node_modules/**/*.hpp" }, { glob = "tools/eslint/node_modules/**/*.h" }, { glob = "tools/eslint/node_modules/**/*.ipp" }, { glob = "tools/eslint/node_modules/**/*.tpp" }, { glob = "tools/eslint/node_modules/**/*.cxx" }, { glob = "tools/eslint/node_modules/**/*.hxx" }, { glob = "tools/eslint/node_modules/**/*.ixx" }, { glob = "tools/eslint/node_modules/**/*.txx" }, { glob = "tools/eslint/node_modules/**/*.ino" }, { glob = "tools/eslint/node_modules/**/*.C" }, { glob = "tools/eslint/node_modules/**/*.H" }, { glob = "tools/eslint/node_modules/**/*.cu" }, { glob = "tools/eslint/node_modules/**/*.cuh" }, { glob = "tools/eslint/node_modules/**/*.cppm" }, { glob = "tools/eslint/node_modules/**/*.h++" }, { glob = "tools/eslint/node_modules/**/*.ii" }, { glob = "tools/eslint/node_modules/**/*.inl" }, { glob = "tools/eslint/node_modules/**/.hpp.in" }, { glob = "tools/eslint/node_modules/**/.h.in" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "cpp"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-crystal"
scope = "source.cr"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cr" }]
roots = ["shard.yml", "shard.lock"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "crystal"
language-servers = [ "crystalline" ]

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-css"
scope = "source.css"
file-types = [{ glob = "tools/eslint/node_modules/**/*.css" }, { glob = "tools/eslint/node_modules/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "css"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-cue"
scope = "source.cue"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cue" }]
roots = ["cue.mod"]
auto-format = true
comment-token = "//"
language-servers = [ "cuelsp" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "cue", args = ["fmt", "-"] }
grammar = "cue"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-cylc"
scope = "source.cylc"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cylc" }, { glob = "tools/eslint/node_modules/**/suite.rc" }]
comment-tokens = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "cylc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-d"
scope = "source.d"
file-types = [{ glob = "tools/eslint/node_modules/**/*.d" }, { glob = "tools/eslint/node_modules/**/*.dd" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "serve-d" ]
formatter = { command = "dfmt" }
grammar = "d"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-dart"
scope = "source.dart"
file-types = [{ glob = "tools/eslint/node_modules/**/*.dart" }]
roots = ["pubspec.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "dart" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "dart"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-dbml"
scope = "source.dbml"
file-types = [{ glob = "tools/eslint/node_modules/**/*.dbml" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dbml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-devicetree"
scope = "source.devicetree"
file-types = [{ glob = "tools/eslint/node_modules/**/*.dts" }, { glob = "tools/eslint/node_modules/**/*.dtsi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "devicetree"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-dhall"
scope = "source.dhall"
file-types = [{ glob = "tools/eslint/node_modules/**/*.dhall" }]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dhall-lsp-server" ]
formatter = { command = "dhall" , args = ["format"] }
grammar = "dhall"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-diff"
scope = "source.diff"
file-types = [{ glob = "tools/eslint/node_modules/**/*.diff" }, { glob = "tools/eslint/node_modules/**/*.patch" }, { glob = "tools/eslint/node_modules/**/*.rej" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "diff"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-docker-compose"
scope = "source.yaml.docker-compose"
roots = ["docker-compose.yaml", "docker-compose.yml"]
language-servers = [ "docker-compose-langserver", "yaml-language-server" ]
file-types = [{ glob = "tools/eslint/node_modules/**/docker-compose.yaml" }, { glob = "tools/eslint/node_modules/**/docker-compose.yml" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "docker-compose"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-dockerfile"
scope = "source.dockerfile"
roots = ["Dockerfile", "Containerfile"]
file-types = [{ glob = "tools/eslint/node_modules/**/*.Dockerfile" }, { glob = "tools/eslint/node_modules/**/Dockerfile" }, { glob = "tools/eslint/node_modules/**/Dockerfile.*" }, { glob = "tools/eslint/node_modules/**/*.dockerfile" }, { glob = "tools/eslint/node_modules/**/dockerfile" }, { glob = "tools/eslint/node_modules/**/dockerfile.*" }, { glob = "tools/eslint/node_modules/**/*.Containerfile" }, { glob = "tools/eslint/node_modules/**/Containerfile" }, { glob = "tools/eslint/node_modules/**/Containerfile.*" }, { glob = "tools/eslint/node_modules/**/*.containerfile" }, { glob = "tools/eslint/node_modules/**/containerfile" }, { glob = "tools/eslint/node_modules/**/containerfile.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "docker-langserver" ]
grammar = "dockerfile"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-dot"
scope = "source.dot"
file-types = [{ glob = "tools/eslint/node_modules/**/*.dot" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dot-language-server" ]
grammar = "dot"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-dtd"
scope = "source.dtd"
file-types = [{ glob = "tools/eslint/node_modules/**/*.dtd" }, { glob = "tools/eslint/node_modules/**/*.ent" }]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '<' = '>' }
grammar = "dtd"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-dune"
scope = "source.dune"
roots = ["dune-project"]
file-types = [{ glob = "tools/eslint/node_modules/**/dune-project" }, { glob = "tools/eslint/node_modules/**/dune" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dune"
auto-format = true
formatter = { command = "dune", args = ["format-dune-file"] }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-earthfile"
scope = "source.earthfile"
roots = ["Earthfile"]
file-types = [{ glob = "tools/eslint/node_modules/**/Earthfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["earthlyls"]
grammar = "earthfile"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-edoc"
scope = "source.edoc"
file-types = [{ glob = "tools/eslint/node_modules/**/*.edoc" }, { glob = "tools/eslint/node_modules/**/*.edoc.in" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "edoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-eex"
scope = "source.eex"
file-types = [{ glob = "tools/eslint/node_modules/**/*.eex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "eex"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ejs"
scope = "text.html.ejs"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ejs" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ejs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-elisp"
scope = "source.elisp"
file-types = [{ glob = "tools/eslint/node_modules/**/*.el" }]
comment-tokens = [";"]
auto-pairs= { '(' = ')', '"' = '"' }
grammar = "elisp"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-elixir"
scope = "source.elixir"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ex" }, { glob = "tools/eslint/node_modules/**/*.exs" }, { glob = "tools/eslint/node_modules/**/mix.lock" }]
shebangs = ["elixir"]
roots = ["mix.exs", "mix.lock"]
comment-token = "#"
language-servers = [ "elixir-ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elixir"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-elm"
scope = "source.elm"
file-types = [{ glob = "tools/eslint/node_modules/**/*.elm" }]
roots = ["elm.json"]
auto-format = true
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "elm-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elm"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-elvish"
scope = "source.elvish"
shebangs = ["elvish"]
file-types = [{ glob = "tools/eslint/node_modules/**/*.elv" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elvish" ]
grammar = "elvish"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-env"
scope = "source.env"
file-types = [{ glob = "tools/eslint/node_modules/**/.env" }, { glob = "tools/eslint/node_modules/**/.env.*" }, { glob = "tools/eslint/node_modules/**/.envrc" }, { glob = "tools/eslint/node_modules/**/.envrc.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "env"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-erb"
scope = "text.html.erb"
file-types = [{ glob = "tools/eslint/node_modules/**/*.erb" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "erb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-erlang"
scope = "source.erlang"
file-types = [{ glob = "tools/eslint/node_modules/**/*.erl" }, { glob = "tools/eslint/node_modules/**/*.hrl" }, { glob = "tools/eslint/node_modules/**/*.app" }, { glob = "tools/eslint/node_modules/**/rebar.config" }, { glob = "tools/eslint/node_modules/**/rebar.lock" }, { glob = "tools/eslint/node_modules/**/*.app.src" }]
roots = ["rebar.config"]
shebangs = ["escript"]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "erlang-ls", "elp" ]
grammar = "erlang"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-esdl"
scope = "source.esdl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.esdl" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
roots = ["edgedb.toml"]
grammar = "esdl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-fidl"
scope = "source.fidl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.fidl" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "fidl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-fish"
scope = "source.fish"
file-types = [{ glob = "tools/eslint/node_modules/**/*.fish" }]
shebangs = ["fish"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "fish_indent" }
grammar = "fish"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-forth"
scope = "source.forth"
file-types = [{ glob = "tools/eslint/node_modules/**/*.fs" }, { glob = "tools/eslint/node_modules/**/*.forth" }, { glob = "tools/eslint/node_modules/**/*.fth" }, { glob = "tools/eslint/node_modules/**/*.4th" }]
comment-token = "\\"
language-servers = [ "forth-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "forth"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-fortran"
scope = "source.fortran"
file-types = [{ glob = "tools/eslint/node_modules/**/*.f" }, { glob = "tools/eslint/node_modules/**/*.for" }, { glob = "tools/eslint/node_modules/**/*.f90" }, { glob = "tools/eslint/node_modules/**/*.f95" }, { glob = "tools/eslint/node_modules/**/*.f03" }]
roots = ["fpm.toml"]
comment-token = "!"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "fortls" ]
grammar = "fortran"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-fsharp"
scope = "source.fs"
roots = ["sln", "fsproj"]
file-types = [{ glob = "tools/eslint/node_modules/**/*.fs" }, { glob = "tools/eslint/node_modules/**/*.fsx" }, { glob = "tools/eslint/node_modules/**/*.fsi" }, { glob = "tools/eslint/node_modules/**/*.fsscript" }]
comment-token = "//"
block-comment-tokens = { start = "(*", end = "*)" }
indent = { unit = "  ", tab-width = 2 }
auto-format = true
language-servers = ["fsharp-ls"]
grammar = "fsharp"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gas"
scope = "source.gas"
file-types = [{ glob = "tools/eslint/node_modules/**/*.s" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gas"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gdscript"
scope = "source.gdscript"
file-types = [{ glob = "tools/eslint/node_modules/**/*.gd" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
formatter = { command = "gdformat", args = ["-"] }
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
grammar = "gdscript"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gemini"
scope = "source.gmi"
file-types = [{ glob = "tools/eslint/node_modules/**/*.gmi" }]
grammar = "gemini"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gherkin"
scope = "source.feature"
file-types = [{ glob = "tools/eslint/node_modules/**/*.feature" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gherkin"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-git-attributes"
scope = "source.gitattributes"
file-types = [{ glob = "tools/eslint/node_modules/**/.gitattributes" }]
comment-token = "#"
grammar = "git-attributes"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-git-commit"
scope = "git.commitmsg"
file-types = [{ glob = "tools/eslint/node_modules/**/COMMIT_EDITMSG" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "git-commit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-git-config"
scope = "source.gitconfig"
file-types = [{ glob = "tools/eslint/node_modules/**/.gitmodules" }, { glob = "tools/eslint/node_modules/**/.gitconfig" }, { glob = "tools/eslint/node_modules/**/.git/config" }, { glob = "tools/eslint/node_modules/**/.config/git/config" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-config"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-git-ignore"
scope = "source.gitignore"
file-types = [{ glob = "tools/eslint/node_modules/**/.gitignore_global" }, { glob = "tools/eslint/node_modules/**/git/ignore" }, { glob = "tools/eslint/node_modules/**/.ignore" }, { glob = "tools/eslint/node_modules/**/CODEOWNERS" }, { glob = "tools/eslint/node_modules/**/.config/helix/ignore" }, { glob = "tools/eslint/node_modules/**/.helix/ignore" }, { glob = "tools/eslint/node_modules/**/.*ignore" }]
comment-token = "#"
grammar = "git-ignore"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-git-rebase"
scope = "source.gitrebase"
file-types = [{ glob = "tools/eslint/node_modules/**/git-rebase-todo" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-rebase"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gjs"
scope = "source.gjs"
file-types = [{ glob = "tools/eslint/node_modules/**/*.gjs" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gjs"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gleam"
scope = "source.gleam"
file-types = [{ glob = "tools/eslint/node_modules/**/*.gleam" }]
roots = ["gleam.toml"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "gleam" ]
auto-format = true
grammar = "gleam"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-glimmer"
scope = "source.glimmer"
file-types = [{ glob = "tools/eslint/node_modules/**/{app,addon}/{components,templates}/*.hbs" }]
block-comment-tokens = { start = "{{!", end = "}}" }
roots = ["package.json", "ember-cli-build.js"]
grammar = "glimmer"
language-servers = ["ember-language-server"]
formatter = { command = "prettier", args = ['--parser', 'glimmer'] }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>', "'" = "'" }
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-glsl"
scope = "source.glsl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.glsl" }, { glob = "tools/eslint/node_modules/**/*.vert" }, { glob = "tools/eslint/node_modules/**/*.tesc" }, { glob = "tools/eslint/node_modules/**/*.tese" }, { glob = "tools/eslint/node_modules/**/*.geom" }, { glob = "tools/eslint/node_modules/**/*.frag" }, { glob = "tools/eslint/node_modules/**/*.comp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "glsl_analyzer" ]
grammar = "glsl"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gn"
scope = "source.gn"
file-types = [{ glob = "tools/eslint/node_modules/**/*.gn" }, { glob = "tools/eslint/node_modules/**/*.gni" }]
roots = []
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "gn", args = ["format", "--stdin"] }
grammar = "gn"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-go"
scope = "source.go"
file-types = [{ glob = "tools/eslint/node_modules/**/*.go" }]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls", "golangci-lint-lsp" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "go", transport = "tcp", command = "dlv", args = ["dap"], port-arg = "-l 127.0.0.1:{}", templates = [{ name = "source", request = "launch", completion = [ { name = "entrypoint", completion = "filename", default = "." } ], args = { mode = "debug", program = "{0}" } }, { name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { mode = "exec", program = "{0}" } }, { name = "test", request = "launch", completion = [ { name = "tests", completion = "directory", default = "." } ], args = { mode = "test", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { mode = "local", processId = "{0}" } }, { name = "core", request = "launch", completion = [ { name = "binary", completion = "filename" }, { name = "core", completion = "filename" } ], args = { mode = "core", program = "{0}", coreFilePath = "{1}" } }] }
grammar = "go"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-godot-resource"
scope = "source.tscn"
file-types = [{ glob = "tools/eslint/node_modules/**/*.tscn" }, { glob = "tools/eslint/node_modules/**/*.tres" }, { glob = "tools/eslint/node_modules/**/*.godot" }, { glob = "tools/eslint/node_modules/**/*.gdextension" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "godot-resource"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gomod"
scope = "source.gomod"
file-types = [{ glob = "tools/eslint/node_modules/**/go.mod" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gomod"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gotmpl"
scope = "source.gotmpl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.gotmpl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gotmpl"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gowork"
scope = "source.gowork"
file-types = [{ glob = "tools/eslint/node_modules/**/go.work" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gowork"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gpr"
scope = "source.gpr"
file-types = [{ glob = "tools/eslint/node_modules/**/*.gpr" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-gpr-language-server"]
grammar = "gpr"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-graphql"
scope = "source.graphql"
file-types = [{ glob = "tools/eslint/node_modules/**/*.gql" }, { glob = "tools/eslint/node_modules/**/*.graphql" }, { glob = "tools/eslint/node_modules/**/*.graphqls" }]
language-servers = [ "graphql-language-service" ]
comment-token = "#"
block-comment-tokens = { start = "\"\"\"", end = "\"\"\"" }
indent = { unit = "  ", tab-width = 2 }
grammar = "graphql"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-groovy"
language-id = "groovy"
scope = "source.groovy"
file-types = [{ glob = "tools/eslint/node_modules/**/*.gradle" }, { glob = "tools/eslint/node_modules/**/*.groovy" }, { glob = "tools/eslint/node_modules/**/*.jenkinsfile" }, { glob = "tools/eslint/node_modules/**/Jenkinsfile" }, { glob = "tools/eslint/node_modules/**/Jenkinsfile.*" }]
shebangs = ["groovy"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "groovy"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-gts"
scope = "source.gts"
file-types = [{ glob = "tools/eslint/node_modules/**/*.gts" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gts"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-hare"
scope = "source.hare"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ha" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "hare"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-haskell"
scope = "source.haskell"
file-types = [{ glob = "tools/eslint/node_modules/**/*.hs" }, { glob = "tools/eslint/node_modules/**/*.hs-boot" }, { glob = "tools/eslint/node_modules/**/*.hsc" }]
roots = ["Setup.hs", "stack.yaml", "cabal.project"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "haskell-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-haskell-persistent"
scope = "source.persistentmodels"
file-types = [{ glob = "tools/eslint/node_modules/**/*.persistentmodels" }]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell-persistent"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-hcl"
scope = "source.hcl"
language-id = "terraform"
file-types = [{ glob = "tools/eslint/node_modules/**/*.hcl" }, { glob = "tools/eslint/node_modules/**/*.tf" }, { glob = "tools/eslint/node_modules/**/*.nomad" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "hcl"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-heex"
scope = "source.heex"
file-types = [{ glob = "tools/eslint/node_modules/**/*.heex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elixir-ls" ]
grammar = "heex"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-helm"
grammar = "helm"
scope = "source.helm"
roots = ["Chart.yaml"]
comment-token = "#"
language-servers = ["helm_ls"]
file-types = [{ glob = "tools/eslint/node_modules/**/templates/*.yaml" }, { glob = "tools/eslint/node_modules/**/templates/*.yml" }, { glob = "tools/eslint/node_modules/**/templates/_*.tpl" }, { glob = "tools/eslint/node_modules/**/templates/NOTES.txt" }]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-hocon"
scope = "source.conf"
file-types = [{ glob = "tools/eslint/node_modules/**/**/src/*/resources/**/*.conf" }, { glob = "tools/eslint/node_modules/**/*scalafmt*.conf" }, { glob = "tools/eslint/node_modules/**/*scalafix*.conf" }]
comment-token = "#"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "hocon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-hoon"
scope = "source.hoon"
file-types = [{ glob = "tools/eslint/node_modules/**/*.hoon" }]
comment-token = "::"
indent = { unit = "  ", tab-width = 2 }
grammar = "hoon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-hosts"
scope = "source.hosts"
file-types = [{ glob = "tools/eslint/node_modules/**/hosts" }]
comment-token = "#"
grammar = "hosts"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-html"
scope = "text.html.basic"
file-types = [{ glob = "tools/eslint/node_modules/**/*.html" }, { glob = "tools/eslint/node_modules/**/*.htm" }, { glob = "tools/eslint/node_modules/**/*.shtml" }, { glob = "tools/eslint/node_modules/**/*.xhtml" }, { glob = "tools/eslint/node_modules/**/*.xht" }, { glob = "tools/eslint/node_modules/**/*.jsp" }, { glob = "tools/eslint/node_modules/**/*.asp" }, { glob = "tools/eslint/node_modules/**/*.aspx" }, { glob = "tools/eslint/node_modules/**/*.jshtm" }, { glob = "tools/eslint/node_modules/**/*.volt" }, { glob = "tools/eslint/node_modules/**/*.rhtml" }, { glob = "tools/eslint/node_modules/**/*.cshtml" }]
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "vscode-html-language-server", "superhtml" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "html"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-hurl"
scope = "source.hurl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.hurl" }]
comment-token = "#"
formatter = { command = "hurlfmt" }
indent = { unit = "  ", tab-width = 2 }
grammar = "hurl"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-hyprlang"
scope = "source.hyprlang"
roots = ["hyprland.conf"]
file-types = [{ glob = "tools/eslint/node_modules/**/hypr/*.conf" }]
comment-token = "#"
grammar = "hyprlang"
language-servers = ["hyprls"]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-idris"
scope = "source.idr"
file-types = [{ glob = "tools/eslint/node_modules/**/*.idr" }]
shebangs = []
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "idris2-lsp" ]
grammar = "idris"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-iex"
scope = "source.iex"
file-types = [{ glob = "tools/eslint/node_modules/**/*.iex" }]
comment-token = "#"
grammar = "iex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ini"
scope = "source.ini"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ini" }, { glob = "tools/eslint/node_modules/**/*.service" }, { glob = "tools/eslint/node_modules/**/*.automount" }, { glob = "tools/eslint/node_modules/**/*.device" }, { glob = "tools/eslint/node_modules/**/*.mount" }, { glob = "tools/eslint/node_modules/**/*.path" }, { glob = "tools/eslint/node_modules/**/*.service" }, { glob = "tools/eslint/node_modules/**/*.slice" }, { glob = "tools/eslint/node_modules/**/*.socket" }, { glob = "tools/eslint/node_modules/**/*.swap" }, { glob = "tools/eslint/node_modules/**/*.target" }, { glob = "tools/eslint/node_modules/**/*.timer" }, { glob = "tools/eslint/node_modules/**/*.container" }, { glob = "tools/eslint/node_modules/**/*.volume" }, { glob = "tools/eslint/node_modules/**/*.kube" }, { glob = "tools/eslint/node_modules/**/*.network" }, { glob = "tools/eslint/node_modules/**/.editorconfig" }, { glob = "tools/eslint/node_modules/**/.npmrc" }, { glob = "tools/eslint/node_modules/**/npmrc" }, { glob = "tools/eslint/node_modules/**/rclone.conf" }, { glob = "tools/eslint/node_modules/**/*.properties" }, { glob = "tools/eslint/node_modules/**/*.cfg" }, { glob = "tools/eslint/node_modules/**/*.directory" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "ini"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-inko"
auto-format = true
scope = "source.inko"
file-types = [{ glob = "tools/eslint/node_modules/**/*.inko" }]
roots = ["inko.pkg"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "inko", args = ["fmt", "-"] }
grammar = "inko"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-janet"
scope = "source.janet"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cgen" }, { glob = "tools/eslint/node_modules/**/*.janet" }, { glob = "tools/eslint/node_modules/**/*.jdn" }]
shebangs = ["janet"]
roots = ["project.janet"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "janet-format" }
grammar = "janet"
auto-pairs= { '"' = '"', '(' = ')', '[' = ']', '{' = '}', "`" = "`" }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-java"
scope = "source.java"
file-types = [{ glob = "tools/eslint/node_modules/**/*.java" }, { glob = "tools/eslint/node_modules/**/*.jav" }, { glob = "tools/eslint/node_modules/**/*.pde" }]
roots = ["pom.xml", "build.gradle", "build.gradle.kts"]
language-servers = [ "jdtls" ]
indent = { unit = "  ", tab-width = 2 }
comment-tokens = ["//"]
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "java"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-javascript"
scope = "source.js"
language-id = "javascript"
file-types = [{ glob = "tools/eslint/node_modules/**/*.js" }, { glob = "tools/eslint/node_modules/**/*.mjs" }, { glob = "tools/eslint/node_modules/**/*.cjs" }, { glob = "tools/eslint/node_modules/**/*.rules" }, { glob = "tools/eslint/node_modules/**/*.es6" }, { glob = "tools/eslint/node_modules/**/*.pac" }, { glob = "tools/eslint/node_modules/**/.node_repl_history" }, { glob = "tools/eslint/node_modules/**/jakefile" }]
shebangs = ["node"]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "node-debug2", transport = "stdio", quirks = { absolute-paths = true }, templates = [{ name = "source", request = "launch", completion = [ { name = "main", completion = "filename", default = "index.js" } ], args = { program = "{0}" } }] }
grammar = "javascript"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-jinja"
scope = "text.html.jinja"
file-types = [{ glob = "tools/eslint/node_modules/**/*.jinja" }, { glob = "tools/eslint/node_modules/**/*.jinja2" }, { glob = "tools/eslint/node_modules/**/*.j2" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jinja"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-jjdescription"
scope = "jj.description"
file-types = [{ glob = "tools/eslint/node_modules/**/*.jjdescription" }]
comment-token = "JJ:"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "jjdescription"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-jq"
scope = "source.jq"
file-types = [{ glob = "tools/eslint/node_modules/**/*.jq" }]
comment-token = "#"
language-servers = ["jq-lsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "jq"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-jsdoc"
scope = "source.jsdoc"
file-types = [{ glob = "tools/eslint/node_modules/**/*.jsdoc" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsdoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-json"
scope = "source.json"
file-types = [{ glob = "tools/eslint/node_modules/**/*.json" }, { glob = "tools/eslint/node_modules/**/*.arb" }, { glob = "tools/eslint/node_modules/**/*.ipynb" }, { glob = "tools/eslint/node_modules/**/*.geojson" }, { glob = "tools/eslint/node_modules/**/*.gltf" }, { glob = "tools/eslint/node_modules/**/*.webmanifest" }, { glob = "tools/eslint/node_modules/**/flake.lock" }, { glob = "tools/eslint/node_modules/**/.babelrc" }, { glob = "tools/eslint/node_modules/**/.bowerrc" }, { glob = "tools/eslint/node_modules/**/.jscrc" }, { glob = "tools/eslint/node_modules/**/*.js.map" }, { glob = "tools/eslint/node_modules/**/*.ts.map" }, { glob = "tools/eslint/node_modules/**/*.css.map" }, { glob = "tools/eslint/node_modules/**/.jslintrc" }, { glob = "tools/eslint/node_modules/**/*.jsonl" }, { glob = "tools/eslint/node_modules/**/*.jsonld" }, { glob = "tools/eslint/node_modules/**/.vuerc" }, { glob = "tools/eslint/node_modules/**/composer.lock" }, { glob = "tools/eslint/node_modules/**/.watchmanconfig" }, { glob = "tools/eslint/node_modules/**/*.avsc" }, { glob = "tools/eslint/node_modules/**/*.ldtk" }, { glob = "tools/eslint/node_modules/**/*.ldtkl" }, { glob = "tools/eslint/node_modules/**/.swift-format" }]
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "json"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-json5"
scope = "source.json5"
file-types = [{ glob = "tools/eslint/node_modules/**/*.json5" }]
language-servers = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "json5"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-jsonc"
scope = "source.json"
file-types = [{ glob = "tools/eslint/node_modules/**/*.jsonc" }, { glob = "tools/eslint/node_modules/**/tsconfig.json" }]
grammar = "jsonc"
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-jsonnet"
scope = "source.jsonnet"
file-types = [{ glob = "tools/eslint/node_modules/**/*.libsonnet" }, { glob = "tools/eslint/node_modules/**/*.jsonnet" }]
roots = ["jsonnetfile.json"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "jsonnet-language-server" ]
grammar = "jsonnet"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-jsx"
scope = "source.jsx"
language-id = "javascriptreact"
file-types = [{ glob = "tools/eslint/node_modules/**/*.jsx" }]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsx"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-julia"
scope = "source.julia"
file-types = [{ glob = "tools/eslint/node_modules/**/*.jl" }]
shebangs = ["julia"]
roots = ["Manifest.toml", "Project.toml"]
comment-token = "#"
block-comment-tokens = { start = "#=", end = "=#" }
language-servers = [ "julia" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "julia"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-just"
scope = "source.just"
file-types = [{ glob = "tools/eslint/node_modules/**/*.just" }, { glob = "tools/eslint/node_modules/**/justfile" }, { glob = "tools/eslint/node_modules/**/Justfile" }, { glob = "tools/eslint/node_modules/**/.justfile" }, { glob = "tools/eslint/node_modules/**/.Justfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "just"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-kdl"
scope = "source.kdl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.kdl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "kdl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-koka"
scope = "source.koka"
file-types = [{ glob = "tools/eslint/node_modules/**/*.kk" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koka"]
grammar = "koka"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-kotlin"
scope = "source.kotlin"
file-types = [{ glob = "tools/eslint/node_modules/**/*.kt" }, { glob = "tools/eslint/node_modules/**/*.kts" }]
roots = ["settings.gradle", "settings.gradle.kts"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "kotlin-language-server" ]
grammar = "kotlin"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-koto"
scope = "source.koto"
file-types = [{ glob = "tools/eslint/node_modules/**/*.koto" }]
comment-token = "#"
block-comment-tokens = ["#-", "-#"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koto-ls"]
grammar = "koto"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-latex"
scope = "source.tex"
file-types = [{ glob = "tools/eslint/node_modules/**/*.tex" }, { glob = "tools/eslint/node_modules/**/*.sty" }, { glob = "tools/eslint/node_modules/**/*.cls" }, { glob = "tools/eslint/node_modules/**/*.Rd" }, { glob = "tools/eslint/node_modules/**/*.bbx" }, { glob = "tools/eslint/node_modules/**/*.cbx" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "latex"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ld"
scope = "source.ld"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ld" }]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ld"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ldif"
scope = "source.ldif"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ldif" }]
comment-token = "#"
grammar = "ldif"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-lean"
scope = "source.lean"
file-types = [{ glob = "tools/eslint/node_modules/**/*.lean" }]
roots = [ "lakefile.lean" ]
comment-token = "--"
block-comment-tokens = { start = "/-", end = "-/" }
language-servers = [ "lean" ]
indent = { unit = "  ", tab-width = 2 }
rulers = [101]
text-width = 100
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '⟨' = '⟩' }
grammar = "lean"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ledger"
scope = "source.ledger"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ldg" }, { glob = "tools/eslint/node_modules/**/*.ledger" }, { glob = "tools/eslint/node_modules/**/*.journal" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "ledger"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-llvm"
scope = "source.llvm"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ll" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-llvm-mir"
scope = "source.llvm_mir"
file-types = []
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-llvm-mir-yaml"
# TODO allow languages to point to their grammar like so:
#
#     grammar = "yaml"
scope = "source.yaml"
file-types = [{ glob = "tools/eslint/node_modules/**/*.mir" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir-yaml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-log"
scope = "source.log"
file-types = [{ glob = "tools/eslint/node_modules/**/*.log" }]
grammar = "log"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-lpf"
comment-token = "#"
scope = "source.lpf"
file-types = [{ glob = "tools/eslint/node_modules/**/*.lpf" }]
grammar = "lpf"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-lua"
scope = "source.lua"
file-types = [{ glob = "tools/eslint/node_modules/**/*.lua" }]
shebangs = ["lua", "luajit"]
roots = [".luarc.json", ".luacheckrc", ".stylua.toml", "selene.toml", ".git"]
comment-token = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "lua-language-server" ]
grammar = "lua"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-make"
scope = "source.make"
file-types = [{ glob = "tools/eslint/node_modules/**/Makefile" }, { glob = "tools/eslint/node_modules/**/makefile" }, { glob = "tools/eslint/node_modules/**/*.make" }, { glob = "tools/eslint/node_modules/**/*.mk" }, { glob = "tools/eslint/node_modules/**/*.mak" }, { glob = "tools/eslint/node_modules/**/GNUmakefile" }, { glob = "tools/eslint/node_modules/**/OCamlMakefile" }]
shebangs = ["make", "gmake"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "make"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-markdoc"
scope = "text.markdoc"
block-comment-tokens = { start = "<!--", end = "-->" }
file-types = [{ glob = "tools/eslint/node_modules/**/*.mdoc" }]
language-servers = [ "markdoc-ls" ]
grammar = "markdoc"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-markdown"
scope = "source.md"
file-types = [{ glob = "tools/eslint/node_modules/**/*.md" }, { glob = "tools/eslint/node_modules/**/*.livemd" }, { glob = "tools/eslint/node_modules/**/*.markdown" }, { glob = "tools/eslint/node_modules/**/*.mdx" }, { glob = "tools/eslint/node_modules/**/*.mkd" }, { glob = "tools/eslint/node_modules/**/*.mkdn" }, { glob = "tools/eslint/node_modules/**/*.mdwn" }, { glob = "tools/eslint/node_modules/**/*.mdown" }, { glob = "tools/eslint/node_modules/**/*.markdn" }, { glob = "tools/eslint/node_modules/**/*.mdtxt" }, { glob = "tools/eslint/node_modules/**/*.mdtext" }, { glob = "tools/eslint/node_modules/**/*.workbook" }, { glob = "tools/eslint/node_modules/**/PULLREQ_EDITMSG" }]
roots = [".marksman.toml"]
language-servers = [ "marksman", "markdown-oxide" ]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "markdown"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-markdown.inline"
scope = "source.markdown.inline"
file-types = []
grammar = "markdown.inline"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-matlab"
scope = "source.m"
file-types = [{ glob = "tools/eslint/node_modules/**/*.m" }]
comment-token = "%"
shebangs = ["octave-cli", "matlab"]
indent = { unit = "  ", tab-width = 2 }
grammar = "matlab"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-mermaid"
scope = "source.mermaid"
file-types = [{ glob = "tools/eslint/node_modules/**/*.mermaid" }, { glob = "tools/eslint/node_modules/**/*.mmd" }]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
grammar = "mermaid"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-meson"
scope = "source.meson"
file-types = [{ glob = "tools/eslint/node_modules/**/meson.build" }, { glob = "tools/eslint/node_modules/**/meson.options" }, { glob = "tools/eslint/node_modules/**/meson_options.txt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["mesonlsp"]
grammar = "meson"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-mint"
scope = "source.mint"
file-types = [{ glob = "tools/eslint/node_modules/**/*.mint" }]
shebangs = []
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "mint" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "mint"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-mojo"
scope = "source.mojo"
roots = ["__init__.mojo"]
file-types = [{ glob = "tools/eslint/node_modules/**/*.mojo" }, { glob = "tools/eslint/node_modules/**/*.🔥" }]
language-servers = [ "mojo-lsp" ]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "magic", args = ["run", "mojo" , "format", "-q", "-"]}
grammar = "mojo"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-move"
scope = "source.move"
roots = ["Move.toml"]
file-types = [{ glob = "tools/eslint/node_modules/**/*.move" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = []
grammar = "move"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-msbuild"
scope = "source.msbuild"
file-types = [{ glob = "tools/eslint/node_modules/**/*.proj" }, { glob = "tools/eslint/node_modules/**/*.vbproj" }, { glob = "tools/eslint/node_modules/**/*.csproj" }, { glob = "tools/eslint/node_modules/**/*.fsproj" }, { glob = "tools/eslint/node_modules/**/*.targets" }, { glob = "tools/eslint/node_modules/**/*.props" }]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "msbuild"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-nasm"
scope = "source.nasm"
file-types = [{ glob = "tools/eslint/node_modules/**/*.asm" }, { glob = "tools/eslint/node_modules/**/*.S" }, { glob = "tools/eslint/node_modules/**/*.nasm" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "nasm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-nestedtext"
scope = "text.nested"
file-types = [{ glob = "tools/eslint/node_modules/**/*.nt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nestedtext"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-nginx"
scope = "source.nginx"
file-types = [{ glob = "tools/eslint/node_modules/**/sites-available/*.conf" }, { glob = "tools/eslint/node_modules/**/sites-enabled/*.conf" }, { glob = "tools/eslint/node_modules/**/nginx.conf" }, { glob = "tools/eslint/node_modules/**/conf.d/*.conf" }]
roots = ["nginx.conf"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nginx"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-nickel"
scope = "source.nickel"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ncl" }]
shebangs = []
comment-token = "#"
language-servers = [ "nls" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "nickel"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-nim"
scope = "source.nim"
file-types = [{ glob = "tools/eslint/node_modules/**/*.nim" }, { glob = "tools/eslint/node_modules/**/*.nims" }, { glob = "tools/eslint/node_modules/**/*.nimble" }]
shebangs = []
comment-token = "#"
block-comment-tokens = { start = "#[", end = "]#" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nimlangserver" ]
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '{' = '}' }
grammar = "nim"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-nix"
scope = "source.nix"
file-types = [{ glob = "tools/eslint/node_modules/**/*.nix" }]
shebangs = []
comment-token = "#"
language-servers = [ "nil", "nixd" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "nix"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-nu"
scope = "source.nu"
file-types = [{ glob = "tools/eslint/node_modules/**/*.nu" }, { glob = "tools/eslint/node_modules/**/*.nuon" }]
shebangs = ["nu"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nu-lsp" ]
grammar = "nu"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-nunjucks"
scope = "text.html.nunjucks"
file-types = [{ glob = "tools/eslint/node_modules/**/*.njk" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "nunjucks"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ocaml"
scope = "source.ocaml"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ml" }]
shebangs = ["ocaml", "ocamlrun", "ocamlscript"]
block-comment-tokens = { start = "(*", end = "*)" }
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ocaml-interface"
scope = "source.ocaml.interface"
file-types = [{ glob = "tools/eslint/node_modules/**/*.mli" }]
shebangs = []
block-comment-tokens = { start = "(*", end = "*)" }
comment-token = "(**)"
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml-interface"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-odin"
auto-format = true
scope = "source.odin"
file-types = [{ glob = "tools/eslint/node_modules/**/*.odin" }]
roots = ["ols.json", "main.odin"]
language-servers = [ "ols" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "odinfmt", args = [ "-stdin" ] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "odin"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ohm"
scope = "source.ohm"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ohm" }]
comment-token = "//"
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "ohm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-opencl"
scope = "source.cl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cl" }]
comment-token = "//"
language-servers = [ "clangd" ]
grammar = "opencl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-openscad"
scope = "source.openscad"
file-types = [{ glob = "tools/eslint/node_modules/**/*.scad" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "openscad-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "openscad"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-org"
scope = "source.org"
file-types = [{ glob = "tools/eslint/node_modules/**/*.org" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "org"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-pascal"
scope = "source.pascal"
file-types = [{ glob = "tools/eslint/node_modules/**/*.pas" }, { glob = "tools/eslint/node_modules/**/*.pp" }, { glob = "tools/eslint/node_modules/**/*.inc" }, { glob = "tools/eslint/node_modules/**/*.lpr" }, { glob = "tools/eslint/node_modules/**/*.lfm" }]
comment-token = "//"
block-comment-tokens = { start = "{", end = "}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "pasls" ]
grammar = "pascal"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-passwd"
scope = "source.passwd"
file-types = [{ glob = "tools/eslint/node_modules/**/passwd" }]
grammar = "passwd"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-pem"
scope = "source.pem"
file-types = [{ glob = "tools/eslint/node_modules/**/*.pem" }, { glob = "tools/eslint/node_modules/**/*.cert" }, { glob = "tools/eslint/node_modules/**/*.crt" }]
grammar = "pem"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-perl"
scope = "source.perl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.pl" }, { glob = "tools/eslint/node_modules/**/*.pm" }, { glob = "tools/eslint/node_modules/**/*.t" }, { glob = "tools/eslint/node_modules/**/*.psgi" }, { glob = "tools/eslint/node_modules/**/*.raku" }, { glob = "tools/eslint/node_modules/**/*.rakumod" }, { glob = "tools/eslint/node_modules/**/*.rakutest" }, { glob = "tools/eslint/node_modules/**/*.rakudoc" }, { glob = "tools/eslint/node_modules/**/*.nqp" }, { glob = "tools/eslint/node_modules/**/*.p6" }, { glob = "tools/eslint/node_modules/**/*.pl6" }, { glob = "tools/eslint/node_modules/**/*.pm6" }]
shebangs = ["perl"]
comment-token = "#"
language-servers = [ "perlnavigator" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "perl"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-pest"
scope = "source.pest"
file-types = [{ glob = "tools/eslint/node_modules/**/*.pest" }]
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pest-language-server"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "pest"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-php"
scope = "source.php"
file-types = [{ glob = "tools/eslint/node_modules/**/*.php" }, { glob = "tools/eslint/node_modules/**/*.inc" }, { glob = "tools/eslint/node_modules/**/*.php4" }, { glob = "tools/eslint/node_modules/**/*.php5" }, { glob = "tools/eslint/node_modules/**/*.phtml" }, { glob = "tools/eslint/node_modules/**/*.ctp" }]
shebangs = ["php"]
roots = ["composer.json", "index.php"]
comment-token = "//"
language-servers = [ "intelephense" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "php"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-php-only"
scope = "source.php-only"
file-types = []
indent = { unit = "  ", tab-width = 2 }
roots = ["composer.json", "index.php"]
grammar = "php-only"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-pkgbuild"
scope = "source.bash"
file-types = [{ glob = "tools/eslint/node_modules/**/PKGBUILD" }]
comment-token = "#"
grammar = "pkgbuild"
language-servers = [
  "pkgbuild-language-server",
  { except-features = [
    "diagnostics",
  ], name = "bash-language-server" },
]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-pkl"
scope = "source.pkl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.pkl" }, { glob = "tools/eslint/node_modules/**/*.pcf" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "pkl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-po"
scope = "source.po"
file-types = [{ glob = "tools/eslint/node_modules/**/*.po" }, { glob = "tools/eslint/node_modules/**/*.pot" }]
comment-token = "#"
grammar = "po"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-pod"
scope = "source.pod"
file-types = [{ glob = "tools/eslint/node_modules/**/*.pod" }]
grammar = "pod"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ponylang"
scope = "source.pony"
file-types = [{ glob = "tools/eslint/node_modules/**/*.pony" }]
roots = ["corral.json", "lock.json"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "ponylang"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-powershell"
scope = "source.powershell"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ps1" }, { glob = "tools/eslint/node_modules/**/*.psm1" }, { glob = "tools/eslint/node_modules/**/*.psd1" }, { glob = "tools/eslint/node_modules/**/*.pscc" }, { glob = "tools/eslint/node_modules/**/*.psrc" }]
shebangs = [ "pwsh", "powershell" ]
comment-token = '#'
block-comment-tokens = { start = "<#", end = "#>" }
indent = { unit = "  ", tab-width = 2 }
grammar = "powershell"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-prisma"
scope = "source.prisma"
file-types = [{ glob = "tools/eslint/node_modules/**/*.prisma" }]
roots = ["package.json"]
comment-token = "//"
language-servers = [ "prisma-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "prisma"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-prolog"
scope = "source.prolog"
file-types = [{ glob = "tools/eslint/node_modules/**/*.pl" }, { glob = "tools/eslint/node_modules/**/*.prolog" }]
shebangs = ["swipl"]
comment-token = "%"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "swipl" ]
grammar = "prolog"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-protobuf"
scope = "source.proto"
file-types = [{ glob = "tools/eslint/node_modules/**/*.proto" }]
language-servers = [ "bufls", "pbkit" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "protobuf"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-prql"
scope = "source.prql"
file-types = [{ glob = "tools/eslint/node_modules/**/*.prql" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "prql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-purescript"
scope = "source.purescript"
file-types = [{ glob = "tools/eslint/node_modules/**/*.purs" }]
roots = ["spago.yaml", "spago.dhall", "bower.json"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "purescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "purs-tidy", args = ["format"] }
grammar = "purescript"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-python"
scope = "source.python"
file-types = [{ glob = "tools/eslint/node_modules/**/*.py" }, { glob = "tools/eslint/node_modules/**/*.pyi" }, { glob = "tools/eslint/node_modules/**/*.py3" }, { glob = "tools/eslint/node_modules/**/*.pyw" }, { glob = "tools/eslint/node_modules/**/*.ptl" }, { glob = "tools/eslint/node_modules/**/*.rpy" }, { glob = "tools/eslint/node_modules/**/*.cpy" }, { glob = "tools/eslint/node_modules/**/*.ipy" }, { glob = "tools/eslint/node_modules/**/*.pyt" }, { glob = "tools/eslint/node_modules/**/.python_history" }, { glob = "tools/eslint/node_modules/**/.pythonstartup" }, { glob = "tools/eslint/node_modules/**/.pythonrc" }, { glob = "tools/eslint/node_modules/**/SConstruct" }, { glob = "tools/eslint/node_modules/**/SConscript" }]
shebangs = ["python", "uv"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["ruff", "jedi", "pylsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "python"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-qml"
scope = "source.qml"
file-types = [{ glob = "tools/eslint/node_modules/**/*.qml" }]
language-servers = [ "qmlls" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "qml"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-quint"
scope = "source.quint"
file-types = [{ glob = "tools/eslint/node_modules/**/*.qnt" }]
language-servers = ["quint-language-server"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "quint"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-r"
scope = "source.r"
file-types = [{ glob = "tools/eslint/node_modules/**/*.r" }, { glob = "tools/eslint/node_modules/**/*.R" }, { glob = "tools/eslint/node_modules/**/.Rprofile" }, { glob = "tools/eslint/node_modules/**/Rprofile.site" }, { glob = "tools/eslint/node_modules/**/.RHistory" }]
shebangs = ["r", "R"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "r" ]
grammar = "r"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-racket"
scope = "source.racket"
file-types = [{ glob = "tools/eslint/node_modules/**/*.rkt" }, { glob = "tools/eslint/node_modules/**/*.rktd" }, { glob = "tools/eslint/node_modules/**/*.rktl" }, { glob = "tools/eslint/node_modules/**/*.scrbl" }]
shebangs = ["racket"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "#|", end = "|#" }
language-servers = [ "racket" ]
grammar = "racket"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-regex"
scope = "source.regex"
file-types = [{ glob = "tools/eslint/node_modules/**/*.regex" }, { glob = "tools/eslint/node_modules/**/.Rbuildignore" }]
grammar = "regex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-rego"
scope = "source.rego"
file-types = [{ glob = "tools/eslint/node_modules/**/*.rego" }]
auto-format = true
comment-token = "#"
language-servers = [ "regols" ]
grammar = "rego"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-rescript"
scope = "source.rescript"
file-types = [{ glob = "tools/eslint/node_modules/**/*.res" }]
roots = ["bsconfig.json"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "rescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "rescript"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-rmarkdown"
scope = "source.rmd"
language-id = "rmd"
file-types = [{ glob = "tools/eslint/node_modules/**/*.rmd" }, { glob = "tools/eslint/node_modules/**/*.Rmd" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "rmarkdown"
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "r" ]

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-robot"
scope = "source.robot"
file-types = [{ glob = "tools/eslint/node_modules/**/*.robot" }, { glob = "tools/eslint/node_modules/**/*.resource" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "robotframework_ls" ]
grammar = "robot"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ron"
scope = "source.ron"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ron" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ron"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-rst"
scope = "source.rst"
comment-token = ".."
file-types = [{ glob = "tools/eslint/node_modules/**/*.rst" }]
grammar = "rst"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ruby"
scope = "source.ruby"
file-types = [{ glob = "tools/eslint/node_modules/**/*.rb" }, { glob = "tools/eslint/node_modules/**/*.rake" }, { glob = "tools/eslint/node_modules/**/*.irb" }, { glob = "tools/eslint/node_modules/**/*.gemspec" }, { glob = "tools/eslint/node_modules/**/*.rabl" }, { glob = "tools/eslint/node_modules/**/*.jbuilder" }, { glob = "tools/eslint/node_modules/**/*.jb" }, { glob = "tools/eslint/node_modules/**/*.podspec" }, { glob = "tools/eslint/node_modules/**/*.rjs" }, { glob = "tools/eslint/node_modules/**/*.rbi" }, { glob = "tools/eslint/node_modules/**/*.rbs" }, { glob = "tools/eslint/node_modules/**/rakefile" }, { glob = "tools/eslint/node_modules/**/gemfile" }, { glob = "tools/eslint/node_modules/**/Rakefile" }, { glob = "tools/eslint/node_modules/**/Gemfile" }, { glob = "tools/eslint/node_modules/**/Podfile" }, { glob = "tools/eslint/node_modules/**/Vagrantfile" }, { glob = "tools/eslint/node_modules/**/Brewfile" }, { glob = "tools/eslint/node_modules/**/Guardfile" }, { glob = "tools/eslint/node_modules/**/Capfile" }, { glob = "tools/eslint/node_modules/**/Cheffile" }, { glob = "tools/eslint/node_modules/**/Hobofile" }, { glob = "tools/eslint/node_modules/**/Appraisals" }, { glob = "tools/eslint/node_modules/**/Rantfile" }, { glob = "tools/eslint/node_modules/**/Berksfile" }, { glob = "tools/eslint/node_modules/**/Berksfile.lock" }, { glob = "tools/eslint/node_modules/**/Thorfile" }, { glob = "tools/eslint/node_modules/**/Puppetfile" }, { glob = "tools/eslint/node_modules/**/Fastfile" }, { glob = "tools/eslint/node_modules/**/Appfile" }, { glob = "tools/eslint/node_modules/**/Deliverfile" }, { glob = "tools/eslint/node_modules/**/Matchfile" }, { glob = "tools/eslint/node_modules/**/Scanfile" }, { glob = "tools/eslint/node_modules/**/Snapfile" }, { glob = "tools/eslint/node_modules/**/Gymfile" }]
shebangs = ["ruby"]
comment-token = "#"
language-servers = [ "solargraph" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "ruby"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-rust"
scope = "source.rust"
file-types = [{ glob = "tools/eslint/node_modules/**/*.rs" }]
roots = ["Cargo.toml", "Cargo.lock"]
shebangs = ["rust-script", "cargo"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
  { start = "/*!", end = "*/" },
]
language-servers = [ "rust-analyzer" ]
indent = { unit = "  ", tab-width = 2 }
persistent-diagnostic-sources = ["rustc", "clippy"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}" } }, { name = "binary (terminal)", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}", runInTerminal = true } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "rust"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-sage"
scope = "source.sage"
file-types = [{ glob = "tools/eslint/node_modules/**/*.sage" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "sage"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-scala"
scope = "source.scala"
roots = ["build.sbt", "build.sc", "build.gradle", "build.gradle.kts", "pom.xml", ".scala-build"]
file-types = [{ glob = "tools/eslint/node_modules/**/*.scala" }, { glob = "tools/eslint/node_modules/**/*.sbt" }, { glob = "tools/eslint/node_modules/**/*.sc" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "metals" ]
grammar = "scala"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-scheme"
scope = "source.scheme"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ss" }, { glob = "tools/eslint/node_modules/**/*.scm" }]
shebangs = ["scheme", "guile", "chicken"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "scheme"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-scss"
scope = "source.scss"
file-types = [{ glob = "tools/eslint/node_modules/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "scss"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-slint"
scope = "source.slint"
file-types = [{ glob = "tools/eslint/node_modules/**/*.slint" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "slint-lsp" ]
grammar = "slint"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-smali"
scope = "source.smali"
file-types = [{ glob = "tools/eslint/node_modules/**/*.smali" }]
comment-token = "#"
roots = []
indent = { unit = "  ", tab-width = 2 }
grammar = "smali"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-smithy"
scope = "source.smithy"
file-types = [{ glob = "tools/eslint/node_modules/**/*.smithy" }]
roots = ["smithy-build.json"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cs" ]
grammar = "smithy"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-sml"
scope = "source.sml"
file-types = [{ glob = "tools/eslint/node_modules/**/*.sml" }]
block-comment-tokens = { start = "(*", end = "*)" }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "sml"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-snakemake"
scope = "source.snakemake"
roots = ["Snakefile", "config.yaml", "environment.yaml", "workflow/"]
file-types = [{ glob = "tools/eslint/node_modules/**/*.smk" }, { glob = "tools/eslint/node_modules/**/Snakefile" }]
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pylsp" ]
formatter= { command = "snakefmt", args = ["-"] }
grammar = "snakemake"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-solidity"
scope = "source.sol"
file-types = [{ glob = "tools/eslint/node_modules/**/*.sol" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "solc" ]
grammar = "solidity"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-spade"
scope = "source.spade"
roots = ["swim.toml"]
file-types = [{ glob = "tools/eslint/node_modules/**/*.spade" }]
comment-tokens = ["//", "///"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
language-servers = [ "spade-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '<' = '>' }
grammar = "spade"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-spicedb"
scope = "source.zed"
file-types = [{ glob = "tools/eslint/node_modules/**/*.zed" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "spicedb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-sql"
scope = "source.sql"
file-types = [{ glob = "tools/eslint/node_modules/**/*.sql" }, { glob = "tools/eslint/node_modules/**/*.dsql" }]
comment-token = "--"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "sql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-sshclientconfig"
scope = "source.sshclientconfig"
file-types = [{ glob = "tools/eslint/node_modules/**/.ssh/config" }, { glob = "tools/eslint/node_modules/**//etc/ssh/ssh_config" }, { glob = "tools/eslint/node_modules/**/ssh_config.d/*.conf" }]
comment-token = "#"
grammar = "sshclientconfig"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-starlark"
scope = "source.starlark"
file-types = [{ glob = "tools/eslint/node_modules/**/*.bzl" }, { glob = "tools/eslint/node_modules/**/*.bazel" }, { glob = "tools/eslint/node_modules/**/*.star" }, { glob = "tools/eslint/node_modules/**/BUILD" }, { glob = "tools/eslint/node_modules/**/BUILD.*" }, { glob = "tools/eslint/node_modules/**/Tiltfile" }, { glob = "tools/eslint/node_modules/**/WORKSPACE" }, { glob = "tools/eslint/node_modules/**/WORKSPACE.bzlmod" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "starlark"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-strace"
scope = "source.strace"
file-types = [{ glob = "tools/eslint/node_modules/**/*.strace" }]
grammar = "strace"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-supercollider"
scope = "source.supercollider"
file-types = [{ glob = "tools/eslint/node_modules/**/*.scd" }, { glob = "tools/eslint/node_modules/**/*.sc" }, { glob = "tools/eslint/node_modules/**/*.quark" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "supercollider"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-svelte"
scope = "source.svelte"
file-types = [{ glob = "tools/eslint/node_modules/**/*.svelte" }]
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "svelteserver" ]
grammar = "svelte"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-sway"
scope = "source.sway"
file-types = [{ glob = "tools/eslint/node_modules/**/*.sw" }]
language-servers = [ "forc" ]
roots = ["Forc.toml", "Forc.lock"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
grammar = "sway"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-swift"
scope = "source.swift"
file-types = [{ glob = "tools/eslint/node_modules/**/*.swift" }, { glob = "tools/eslint/node_modules/**/*.swiftinterface" }]
roots = [ "Package.swift" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
formatter = { command = "swift-format" }
language-servers = [ "sourcekit-lsp" ]
grammar = "swift"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-t32"
scope = "source.t32"
file-types = [{ glob = "tools/eslint/node_modules/**/*.cmm" }, { glob = "tools/eslint/node_modules/**/*.t32" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "t32"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-tablegen"
scope = "source.tablegen"
file-types = [{ glob = "tools/eslint/node_modules/**/*.td" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "tablegen"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-tact"
scope = "source.tact"
file-types = [{ glob = "tools/eslint/node_modules/**/*.tact" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "tact"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-task"
scope = "source.task"
file-types = [{ glob = "tools/eslint/node_modules/**/*.task" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "task"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-tcl"
scope = "source.tcl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.tcl" }]
shebangs = [ "tclsh", "tclish", "jimsh", "wish" ]
comment-token = '#'
grammar = "tcl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-teal"
scope = "source.tl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.tl" }]
comment-tokens = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
roots = [ "tlconfig.lua" ]
language-servers = [ "teal-lsp" ]
grammar = "teal"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-templ"
scope = "source.templ"
file-types = [{ glob = "tools/eslint/node_modules/**/*.templ" }]
roots = ["go.work", "go.mod"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "templ" ]
grammar = "templ"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-textproto"
file-types = [{ glob = "tools/eslint/node_modules/**/*.txtpb" }, { glob = "tools/eslint/node_modules/**/*.textpb" }, { glob = "tools/eslint/node_modules/**/*.textproto" }]
comment-token = "#"
scope = "source.textproto"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "txtpbfmt" }
auto-format = true
grammar = "textproto"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-tfvars"
scope = "source.tfvars"
language-id = "terraform-vars"
file-types = [{ glob = "tools/eslint/node_modules/**/*.tfvars" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "tfvars"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-thrift"
scope = "source.thrift"
file-types = [{ glob = "tools/eslint/node_modules/**/*.thrift" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "thrift"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-todotxt"
scope = "text.todotxt"
file-types = [{ glob = "tools/eslint/node_modules/**/*.todo.txt" }, { glob = "tools/eslint/node_modules/**/*.todotxt" }]
formatter = { command = "sort" }
auto-format = true
grammar = "todotxt"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-toml"
scope = "source.toml"
file-types = [{ glob = "tools/eslint/node_modules/**/*.toml" }, { glob = "tools/eslint/node_modules/**/pdm.lock" }, { glob = "tools/eslint/node_modules/**/poetry.lock" }, { glob = "tools/eslint/node_modules/**/Cargo.lock" }, { glob = "tools/eslint/node_modules/**/uv.lock" }]
comment-token = "#"
language-servers = [ "taplo" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "toml"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-tsq"
scope = "source.tsq"
file-types = [{ glob = "tools/eslint/node_modules/**/queries/*.scm" }, { glob = "tools/eslint/node_modules/**/injections.scm" }, { glob = "tools/eslint/node_modules/**/highlights.scm" }, { glob = "tools/eslint/node_modules/**/indents.scm" }, { glob = "tools/eslint/node_modules/**/textobjects.scm" }, { glob = "tools/eslint/node_modules/**/locals.scm" }, { glob = "tools/eslint/node_modules/**/tags.scm" }]
comment-token = ";"
language-servers = ["ts_query_ls"]
grammar = "tsq"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-tsx"
scope = "source.tsx"
language-id = "typescriptreact"
file-types = [{ glob = "tools/eslint/node_modules/**/*.tsx" }]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "tsx"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-twig"
scope = "source.twig"
file-types = [{ glob = "tools/eslint/node_modules/**/*.twig" }]
block-comment-tokens = { start = "{#", end = "#}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "twig"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-typescript"
scope = "source.ts"
language-id = "typescript"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ts" }, { glob = "tools/eslint/node_modules/**/*.mts" }, { glob = "tools/eslint/node_modules/**/*.cts" }]
shebangs = ["deno", "bun", "ts-node"]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "typescript"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-typespec"
scope = "source.typespec"
language-id = "typespec"
file-types = [{ glob = "tools/eslint/node_modules/**/*.tsp" }]
roots = ["tspconfig.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["typespec"]
indent = { unit = "  ", tab-width = 2 }
grammar = "typespec"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-typst"
scope = "source.typst"
file-types = [{ glob = "tools/eslint/node_modules/**/*.typst" }, { glob = "tools/eslint/node_modules/**/*.typ" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["tinymist", "typst-lsp"]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '$' = '$', '"' = '"' }
grammar = "typst"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-ungrammar"
scope = "source.ungrammar"
file-types = [{ glob = "tools/eslint/node_modules/**/*.ungram" }, { glob = "tools/eslint/node_modules/**/*.ungrammar" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "ungrammar"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-unison"
scope = "source.unison"
file-types = [{ glob = "tools/eslint/node_modules/**/*.u" }]
shebangs = []
auto-format = true
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
grammar = "unison"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-unknown"
scope = "text.plain"
file-types = [{ glob = "*.foo" }, { glob = "*.txt" }]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-uxntal"
scope = "source.tal"
file-types = [{ glob = "tools/eslint/node_modules/**/*.tal" }]
auto-format = true
block-comment-tokens = { start = "(", end = ")" }
grammar = "uxntal"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-v"
scope = "source.v"
file-types = [{ glob = "tools/eslint/node_modules/**/*.v" }, { glob = "tools/eslint/node_modules/**/*.vv" }, { glob = "tools/eslint/node_modules/**/*.vsh" }]
shebangs = ["v run"]
roots = ["v.mod"]
language-servers = [ "vlang-language-server" ]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "v"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-vala"
scope = "source.vala"
file-types = [{ glob = "tools/eslint/node_modules/**/*.vala" }, { glob = "tools/eslint/node_modules/**/*.vapi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vala-language-server" ]
grammar = "vala"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-vento"
scope = "text.html.vto"
file-types = [{ glob = "tools/eslint/node_modules/**/*.vto" }]
block-comment-tokens = { start = "{{#", end = "#}}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "vento"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-verilog"
scope = "source.verilog"
file-types = [{ glob = "tools/eslint/node_modules/**/*.v" }, { glob = "tools/eslint/node_modules/**/*.vh" }, { glob = "tools/eslint/node_modules/**/*.sv" }, { glob = "tools/eslint/node_modules/**/*.svh" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "svlangserver" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "verilog"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-vhdl"
scope = "source.vhdl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.vhd" }, { glob = "tools/eslint/node_modules/**/*.vhdl" }]
comment-token = "--"
language-servers = [ "vhdl_ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "vhdl"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-vhs"
scope = "source.vhs"
file-types = [{ glob = "tools/eslint/node_modules/**/*.tape" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "vhs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-vue"
scope = "source.vue"
file-types = [{ glob = "tools/eslint/node_modules/**/*.vue" }]
roots = ["package.json"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vuels" ]
grammar = "vue"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-wast"
scope = "source.wast"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "tools/eslint/node_modules/**/*.wast" }]
grammar = "wast"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-wat"
scope = "source.wat"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "tools/eslint/node_modules/**/*.wat" }]
grammar = "wat"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-webc"
scope = "text.html.webc"
file-types = [{ glob = "tools/eslint/node_modules/**/*.webc" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "webc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-wgsl"
scope = "source.wgsl"
file-types = [{ glob = "tools/eslint/node_modules/**/*.wgsl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "wgsl_analyzer" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "wgsl"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-wit"
scope = "source.wit"
file-types = [{ glob = "tools/eslint/node_modules/**/*.wit" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "wit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-wren"
scope = "source.wren"
file-types = [{ glob = "tools/eslint/node_modules/**/*.wren" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "wren"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-xit"
scope = "source.xit"
file-types = [{ glob = "tools/eslint/node_modules/**/*.xit" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "xit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-xml"
scope = "source.xml"
file-types = [{ glob = "tools/eslint/node_modules/**/*.xml" }, { glob = "tools/eslint/node_modules/**/*.mobileconfig" }, { glob = "tools/eslint/node_modules/**/*.plist" }, { glob = "tools/eslint/node_modules/**/*.xib" }, { glob = "tools/eslint/node_modules/**/*.storyboard" }, { glob = "tools/eslint/node_modules/**/*.svg" }, { glob = "tools/eslint/node_modules/**/*.xsd" }, { glob = "tools/eslint/node_modules/**/*.gml" }, { glob = "tools/eslint/node_modules/**/*.xaml" }, { glob = "tools/eslint/node_modules/**/*.gir" }, { glob = "tools/eslint/node_modules/**/*.rss" }, { glob = "tools/eslint/node_modules/**/*.atom" }, { glob = "tools/eslint/node_modules/**/*.opml" }, { glob = "tools/eslint/node_modules/**/*.policy" }, { glob = "tools/eslint/node_modules/**/*.ascx" }, { glob = "tools/eslint/node_modules/**/*.axml" }, { glob = "tools/eslint/node_modules/**/*.axaml" }, { glob = "tools/eslint/node_modules/**/*.bpmn" }, { glob = "tools/eslint/node_modules/**/*.cpt" }, { glob = "tools/eslint/node_modules/**/*.csl" }, { glob = "tools/eslint/node_modules/**/*.csproj.user" }, { glob = "tools/eslint/node_modules/**/*.dita" }, { glob = "tools/eslint/node_modules/**/*.ditamap" }, { glob = "tools/eslint/node_modules/**/*.dtml" }, { glob = "tools/eslint/node_modules/**/*.fxml" }, { glob = "tools/eslint/node_modules/**/*.iml" }, { glob = "tools/eslint/node_modules/**/*.isml" }, { glob = "tools/eslint/node_modules/**/*.jmx" }, { glob = "tools/eslint/node_modules/**/*.launch" }, { glob = "tools/eslint/node_modules/**/*.menu" }, { glob = "tools/eslint/node_modules/**/*.mxml" }, { glob = "tools/eslint/node_modules/**/*.nuspec" }, { glob = "tools/eslint/node_modules/**/*.osc" }, { glob = "tools/eslint/node_modules/**/*.osm" }, { glob = "tools/eslint/node_modules/**/*.pt" }, { glob = "tools/eslint/node_modules/**/*.publishsettings" }, { glob = "tools/eslint/node_modules/**/*.pubxml" }, { glob = "tools/eslint/node_modules/**/*.pubxml.user" }, { glob = "tools/eslint/node_modules/**/*.rbxlx" }, { glob = "tools/eslint/node_modules/**/*.rbxmx" }, { glob = "tools/eslint/node_modules/**/*.rng" }, { glob = "tools/eslint/node_modules/**/*.shproj" }, { glob = "tools/eslint/node_modules/**/*.tld" }, { glob = "tools/eslint/node_modules/**/*.tmx" }, { glob = "tools/eslint/node_modules/**/*.vbproj.user" }, { glob = "tools/eslint/node_modules/**/*.vcxproj" }, { glob = "tools/eslint/node_modules/**/*.vcxproj.filters" }, { glob = "tools/eslint/node_modules/**/*.wsdl" }, { glob = "tools/eslint/node_modules/**/*.wxi" }, { glob = "tools/eslint/node_modules/**/*.wxs" }, { glob = "tools/eslint/node_modules/**/*.xbl" }, { glob = "tools/eslint/node_modules/**/*.xlf" }, { glob = "tools/eslint/node_modules/**/*.xliff" }, { glob = "tools/eslint/node_modules/**/*.xpdl" }, { glob = "tools/eslint/node_modules/**/*.xul" }, { glob = "tools/eslint/node_modules/**/*.xoml" }, { glob = "tools/eslint/node_modules/**/*.musicxml" }, { glob = "tools/eslint/node_modules/**/*.glif" }, { glob = "tools/eslint/node_modules/**/*.ui" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "xml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-xtc"
scope = "source.xtc"
file-types = [{ glob = "tools/eslint/node_modules/**/*.xtc" }, { glob = "tools/eslint/node_modules/**/*.xpc" }, { glob = "tools/eslint/node_modules/**/*.xoa" }]
comment-token = ";"
grammar = "xtc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-yaml"
scope = "source.yaml"
file-types = [{ glob = "tools/eslint/node_modules/**/*.yml" }, { glob = "tools/eslint/node_modules/**/*.yaml" }, { glob = "tools/eslint/node_modules/**/.prettierrc" }, { glob = "tools/eslint/node_modules/**/.clangd" }, { glob = "tools/eslint/node_modules/**/.clang-format" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "yaml-language-server", "ansible-language-server" ]
grammar = "yaml"

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-yuck"
scope = "source.yuck"
file-types = [{ glob = "tools/eslint/node_modules/**/*.yuck" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "yuck"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-eslint-node_modules-**-zig"
scope = "source.zig"
file-types = [{ glob = "tools/eslint/node_modules/**/*.zig" }, { glob = "tools/eslint/node_modules/**/*.zon" }]
roots = ["build.zig"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
language-servers = [ "zls" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "zig" , args = ["fmt", "--stdin"] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "zig"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ada"
scope = "source.ada"
file-types = [{ glob = "tools/gyp/**/*.adb" }, { glob = "tools/gyp/**/*.ads" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-language-server"]
grammar = "ada"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-adl"
scope = "source.adl"
file-types = [{ glob = "tools/gyp/**/*.adl" }]
roots = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '<' = '>' }
grammar = "adl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-agda"
scope = "source.agda"
file-types = [{ glob = "tools/gyp/**/*.agda" }]
roots = []
comment-token = "--"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', "'" = "'", '{' = '}', '(' = ')', '[' = ']' }
grammar = "agda"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-amber"
scope = "source.ab"
file-types = [{ glob = "tools/gyp/**/*.ab" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "amber"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-astro"
scope = "source.astro"
file-types = [{ glob = "tools/gyp/**/*.astro" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "astro"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-awk"
scope = "source.awk"
file-types = [{ glob = "tools/gyp/**/*.awk" }, { glob = "tools/gyp/**/*.gawk" }, { glob = "tools/gyp/**/*.nawk" }, { glob = "tools/gyp/**/*.mawk" }]
comment-token = "#"
language-servers = [ "awk-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "awk"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-bash"
scope = "source.bash"
file-types = [{ glob = "tools/gyp/**/*.sh" }, { glob = "tools/gyp/**/*.bash" }, { glob = "tools/gyp/**/*.ash" }, { glob = "tools/gyp/**/*.dash" }, { glob = "tools/gyp/**/*.ksh" }, { glob = "tools/gyp/**/*.mksh" }, { glob = "tools/gyp/**/*.zsh" }, { glob = "tools/gyp/**/*.zshenv" }, { glob = "tools/gyp/**/*.zlogin" }, { glob = "tools/gyp/**/*.zlogout" }, { glob = "tools/gyp/**/*.zprofile" }, { glob = "tools/gyp/**/*.zshrc" }, { glob = "tools/gyp/**/*.eclass" }, { glob = "tools/gyp/**/*.ebuild" }, { glob = "tools/gyp/**/*.bazelrc" }, { glob = "tools/gyp/**/*.Renviron" }, { glob = "tools/gyp/**/*.zsh-theme" }, { glob = "tools/gyp/**/*.cshrc" }, { glob = "tools/gyp/**/*.tcshrc" }, { glob = "tools/gyp/**/*.bashrc_Apple_Terminal" }, { glob = "tools/gyp/**/*.zshrc_Apple_Terminal" }, { glob = "tools/gyp/**/i3/config" }, { glob = "tools/gyp/**/sway/config" }, { glob = "tools/gyp/**/tmux.conf" }, { glob = "tools/gyp/**/.bash_history" }, { glob = "tools/gyp/**/.bash_login" }, { glob = "tools/gyp/**/.bash_logout" }, { glob = "tools/gyp/**/.bash_profile" }, { glob = "tools/gyp/**/.bashrc" }, { glob = "tools/gyp/**/.profile" }, { glob = "tools/gyp/**/.zshenv" }, { glob = "tools/gyp/**/.zlogin" }, { glob = "tools/gyp/**/.zlogout" }, { glob = "tools/gyp/**/.zprofile" }, { glob = "tools/gyp/**/.zshrc" }, { glob = "tools/gyp/**/.zimrc" }, { glob = "tools/gyp/**/APKBUILD" }, { glob = "tools/gyp/**/.bash_aliases" }, { glob = "tools/gyp/**/.Renviron" }, { glob = "tools/gyp/**/.xprofile" }, { glob = "tools/gyp/**/.xsession" }, { glob = "tools/gyp/**/.xsessionrc" }, { glob = "tools/gyp/**/.yashrc" }, { glob = "tools/gyp/**/.yash_profile" }, { glob = "tools/gyp/**/.hushlogin" }]
shebangs = ["sh", "bash", "dash", "zsh"]
comment-token = "#"
language-servers = [ "bash-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "bash"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-bass"
scope = "source.bass"
file-types = [{ glob = "tools/gyp/**/*.bass" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bass" ]
grammar = "bass"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-beancount"
scope = "source.beancount"
file-types = [{ glob = "tools/gyp/**/*.beancount" }, { glob = "tools/gyp/**/*.bean" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "beancount"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-bibtex"
scope = "source.bib"
file-types = [{ glob = "tools/gyp/**/*.bib" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter= { command = 'bibtex-tidy', args = [
  "-",
  "--curly",
  "--drop-all-caps",
  "--remove-empty-fields",
  "--sort-fields",
  "--sort=year,author,id",
  "--strip-enclosing-braces",
  "--trailing-commas",
] }
grammar = "bibtex"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-bicep"
scope = "source.bicep"
file-types = [{ glob = "tools/gyp/**/*.bicep" }, { glob = "tools/gyp/**/*.bicepparam" }]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bicep-langserver" ]
grammar = "bicep"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-bitbake"
language-servers = [ "bitbake-language-server" ]
scope = "source.bitbake"
file-types = [{ glob = "tools/gyp/**/*.bb" }, { glob = "tools/gyp/**/*.bbappend" }, { glob = "tools/gyp/**/*.bbclass" }, { glob = "tools/gyp/**/conf/*.conf" }, { glob = "tools/gyp/**/conf/*/*.{inc,conf}" }, { glob = "tools/gyp/**/recipe-*/*/*.inc" }]
comment-token = "#"
grammar = "bitbake"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-blade"
scope = "source.blade.php"
file-types = [{ glob = "tools/gyp/**/*.blade.php" }, { glob = "tools/gyp/**/*.blade" }]
roots = ["composer.json", "index.php"]
grammar = "blade"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-blueprint"
scope = "source.blueprint"
file-types = [{ glob = "tools/gyp/**/*.blp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "blueprint-compiler" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "blueprint"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-c"
scope = "source.c"
file-types = [{ glob = "tools/gyp/**/*.c" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "c"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-c-sharp"
scope = "source.csharp"
file-types = [{ glob = "tools/gyp/**/*.cs" }, { glob = "tools/gyp/**/*.csx" }, { glob = "tools/gyp/**/*.cake" }]
roots = ["sln", "csproj"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "omnisharp" ]
debugger= { name = "netcoredbg", transport = "tcp", command = "netcoredbg", args = [ "--interpreter=vscode" ], port-arg = "--server={}", templates = [{ name = "launch", request = "launch", completion = [ { name = "path to dll", completion = "filename" } ], args = { type = "coreclr", console = "internalConsole", internalConsoleOptions = "openOnSessionStart", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { processId = "{0}" } }] }
grammar = "c-sharp"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-cabal"
scope = "source.cabal"
file-types = [{ glob = "tools/gyp/**/*.cabal" }]
roots = ["cabal.project", "Setup.hs"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "--"
language-servers = [ "haskell-language-server" ]
grammar = "cabal"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-cairo"
scope = "source.cairo"
file-types = [{ glob = "tools/gyp/**/*.cairo" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
# auto-format = true
language-servers = [ "cairo-language-server" ]
grammar = "cairo"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-capnp"
scope = "source.capnp"
file-types = [{ glob = "tools/gyp/**/*.capnp" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "capnp"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-cel"
scope = "source.cel"
file-types = [{ glob = "tools/gyp/**/*.cel" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cel"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-circom"
scope            = "source.circom"
file-types = [{ glob = "tools/gyp/**/*.circom" }]
roots            = ["package.json"]
comment-tokens   = "//"
indent = { unit = "  ", tab-width = 2 }
auto-format      = false
language-servers = ["circom-lsp"]
grammar = "circom"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-clojure"
scope = "source.clojure"
file-types = [{ glob = "tools/gyp/**/*.clj" }, { glob = "tools/gyp/**/*.cljs" }, { glob = "tools/gyp/**/*.cljc" }, { glob = "tools/gyp/**/*.clje" }, { glob = "tools/gyp/**/*.cljr" }, { glob = "tools/gyp/**/*.cljx" }, { glob = "tools/gyp/**/*.edn" }, { glob = "tools/gyp/**/*.boot" }]
roots = ["project.clj", "build.boot", "deps.edn", "shadow-cljs.edn"]
comment-token = ";"
language-servers = [ "clojure-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "clojure"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-cmake"
scope = "source.cmake"
file-types = [{ glob = "tools/gyp/**/*.cmake" }, { glob = "tools/gyp/**/CMakeLists.txt" }]
comment-token = "#"
block-comment-tokens = { start = "#[[", end = "]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cmake-language-server" ]
grammar = "cmake"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-comment"
scope = "scope.comment"
file-types = []
grammar = "comment"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-common-lisp"
scope = "source.lisp"
file-types = [{ glob = "tools/gyp/**/*.lisp" }, { glob = "tools/gyp/**/*.asd" }, { glob = "tools/gyp/**/*.cl" }, { glob = "tools/gyp/**/*.l" }, { glob = "tools/gyp/**/*.lsp" }, { glob = "tools/gyp/**/*.ny" }, { glob = "tools/gyp/**/*.podsl" }, { glob = "tools/gyp/**/*.sexp" }]
shebangs = ["lisp", "sbcl", "ccl", "clisp", "ecl"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cl-lsp" ]
grammar = "common-lisp"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-cpon"
scope = "scope.cpon"
file-types = [{ glob = "tools/gyp/**/*.cpon" }, { glob = "tools/gyp/**/*.cp" }]
auto-format = true
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cpon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-cpp"
scope = "source.cpp"
file-types = [{ glob = "tools/gyp/**/*.cc" }, { glob = "tools/gyp/**/*.hh" }, { glob = "tools/gyp/**/*.c++" }, { glob = "tools/gyp/**/*.cpp" }, { glob = "tools/gyp/**/*.hpp" }, { glob = "tools/gyp/**/*.h" }, { glob = "tools/gyp/**/*.ipp" }, { glob = "tools/gyp/**/*.tpp" }, { glob = "tools/gyp/**/*.cxx" }, { glob = "tools/gyp/**/*.hxx" }, { glob = "tools/gyp/**/*.ixx" }, { glob = "tools/gyp/**/*.txx" }, { glob = "tools/gyp/**/*.ino" }, { glob = "tools/gyp/**/*.C" }, { glob = "tools/gyp/**/*.H" }, { glob = "tools/gyp/**/*.cu" }, { glob = "tools/gyp/**/*.cuh" }, { glob = "tools/gyp/**/*.cppm" }, { glob = "tools/gyp/**/*.h++" }, { glob = "tools/gyp/**/*.ii" }, { glob = "tools/gyp/**/*.inl" }, { glob = "tools/gyp/**/.hpp.in" }, { glob = "tools/gyp/**/.h.in" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "cpp"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-crystal"
scope = "source.cr"
file-types = [{ glob = "tools/gyp/**/*.cr" }]
roots = ["shard.yml", "shard.lock"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "crystal"
language-servers = [ "crystalline" ]

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-css"
scope = "source.css"
file-types = [{ glob = "tools/gyp/**/*.css" }, { glob = "tools/gyp/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "css"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-cue"
scope = "source.cue"
file-types = [{ glob = "tools/gyp/**/*.cue" }]
roots = ["cue.mod"]
auto-format = true
comment-token = "//"
language-servers = [ "cuelsp" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "cue", args = ["fmt", "-"] }
grammar = "cue"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-cylc"
scope = "source.cylc"
file-types = [{ glob = "tools/gyp/**/*.cylc" }, { glob = "tools/gyp/**/suite.rc" }]
comment-tokens = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "cylc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-d"
scope = "source.d"
file-types = [{ glob = "tools/gyp/**/*.d" }, { glob = "tools/gyp/**/*.dd" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "serve-d" ]
formatter = { command = "dfmt" }
grammar = "d"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-dart"
scope = "source.dart"
file-types = [{ glob = "tools/gyp/**/*.dart" }]
roots = ["pubspec.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "dart" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "dart"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-dbml"
scope = "source.dbml"
file-types = [{ glob = "tools/gyp/**/*.dbml" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dbml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-devicetree"
scope = "source.devicetree"
file-types = [{ glob = "tools/gyp/**/*.dts" }, { glob = "tools/gyp/**/*.dtsi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "devicetree"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-dhall"
scope = "source.dhall"
file-types = [{ glob = "tools/gyp/**/*.dhall" }]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dhall-lsp-server" ]
formatter = { command = "dhall" , args = ["format"] }
grammar = "dhall"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-diff"
scope = "source.diff"
file-types = [{ glob = "tools/gyp/**/*.diff" }, { glob = "tools/gyp/**/*.patch" }, { glob = "tools/gyp/**/*.rej" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "diff"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-docker-compose"
scope = "source.yaml.docker-compose"
roots = ["docker-compose.yaml", "docker-compose.yml"]
language-servers = [ "docker-compose-langserver", "yaml-language-server" ]
file-types = [{ glob = "tools/gyp/**/docker-compose.yaml" }, { glob = "tools/gyp/**/docker-compose.yml" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "docker-compose"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-dockerfile"
scope = "source.dockerfile"
roots = ["Dockerfile", "Containerfile"]
file-types = [{ glob = "tools/gyp/**/*.Dockerfile" }, { glob = "tools/gyp/**/Dockerfile" }, { glob = "tools/gyp/**/Dockerfile.*" }, { glob = "tools/gyp/**/*.dockerfile" }, { glob = "tools/gyp/**/dockerfile" }, { glob = "tools/gyp/**/dockerfile.*" }, { glob = "tools/gyp/**/*.Containerfile" }, { glob = "tools/gyp/**/Containerfile" }, { glob = "tools/gyp/**/Containerfile.*" }, { glob = "tools/gyp/**/*.containerfile" }, { glob = "tools/gyp/**/containerfile" }, { glob = "tools/gyp/**/containerfile.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "docker-langserver" ]
grammar = "dockerfile"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-dot"
scope = "source.dot"
file-types = [{ glob = "tools/gyp/**/*.dot" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dot-language-server" ]
grammar = "dot"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-dtd"
scope = "source.dtd"
file-types = [{ glob = "tools/gyp/**/*.dtd" }, { glob = "tools/gyp/**/*.ent" }]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '<' = '>' }
grammar = "dtd"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-dune"
scope = "source.dune"
roots = ["dune-project"]
file-types = [{ glob = "tools/gyp/**/dune-project" }, { glob = "tools/gyp/**/dune" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dune"
auto-format = true
formatter = { command = "dune", args = ["format-dune-file"] }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-earthfile"
scope = "source.earthfile"
roots = ["Earthfile"]
file-types = [{ glob = "tools/gyp/**/Earthfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["earthlyls"]
grammar = "earthfile"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-edoc"
scope = "source.edoc"
file-types = [{ glob = "tools/gyp/**/*.edoc" }, { glob = "tools/gyp/**/*.edoc.in" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "edoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-eex"
scope = "source.eex"
file-types = [{ glob = "tools/gyp/**/*.eex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "eex"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ejs"
scope = "text.html.ejs"
file-types = [{ glob = "tools/gyp/**/*.ejs" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ejs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-elisp"
scope = "source.elisp"
file-types = [{ glob = "tools/gyp/**/*.el" }]
comment-tokens = [";"]
auto-pairs= { '(' = ')', '"' = '"' }
grammar = "elisp"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-elixir"
scope = "source.elixir"
file-types = [{ glob = "tools/gyp/**/*.ex" }, { glob = "tools/gyp/**/*.exs" }, { glob = "tools/gyp/**/mix.lock" }]
shebangs = ["elixir"]
roots = ["mix.exs", "mix.lock"]
comment-token = "#"
language-servers = [ "elixir-ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elixir"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-elm"
scope = "source.elm"
file-types = [{ glob = "tools/gyp/**/*.elm" }]
roots = ["elm.json"]
auto-format = true
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "elm-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elm"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-elvish"
scope = "source.elvish"
shebangs = ["elvish"]
file-types = [{ glob = "tools/gyp/**/*.elv" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elvish" ]
grammar = "elvish"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-env"
scope = "source.env"
file-types = [{ glob = "tools/gyp/**/.env" }, { glob = "tools/gyp/**/.env.*" }, { glob = "tools/gyp/**/.envrc" }, { glob = "tools/gyp/**/.envrc.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "env"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-erb"
scope = "text.html.erb"
file-types = [{ glob = "tools/gyp/**/*.erb" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "erb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-erlang"
scope = "source.erlang"
file-types = [{ glob = "tools/gyp/**/*.erl" }, { glob = "tools/gyp/**/*.hrl" }, { glob = "tools/gyp/**/*.app" }, { glob = "tools/gyp/**/rebar.config" }, { glob = "tools/gyp/**/rebar.lock" }, { glob = "tools/gyp/**/*.app.src" }]
roots = ["rebar.config"]
shebangs = ["escript"]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "erlang-ls", "elp" ]
grammar = "erlang"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-esdl"
scope = "source.esdl"
file-types = [{ glob = "tools/gyp/**/*.esdl" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
roots = ["edgedb.toml"]
grammar = "esdl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-fidl"
scope = "source.fidl"
file-types = [{ glob = "tools/gyp/**/*.fidl" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "fidl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-fish"
scope = "source.fish"
file-types = [{ glob = "tools/gyp/**/*.fish" }]
shebangs = ["fish"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "fish_indent" }
grammar = "fish"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-forth"
scope = "source.forth"
file-types = [{ glob = "tools/gyp/**/*.fs" }, { glob = "tools/gyp/**/*.forth" }, { glob = "tools/gyp/**/*.fth" }, { glob = "tools/gyp/**/*.4th" }]
comment-token = "\\"
language-servers = [ "forth-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "forth"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-fortran"
scope = "source.fortran"
file-types = [{ glob = "tools/gyp/**/*.f" }, { glob = "tools/gyp/**/*.for" }, { glob = "tools/gyp/**/*.f90" }, { glob = "tools/gyp/**/*.f95" }, { glob = "tools/gyp/**/*.f03" }]
roots = ["fpm.toml"]
comment-token = "!"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "fortls" ]
grammar = "fortran"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-fsharp"
scope = "source.fs"
roots = ["sln", "fsproj"]
file-types = [{ glob = "tools/gyp/**/*.fs" }, { glob = "tools/gyp/**/*.fsx" }, { glob = "tools/gyp/**/*.fsi" }, { glob = "tools/gyp/**/*.fsscript" }]
comment-token = "//"
block-comment-tokens = { start = "(*", end = "*)" }
indent = { unit = "  ", tab-width = 2 }
auto-format = true
language-servers = ["fsharp-ls"]
grammar = "fsharp"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gas"
scope = "source.gas"
file-types = [{ glob = "tools/gyp/**/*.s" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gas"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gdscript"
scope = "source.gdscript"
file-types = [{ glob = "tools/gyp/**/*.gd" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
formatter = { command = "gdformat", args = ["-"] }
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
grammar = "gdscript"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gemini"
scope = "source.gmi"
file-types = [{ glob = "tools/gyp/**/*.gmi" }]
grammar = "gemini"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gherkin"
scope = "source.feature"
file-types = [{ glob = "tools/gyp/**/*.feature" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gherkin"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-git-attributes"
scope = "source.gitattributes"
file-types = [{ glob = "tools/gyp/**/.gitattributes" }]
comment-token = "#"
grammar = "git-attributes"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-git-commit"
scope = "git.commitmsg"
file-types = [{ glob = "tools/gyp/**/COMMIT_EDITMSG" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "git-commit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-git-config"
scope = "source.gitconfig"
file-types = [{ glob = "tools/gyp/**/.gitmodules" }, { glob = "tools/gyp/**/.gitconfig" }, { glob = "tools/gyp/**/.git/config" }, { glob = "tools/gyp/**/.config/git/config" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-config"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-git-ignore"
scope = "source.gitignore"
file-types = [{ glob = "tools/gyp/**/.gitignore_global" }, { glob = "tools/gyp/**/git/ignore" }, { glob = "tools/gyp/**/.ignore" }, { glob = "tools/gyp/**/CODEOWNERS" }, { glob = "tools/gyp/**/.config/helix/ignore" }, { glob = "tools/gyp/**/.helix/ignore" }, { glob = "tools/gyp/**/.*ignore" }]
comment-token = "#"
grammar = "git-ignore"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-git-rebase"
scope = "source.gitrebase"
file-types = [{ glob = "tools/gyp/**/git-rebase-todo" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-rebase"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gjs"
scope = "source.gjs"
file-types = [{ glob = "tools/gyp/**/*.gjs" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gjs"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gleam"
scope = "source.gleam"
file-types = [{ glob = "tools/gyp/**/*.gleam" }]
roots = ["gleam.toml"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "gleam" ]
auto-format = true
grammar = "gleam"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-glimmer"
scope = "source.glimmer"
file-types = [{ glob = "tools/gyp/**/{app,addon}/{components,templates}/*.hbs" }]
block-comment-tokens = { start = "{{!", end = "}}" }
roots = ["package.json", "ember-cli-build.js"]
grammar = "glimmer"
language-servers = ["ember-language-server"]
formatter = { command = "prettier", args = ['--parser', 'glimmer'] }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>', "'" = "'" }
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-glsl"
scope = "source.glsl"
file-types = [{ glob = "tools/gyp/**/*.glsl" }, { glob = "tools/gyp/**/*.vert" }, { glob = "tools/gyp/**/*.tesc" }, { glob = "tools/gyp/**/*.tese" }, { glob = "tools/gyp/**/*.geom" }, { glob = "tools/gyp/**/*.frag" }, { glob = "tools/gyp/**/*.comp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "glsl_analyzer" ]
grammar = "glsl"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gn"
scope = "source.gn"
file-types = [{ glob = "tools/gyp/**/*.gn" }, { glob = "tools/gyp/**/*.gni" }]
roots = []
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "gn", args = ["format", "--stdin"] }
grammar = "gn"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-go"
scope = "source.go"
file-types = [{ glob = "tools/gyp/**/*.go" }]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls", "golangci-lint-lsp" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "go", transport = "tcp", command = "dlv", args = ["dap"], port-arg = "-l 127.0.0.1:{}", templates = [{ name = "source", request = "launch", completion = [ { name = "entrypoint", completion = "filename", default = "." } ], args = { mode = "debug", program = "{0}" } }, { name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { mode = "exec", program = "{0}" } }, { name = "test", request = "launch", completion = [ { name = "tests", completion = "directory", default = "." } ], args = { mode = "test", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { mode = "local", processId = "{0}" } }, { name = "core", request = "launch", completion = [ { name = "binary", completion = "filename" }, { name = "core", completion = "filename" } ], args = { mode = "core", program = "{0}", coreFilePath = "{1}" } }] }
grammar = "go"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-godot-resource"
scope = "source.tscn"
file-types = [{ glob = "tools/gyp/**/*.tscn" }, { glob = "tools/gyp/**/*.tres" }, { glob = "tools/gyp/**/*.godot" }, { glob = "tools/gyp/**/*.gdextension" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "godot-resource"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gomod"
scope = "source.gomod"
file-types = [{ glob = "tools/gyp/**/go.mod" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gomod"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gotmpl"
scope = "source.gotmpl"
file-types = [{ glob = "tools/gyp/**/*.gotmpl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gotmpl"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gowork"
scope = "source.gowork"
file-types = [{ glob = "tools/gyp/**/go.work" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gowork"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gpr"
scope = "source.gpr"
file-types = [{ glob = "tools/gyp/**/*.gpr" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-gpr-language-server"]
grammar = "gpr"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-graphql"
scope = "source.graphql"
file-types = [{ glob = "tools/gyp/**/*.gql" }, { glob = "tools/gyp/**/*.graphql" }, { glob = "tools/gyp/**/*.graphqls" }]
language-servers = [ "graphql-language-service" ]
comment-token = "#"
block-comment-tokens = { start = "\"\"\"", end = "\"\"\"" }
indent = { unit = "  ", tab-width = 2 }
grammar = "graphql"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-groovy"
language-id = "groovy"
scope = "source.groovy"
file-types = [{ glob = "tools/gyp/**/*.gradle" }, { glob = "tools/gyp/**/*.groovy" }, { glob = "tools/gyp/**/*.jenkinsfile" }, { glob = "tools/gyp/**/Jenkinsfile" }, { glob = "tools/gyp/**/Jenkinsfile.*" }]
shebangs = ["groovy"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "groovy"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-gts"
scope = "source.gts"
file-types = [{ glob = "tools/gyp/**/*.gts" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gts"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-hare"
scope = "source.hare"
file-types = [{ glob = "tools/gyp/**/*.ha" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "hare"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-haskell"
scope = "source.haskell"
file-types = [{ glob = "tools/gyp/**/*.hs" }, { glob = "tools/gyp/**/*.hs-boot" }, { glob = "tools/gyp/**/*.hsc" }]
roots = ["Setup.hs", "stack.yaml", "cabal.project"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "haskell-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-haskell-persistent"
scope = "source.persistentmodels"
file-types = [{ glob = "tools/gyp/**/*.persistentmodels" }]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell-persistent"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-hcl"
scope = "source.hcl"
language-id = "terraform"
file-types = [{ glob = "tools/gyp/**/*.hcl" }, { glob = "tools/gyp/**/*.tf" }, { glob = "tools/gyp/**/*.nomad" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "hcl"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-heex"
scope = "source.heex"
file-types = [{ glob = "tools/gyp/**/*.heex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elixir-ls" ]
grammar = "heex"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-helm"
grammar = "helm"
scope = "source.helm"
roots = ["Chart.yaml"]
comment-token = "#"
language-servers = ["helm_ls"]
file-types = [{ glob = "tools/gyp/**/templates/*.yaml" }, { glob = "tools/gyp/**/templates/*.yml" }, { glob = "tools/gyp/**/templates/_*.tpl" }, { glob = "tools/gyp/**/templates/NOTES.txt" }]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-hocon"
scope = "source.conf"
file-types = [{ glob = "tools/gyp/**/**/src/*/resources/**/*.conf" }, { glob = "tools/gyp/**/*scalafmt*.conf" }, { glob = "tools/gyp/**/*scalafix*.conf" }]
comment-token = "#"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "hocon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-hoon"
scope = "source.hoon"
file-types = [{ glob = "tools/gyp/**/*.hoon" }]
comment-token = "::"
indent = { unit = "  ", tab-width = 2 }
grammar = "hoon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-hosts"
scope = "source.hosts"
file-types = [{ glob = "tools/gyp/**/hosts" }]
comment-token = "#"
grammar = "hosts"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-html"
scope = "text.html.basic"
file-types = [{ glob = "tools/gyp/**/*.html" }, { glob = "tools/gyp/**/*.htm" }, { glob = "tools/gyp/**/*.shtml" }, { glob = "tools/gyp/**/*.xhtml" }, { glob = "tools/gyp/**/*.xht" }, { glob = "tools/gyp/**/*.jsp" }, { glob = "tools/gyp/**/*.asp" }, { glob = "tools/gyp/**/*.aspx" }, { glob = "tools/gyp/**/*.jshtm" }, { glob = "tools/gyp/**/*.volt" }, { glob = "tools/gyp/**/*.rhtml" }, { glob = "tools/gyp/**/*.cshtml" }]
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "vscode-html-language-server", "superhtml" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "html"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-hurl"
scope = "source.hurl"
file-types = [{ glob = "tools/gyp/**/*.hurl" }]
comment-token = "#"
formatter = { command = "hurlfmt" }
indent = { unit = "  ", tab-width = 2 }
grammar = "hurl"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-hyprlang"
scope = "source.hyprlang"
roots = ["hyprland.conf"]
file-types = [{ glob = "tools/gyp/**/hypr/*.conf" }]
comment-token = "#"
grammar = "hyprlang"
language-servers = ["hyprls"]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-idris"
scope = "source.idr"
file-types = [{ glob = "tools/gyp/**/*.idr" }]
shebangs = []
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "idris2-lsp" ]
grammar = "idris"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-iex"
scope = "source.iex"
file-types = [{ glob = "tools/gyp/**/*.iex" }]
comment-token = "#"
grammar = "iex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ini"
scope = "source.ini"
file-types = [{ glob = "tools/gyp/**/*.ini" }, { glob = "tools/gyp/**/*.service" }, { glob = "tools/gyp/**/*.automount" }, { glob = "tools/gyp/**/*.device" }, { glob = "tools/gyp/**/*.mount" }, { glob = "tools/gyp/**/*.path" }, { glob = "tools/gyp/**/*.service" }, { glob = "tools/gyp/**/*.slice" }, { glob = "tools/gyp/**/*.socket" }, { glob = "tools/gyp/**/*.swap" }, { glob = "tools/gyp/**/*.target" }, { glob = "tools/gyp/**/*.timer" }, { glob = "tools/gyp/**/*.container" }, { glob = "tools/gyp/**/*.volume" }, { glob = "tools/gyp/**/*.kube" }, { glob = "tools/gyp/**/*.network" }, { glob = "tools/gyp/**/.editorconfig" }, { glob = "tools/gyp/**/.npmrc" }, { glob = "tools/gyp/**/npmrc" }, { glob = "tools/gyp/**/rclone.conf" }, { glob = "tools/gyp/**/*.properties" }, { glob = "tools/gyp/**/*.cfg" }, { glob = "tools/gyp/**/*.directory" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "ini"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-inko"
auto-format = true
scope = "source.inko"
file-types = [{ glob = "tools/gyp/**/*.inko" }]
roots = ["inko.pkg"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "inko", args = ["fmt", "-"] }
grammar = "inko"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-janet"
scope = "source.janet"
file-types = [{ glob = "tools/gyp/**/*.cgen" }, { glob = "tools/gyp/**/*.janet" }, { glob = "tools/gyp/**/*.jdn" }]
shebangs = ["janet"]
roots = ["project.janet"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "janet-format" }
grammar = "janet"
auto-pairs= { '"' = '"', '(' = ')', '[' = ']', '{' = '}', "`" = "`" }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-java"
scope = "source.java"
file-types = [{ glob = "tools/gyp/**/*.java" }, { glob = "tools/gyp/**/*.jav" }, { glob = "tools/gyp/**/*.pde" }]
roots = ["pom.xml", "build.gradle", "build.gradle.kts"]
language-servers = [ "jdtls" ]
indent = { unit = "  ", tab-width = 2 }
comment-tokens = ["//"]
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "java"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-javascript"
scope = "source.js"
language-id = "javascript"
file-types = [{ glob = "tools/gyp/**/*.js" }, { glob = "tools/gyp/**/*.mjs" }, { glob = "tools/gyp/**/*.cjs" }, { glob = "tools/gyp/**/*.rules" }, { glob = "tools/gyp/**/*.es6" }, { glob = "tools/gyp/**/*.pac" }, { glob = "tools/gyp/**/.node_repl_history" }, { glob = "tools/gyp/**/jakefile" }]
shebangs = ["node"]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "node-debug2", transport = "stdio", quirks = { absolute-paths = true }, templates = [{ name = "source", request = "launch", completion = [ { name = "main", completion = "filename", default = "index.js" } ], args = { program = "{0}" } }] }
grammar = "javascript"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-jinja"
scope = "text.html.jinja"
file-types = [{ glob = "tools/gyp/**/*.jinja" }, { glob = "tools/gyp/**/*.jinja2" }, { glob = "tools/gyp/**/*.j2" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jinja"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-jjdescription"
scope = "jj.description"
file-types = [{ glob = "tools/gyp/**/*.jjdescription" }]
comment-token = "JJ:"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "jjdescription"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-jq"
scope = "source.jq"
file-types = [{ glob = "tools/gyp/**/*.jq" }]
comment-token = "#"
language-servers = ["jq-lsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "jq"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-jsdoc"
scope = "source.jsdoc"
file-types = [{ glob = "tools/gyp/**/*.jsdoc" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsdoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-json"
scope = "source.json"
file-types = [{ glob = "tools/gyp/**/*.json" }, { glob = "tools/gyp/**/*.arb" }, { glob = "tools/gyp/**/*.ipynb" }, { glob = "tools/gyp/**/*.geojson" }, { glob = "tools/gyp/**/*.gltf" }, { glob = "tools/gyp/**/*.webmanifest" }, { glob = "tools/gyp/**/flake.lock" }, { glob = "tools/gyp/**/.babelrc" }, { glob = "tools/gyp/**/.bowerrc" }, { glob = "tools/gyp/**/.jscrc" }, { glob = "tools/gyp/**/*.js.map" }, { glob = "tools/gyp/**/*.ts.map" }, { glob = "tools/gyp/**/*.css.map" }, { glob = "tools/gyp/**/.jslintrc" }, { glob = "tools/gyp/**/*.jsonl" }, { glob = "tools/gyp/**/*.jsonld" }, { glob = "tools/gyp/**/.vuerc" }, { glob = "tools/gyp/**/composer.lock" }, { glob = "tools/gyp/**/.watchmanconfig" }, { glob = "tools/gyp/**/*.avsc" }, { glob = "tools/gyp/**/*.ldtk" }, { glob = "tools/gyp/**/*.ldtkl" }, { glob = "tools/gyp/**/.swift-format" }]
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "json"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-json5"
scope = "source.json5"
file-types = [{ glob = "tools/gyp/**/*.json5" }]
language-servers = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "json5"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-jsonc"
scope = "source.json"
file-types = [{ glob = "tools/gyp/**/*.jsonc" }, { glob = "tools/gyp/**/tsconfig.json" }]
grammar = "jsonc"
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-jsonnet"
scope = "source.jsonnet"
file-types = [{ glob = "tools/gyp/**/*.libsonnet" }, { glob = "tools/gyp/**/*.jsonnet" }]
roots = ["jsonnetfile.json"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "jsonnet-language-server" ]
grammar = "jsonnet"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-jsx"
scope = "source.jsx"
language-id = "javascriptreact"
file-types = [{ glob = "tools/gyp/**/*.jsx" }]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsx"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-julia"
scope = "source.julia"
file-types = [{ glob = "tools/gyp/**/*.jl" }]
shebangs = ["julia"]
roots = ["Manifest.toml", "Project.toml"]
comment-token = "#"
block-comment-tokens = { start = "#=", end = "=#" }
language-servers = [ "julia" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "julia"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-just"
scope = "source.just"
file-types = [{ glob = "tools/gyp/**/*.just" }, { glob = "tools/gyp/**/justfile" }, { glob = "tools/gyp/**/Justfile" }, { glob = "tools/gyp/**/.justfile" }, { glob = "tools/gyp/**/.Justfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "just"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-kdl"
scope = "source.kdl"
file-types = [{ glob = "tools/gyp/**/*.kdl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "kdl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-koka"
scope = "source.koka"
file-types = [{ glob = "tools/gyp/**/*.kk" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koka"]
grammar = "koka"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-kotlin"
scope = "source.kotlin"
file-types = [{ glob = "tools/gyp/**/*.kt" }, { glob = "tools/gyp/**/*.kts" }]
roots = ["settings.gradle", "settings.gradle.kts"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "kotlin-language-server" ]
grammar = "kotlin"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-koto"
scope = "source.koto"
file-types = [{ glob = "tools/gyp/**/*.koto" }]
comment-token = "#"
block-comment-tokens = ["#-", "-#"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koto-ls"]
grammar = "koto"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-latex"
scope = "source.tex"
file-types = [{ glob = "tools/gyp/**/*.tex" }, { glob = "tools/gyp/**/*.sty" }, { glob = "tools/gyp/**/*.cls" }, { glob = "tools/gyp/**/*.Rd" }, { glob = "tools/gyp/**/*.bbx" }, { glob = "tools/gyp/**/*.cbx" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "latex"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ld"
scope = "source.ld"
file-types = [{ glob = "tools/gyp/**/*.ld" }]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ld"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ldif"
scope = "source.ldif"
file-types = [{ glob = "tools/gyp/**/*.ldif" }]
comment-token = "#"
grammar = "ldif"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-lean"
scope = "source.lean"
file-types = [{ glob = "tools/gyp/**/*.lean" }]
roots = [ "lakefile.lean" ]
comment-token = "--"
block-comment-tokens = { start = "/-", end = "-/" }
language-servers = [ "lean" ]
indent = { unit = "  ", tab-width = 2 }
rulers = [101]
text-width = 100
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '⟨' = '⟩' }
grammar = "lean"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ledger"
scope = "source.ledger"
file-types = [{ glob = "tools/gyp/**/*.ldg" }, { glob = "tools/gyp/**/*.ledger" }, { glob = "tools/gyp/**/*.journal" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "ledger"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-llvm"
scope = "source.llvm"
file-types = [{ glob = "tools/gyp/**/*.ll" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-llvm-mir"
scope = "source.llvm_mir"
file-types = []
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-llvm-mir-yaml"
# TODO allow languages to point to their grammar like so:
#
#     grammar = "yaml"
scope = "source.yaml"
file-types = [{ glob = "tools/gyp/**/*.mir" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir-yaml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-log"
scope = "source.log"
file-types = [{ glob = "tools/gyp/**/*.log" }]
grammar = "log"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-lpf"
comment-token = "#"
scope = "source.lpf"
file-types = [{ glob = "tools/gyp/**/*.lpf" }]
grammar = "lpf"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-lua"
scope = "source.lua"
file-types = [{ glob = "tools/gyp/**/*.lua" }]
shebangs = ["lua", "luajit"]
roots = [".luarc.json", ".luacheckrc", ".stylua.toml", "selene.toml", ".git"]
comment-token = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "lua-language-server" ]
grammar = "lua"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-make"
scope = "source.make"
file-types = [{ glob = "tools/gyp/**/Makefile" }, { glob = "tools/gyp/**/makefile" }, { glob = "tools/gyp/**/*.make" }, { glob = "tools/gyp/**/*.mk" }, { glob = "tools/gyp/**/*.mak" }, { glob = "tools/gyp/**/GNUmakefile" }, { glob = "tools/gyp/**/OCamlMakefile" }]
shebangs = ["make", "gmake"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "make"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-markdoc"
scope = "text.markdoc"
block-comment-tokens = { start = "<!--", end = "-->" }
file-types = [{ glob = "tools/gyp/**/*.mdoc" }]
language-servers = [ "markdoc-ls" ]
grammar = "markdoc"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-markdown"
scope = "source.md"
file-types = [{ glob = "tools/gyp/**/*.md" }, { glob = "tools/gyp/**/*.livemd" }, { glob = "tools/gyp/**/*.markdown" }, { glob = "tools/gyp/**/*.mdx" }, { glob = "tools/gyp/**/*.mkd" }, { glob = "tools/gyp/**/*.mkdn" }, { glob = "tools/gyp/**/*.mdwn" }, { glob = "tools/gyp/**/*.mdown" }, { glob = "tools/gyp/**/*.markdn" }, { glob = "tools/gyp/**/*.mdtxt" }, { glob = "tools/gyp/**/*.mdtext" }, { glob = "tools/gyp/**/*.workbook" }, { glob = "tools/gyp/**/PULLREQ_EDITMSG" }]
roots = [".marksman.toml"]
language-servers = [ "marksman", "markdown-oxide" ]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "markdown"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-markdown.inline"
scope = "source.markdown.inline"
file-types = []
grammar = "markdown.inline"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-matlab"
scope = "source.m"
file-types = [{ glob = "tools/gyp/**/*.m" }]
comment-token = "%"
shebangs = ["octave-cli", "matlab"]
indent = { unit = "  ", tab-width = 2 }
grammar = "matlab"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-mermaid"
scope = "source.mermaid"
file-types = [{ glob = "tools/gyp/**/*.mermaid" }, { glob = "tools/gyp/**/*.mmd" }]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
grammar = "mermaid"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-meson"
scope = "source.meson"
file-types = [{ glob = "tools/gyp/**/meson.build" }, { glob = "tools/gyp/**/meson.options" }, { glob = "tools/gyp/**/meson_options.txt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["mesonlsp"]
grammar = "meson"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-mint"
scope = "source.mint"
file-types = [{ glob = "tools/gyp/**/*.mint" }]
shebangs = []
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "mint" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "mint"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-mojo"
scope = "source.mojo"
roots = ["__init__.mojo"]
file-types = [{ glob = "tools/gyp/**/*.mojo" }, { glob = "tools/gyp/**/*.🔥" }]
language-servers = [ "mojo-lsp" ]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "magic", args = ["run", "mojo" , "format", "-q", "-"]}
grammar = "mojo"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-move"
scope = "source.move"
roots = ["Move.toml"]
file-types = [{ glob = "tools/gyp/**/*.move" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = []
grammar = "move"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-msbuild"
scope = "source.msbuild"
file-types = [{ glob = "tools/gyp/**/*.proj" }, { glob = "tools/gyp/**/*.vbproj" }, { glob = "tools/gyp/**/*.csproj" }, { glob = "tools/gyp/**/*.fsproj" }, { glob = "tools/gyp/**/*.targets" }, { glob = "tools/gyp/**/*.props" }]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "msbuild"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-nasm"
scope = "source.nasm"
file-types = [{ glob = "tools/gyp/**/*.asm" }, { glob = "tools/gyp/**/*.S" }, { glob = "tools/gyp/**/*.nasm" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "nasm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-nestedtext"
scope = "text.nested"
file-types = [{ glob = "tools/gyp/**/*.nt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nestedtext"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-nginx"
scope = "source.nginx"
file-types = [{ glob = "tools/gyp/**/sites-available/*.conf" }, { glob = "tools/gyp/**/sites-enabled/*.conf" }, { glob = "tools/gyp/**/nginx.conf" }, { glob = "tools/gyp/**/conf.d/*.conf" }]
roots = ["nginx.conf"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nginx"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-nickel"
scope = "source.nickel"
file-types = [{ glob = "tools/gyp/**/*.ncl" }]
shebangs = []
comment-token = "#"
language-servers = [ "nls" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "nickel"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-nim"
scope = "source.nim"
file-types = [{ glob = "tools/gyp/**/*.nim" }, { glob = "tools/gyp/**/*.nims" }, { glob = "tools/gyp/**/*.nimble" }]
shebangs = []
comment-token = "#"
block-comment-tokens = { start = "#[", end = "]#" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nimlangserver" ]
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '{' = '}' }
grammar = "nim"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-nix"
scope = "source.nix"
file-types = [{ glob = "tools/gyp/**/*.nix" }]
shebangs = []
comment-token = "#"
language-servers = [ "nil", "nixd" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "nix"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-nu"
scope = "source.nu"
file-types = [{ glob = "tools/gyp/**/*.nu" }, { glob = "tools/gyp/**/*.nuon" }]
shebangs = ["nu"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nu-lsp" ]
grammar = "nu"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-nunjucks"
scope = "text.html.nunjucks"
file-types = [{ glob = "tools/gyp/**/*.njk" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "nunjucks"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ocaml"
scope = "source.ocaml"
file-types = [{ glob = "tools/gyp/**/*.ml" }]
shebangs = ["ocaml", "ocamlrun", "ocamlscript"]
block-comment-tokens = { start = "(*", end = "*)" }
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ocaml-interface"
scope = "source.ocaml.interface"
file-types = [{ glob = "tools/gyp/**/*.mli" }]
shebangs = []
block-comment-tokens = { start = "(*", end = "*)" }
comment-token = "(**)"
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml-interface"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-odin"
auto-format = true
scope = "source.odin"
file-types = [{ glob = "tools/gyp/**/*.odin" }]
roots = ["ols.json", "main.odin"]
language-servers = [ "ols" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "odinfmt", args = [ "-stdin" ] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "odin"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ohm"
scope = "source.ohm"
file-types = [{ glob = "tools/gyp/**/*.ohm" }]
comment-token = "//"
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "ohm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-opencl"
scope = "source.cl"
file-types = [{ glob = "tools/gyp/**/*.cl" }]
comment-token = "//"
language-servers = [ "clangd" ]
grammar = "opencl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-openscad"
scope = "source.openscad"
file-types = [{ glob = "tools/gyp/**/*.scad" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "openscad-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "openscad"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-org"
scope = "source.org"
file-types = [{ glob = "tools/gyp/**/*.org" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "org"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-pascal"
scope = "source.pascal"
file-types = [{ glob = "tools/gyp/**/*.pas" }, { glob = "tools/gyp/**/*.pp" }, { glob = "tools/gyp/**/*.inc" }, { glob = "tools/gyp/**/*.lpr" }, { glob = "tools/gyp/**/*.lfm" }]
comment-token = "//"
block-comment-tokens = { start = "{", end = "}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "pasls" ]
grammar = "pascal"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-passwd"
scope = "source.passwd"
file-types = [{ glob = "tools/gyp/**/passwd" }]
grammar = "passwd"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-pem"
scope = "source.pem"
file-types = [{ glob = "tools/gyp/**/*.pem" }, { glob = "tools/gyp/**/*.cert" }, { glob = "tools/gyp/**/*.crt" }]
grammar = "pem"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-perl"
scope = "source.perl"
file-types = [{ glob = "tools/gyp/**/*.pl" }, { glob = "tools/gyp/**/*.pm" }, { glob = "tools/gyp/**/*.t" }, { glob = "tools/gyp/**/*.psgi" }, { glob = "tools/gyp/**/*.raku" }, { glob = "tools/gyp/**/*.rakumod" }, { glob = "tools/gyp/**/*.rakutest" }, { glob = "tools/gyp/**/*.rakudoc" }, { glob = "tools/gyp/**/*.nqp" }, { glob = "tools/gyp/**/*.p6" }, { glob = "tools/gyp/**/*.pl6" }, { glob = "tools/gyp/**/*.pm6" }]
shebangs = ["perl"]
comment-token = "#"
language-servers = [ "perlnavigator" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "perl"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-pest"
scope = "source.pest"
file-types = [{ glob = "tools/gyp/**/*.pest" }]
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pest-language-server"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "pest"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-php"
scope = "source.php"
file-types = [{ glob = "tools/gyp/**/*.php" }, { glob = "tools/gyp/**/*.inc" }, { glob = "tools/gyp/**/*.php4" }, { glob = "tools/gyp/**/*.php5" }, { glob = "tools/gyp/**/*.phtml" }, { glob = "tools/gyp/**/*.ctp" }]
shebangs = ["php"]
roots = ["composer.json", "index.php"]
comment-token = "//"
language-servers = [ "intelephense" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "php"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-php-only"
scope = "source.php-only"
file-types = []
indent = { unit = "  ", tab-width = 2 }
roots = ["composer.json", "index.php"]
grammar = "php-only"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-pkgbuild"
scope = "source.bash"
file-types = [{ glob = "tools/gyp/**/PKGBUILD" }]
comment-token = "#"
grammar = "pkgbuild"
language-servers = [
  "pkgbuild-language-server",
  { except-features = [
    "diagnostics",
  ], name = "bash-language-server" },
]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-pkl"
scope = "source.pkl"
file-types = [{ glob = "tools/gyp/**/*.pkl" }, { glob = "tools/gyp/**/*.pcf" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "pkl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-po"
scope = "source.po"
file-types = [{ glob = "tools/gyp/**/*.po" }, { glob = "tools/gyp/**/*.pot" }]
comment-token = "#"
grammar = "po"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-pod"
scope = "source.pod"
file-types = [{ glob = "tools/gyp/**/*.pod" }]
grammar = "pod"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ponylang"
scope = "source.pony"
file-types = [{ glob = "tools/gyp/**/*.pony" }]
roots = ["corral.json", "lock.json"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "ponylang"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-powershell"
scope = "source.powershell"
file-types = [{ glob = "tools/gyp/**/*.ps1" }, { glob = "tools/gyp/**/*.psm1" }, { glob = "tools/gyp/**/*.psd1" }, { glob = "tools/gyp/**/*.pscc" }, { glob = "tools/gyp/**/*.psrc" }]
shebangs = [ "pwsh", "powershell" ]
comment-token = '#'
block-comment-tokens = { start = "<#", end = "#>" }
indent = { unit = "  ", tab-width = 2 }
grammar = "powershell"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-prisma"
scope = "source.prisma"
file-types = [{ glob = "tools/gyp/**/*.prisma" }]
roots = ["package.json"]
comment-token = "//"
language-servers = [ "prisma-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "prisma"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-prolog"
scope = "source.prolog"
file-types = [{ glob = "tools/gyp/**/*.pl" }, { glob = "tools/gyp/**/*.prolog" }]
shebangs = ["swipl"]
comment-token = "%"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "swipl" ]
grammar = "prolog"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-protobuf"
scope = "source.proto"
file-types = [{ glob = "tools/gyp/**/*.proto" }]
language-servers = [ "bufls", "pbkit" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "protobuf"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-prql"
scope = "source.prql"
file-types = [{ glob = "tools/gyp/**/*.prql" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "prql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-purescript"
scope = "source.purescript"
file-types = [{ glob = "tools/gyp/**/*.purs" }]
roots = ["spago.yaml", "spago.dhall", "bower.json"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "purescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "purs-tidy", args = ["format"] }
grammar = "purescript"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-python"
scope = "source.python"
file-types = [{ glob = "tools/gyp/**/*.py" }, { glob = "tools/gyp/**/*.pyi" }, { glob = "tools/gyp/**/*.py3" }, { glob = "tools/gyp/**/*.pyw" }, { glob = "tools/gyp/**/*.ptl" }, { glob = "tools/gyp/**/*.rpy" }, { glob = "tools/gyp/**/*.cpy" }, { glob = "tools/gyp/**/*.ipy" }, { glob = "tools/gyp/**/*.pyt" }, { glob = "tools/gyp/**/.python_history" }, { glob = "tools/gyp/**/.pythonstartup" }, { glob = "tools/gyp/**/.pythonrc" }, { glob = "tools/gyp/**/SConstruct" }, { glob = "tools/gyp/**/SConscript" }]
shebangs = ["python", "uv"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["ruff", "jedi", "pylsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "python"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-qml"
scope = "source.qml"
file-types = [{ glob = "tools/gyp/**/*.qml" }]
language-servers = [ "qmlls" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "qml"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-quint"
scope = "source.quint"
file-types = [{ glob = "tools/gyp/**/*.qnt" }]
language-servers = ["quint-language-server"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "quint"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-r"
scope = "source.r"
file-types = [{ glob = "tools/gyp/**/*.r" }, { glob = "tools/gyp/**/*.R" }, { glob = "tools/gyp/**/.Rprofile" }, { glob = "tools/gyp/**/Rprofile.site" }, { glob = "tools/gyp/**/.RHistory" }]
shebangs = ["r", "R"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "r" ]
grammar = "r"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-racket"
scope = "source.racket"
file-types = [{ glob = "tools/gyp/**/*.rkt" }, { glob = "tools/gyp/**/*.rktd" }, { glob = "tools/gyp/**/*.rktl" }, { glob = "tools/gyp/**/*.scrbl" }]
shebangs = ["racket"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "#|", end = "|#" }
language-servers = [ "racket" ]
grammar = "racket"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-regex"
scope = "source.regex"
file-types = [{ glob = "tools/gyp/**/*.regex" }, { glob = "tools/gyp/**/.Rbuildignore" }]
grammar = "regex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-rego"
scope = "source.rego"
file-types = [{ glob = "tools/gyp/**/*.rego" }]
auto-format = true
comment-token = "#"
language-servers = [ "regols" ]
grammar = "rego"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-rescript"
scope = "source.rescript"
file-types = [{ glob = "tools/gyp/**/*.res" }]
roots = ["bsconfig.json"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "rescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "rescript"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-rmarkdown"
scope = "source.rmd"
language-id = "rmd"
file-types = [{ glob = "tools/gyp/**/*.rmd" }, { glob = "tools/gyp/**/*.Rmd" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "rmarkdown"
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "r" ]

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-robot"
scope = "source.robot"
file-types = [{ glob = "tools/gyp/**/*.robot" }, { glob = "tools/gyp/**/*.resource" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "robotframework_ls" ]
grammar = "robot"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ron"
scope = "source.ron"
file-types = [{ glob = "tools/gyp/**/*.ron" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ron"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-rst"
scope = "source.rst"
comment-token = ".."
file-types = [{ glob = "tools/gyp/**/*.rst" }]
grammar = "rst"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ruby"
scope = "source.ruby"
file-types = [{ glob = "tools/gyp/**/*.rb" }, { glob = "tools/gyp/**/*.rake" }, { glob = "tools/gyp/**/*.irb" }, { glob = "tools/gyp/**/*.gemspec" }, { glob = "tools/gyp/**/*.rabl" }, { glob = "tools/gyp/**/*.jbuilder" }, { glob = "tools/gyp/**/*.jb" }, { glob = "tools/gyp/**/*.podspec" }, { glob = "tools/gyp/**/*.rjs" }, { glob = "tools/gyp/**/*.rbi" }, { glob = "tools/gyp/**/*.rbs" }, { glob = "tools/gyp/**/rakefile" }, { glob = "tools/gyp/**/gemfile" }, { glob = "tools/gyp/**/Rakefile" }, { glob = "tools/gyp/**/Gemfile" }, { glob = "tools/gyp/**/Podfile" }, { glob = "tools/gyp/**/Vagrantfile" }, { glob = "tools/gyp/**/Brewfile" }, { glob = "tools/gyp/**/Guardfile" }, { glob = "tools/gyp/**/Capfile" }, { glob = "tools/gyp/**/Cheffile" }, { glob = "tools/gyp/**/Hobofile" }, { glob = "tools/gyp/**/Appraisals" }, { glob = "tools/gyp/**/Rantfile" }, { glob = "tools/gyp/**/Berksfile" }, { glob = "tools/gyp/**/Berksfile.lock" }, { glob = "tools/gyp/**/Thorfile" }, { glob = "tools/gyp/**/Puppetfile" }, { glob = "tools/gyp/**/Fastfile" }, { glob = "tools/gyp/**/Appfile" }, { glob = "tools/gyp/**/Deliverfile" }, { glob = "tools/gyp/**/Matchfile" }, { glob = "tools/gyp/**/Scanfile" }, { glob = "tools/gyp/**/Snapfile" }, { glob = "tools/gyp/**/Gymfile" }]
shebangs = ["ruby"]
comment-token = "#"
language-servers = [ "solargraph" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "ruby"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-rust"
scope = "source.rust"
file-types = [{ glob = "tools/gyp/**/*.rs" }]
roots = ["Cargo.toml", "Cargo.lock"]
shebangs = ["rust-script", "cargo"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
  { start = "/*!", end = "*/" },
]
language-servers = [ "rust-analyzer" ]
indent = { unit = "  ", tab-width = 2 }
persistent-diagnostic-sources = ["rustc", "clippy"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}" } }, { name = "binary (terminal)", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}", runInTerminal = true } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "rust"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-sage"
scope = "source.sage"
file-types = [{ glob = "tools/gyp/**/*.sage" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "sage"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-scala"
scope = "source.scala"
roots = ["build.sbt", "build.sc", "build.gradle", "build.gradle.kts", "pom.xml", ".scala-build"]
file-types = [{ glob = "tools/gyp/**/*.scala" }, { glob = "tools/gyp/**/*.sbt" }, { glob = "tools/gyp/**/*.sc" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "metals" ]
grammar = "scala"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-scheme"
scope = "source.scheme"
file-types = [{ glob = "tools/gyp/**/*.ss" }, { glob = "tools/gyp/**/*.scm" }]
shebangs = ["scheme", "guile", "chicken"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "scheme"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-scss"
scope = "source.scss"
file-types = [{ glob = "tools/gyp/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "scss"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-slint"
scope = "source.slint"
file-types = [{ glob = "tools/gyp/**/*.slint" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "slint-lsp" ]
grammar = "slint"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-smali"
scope = "source.smali"
file-types = [{ glob = "tools/gyp/**/*.smali" }]
comment-token = "#"
roots = []
indent = { unit = "  ", tab-width = 2 }
grammar = "smali"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-smithy"
scope = "source.smithy"
file-types = [{ glob = "tools/gyp/**/*.smithy" }]
roots = ["smithy-build.json"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cs" ]
grammar = "smithy"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-sml"
scope = "source.sml"
file-types = [{ glob = "tools/gyp/**/*.sml" }]
block-comment-tokens = { start = "(*", end = "*)" }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "sml"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-snakemake"
scope = "source.snakemake"
roots = ["Snakefile", "config.yaml", "environment.yaml", "workflow/"]
file-types = [{ glob = "tools/gyp/**/*.smk" }, { glob = "tools/gyp/**/Snakefile" }]
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pylsp" ]
formatter= { command = "snakefmt", args = ["-"] }
grammar = "snakemake"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-solidity"
scope = "source.sol"
file-types = [{ glob = "tools/gyp/**/*.sol" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "solc" ]
grammar = "solidity"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-spade"
scope = "source.spade"
roots = ["swim.toml"]
file-types = [{ glob = "tools/gyp/**/*.spade" }]
comment-tokens = ["//", "///"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
language-servers = [ "spade-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '<' = '>' }
grammar = "spade"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-spicedb"
scope = "source.zed"
file-types = [{ glob = "tools/gyp/**/*.zed" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "spicedb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-sql"
scope = "source.sql"
file-types = [{ glob = "tools/gyp/**/*.sql" }, { glob = "tools/gyp/**/*.dsql" }]
comment-token = "--"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "sql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-sshclientconfig"
scope = "source.sshclientconfig"
file-types = [{ glob = "tools/gyp/**/.ssh/config" }, { glob = "tools/gyp/**//etc/ssh/ssh_config" }, { glob = "tools/gyp/**/ssh_config.d/*.conf" }]
comment-token = "#"
grammar = "sshclientconfig"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-starlark"
scope = "source.starlark"
file-types = [{ glob = "tools/gyp/**/*.bzl" }, { glob = "tools/gyp/**/*.bazel" }, { glob = "tools/gyp/**/*.star" }, { glob = "tools/gyp/**/BUILD" }, { glob = "tools/gyp/**/BUILD.*" }, { glob = "tools/gyp/**/Tiltfile" }, { glob = "tools/gyp/**/WORKSPACE" }, { glob = "tools/gyp/**/WORKSPACE.bzlmod" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "starlark"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-strace"
scope = "source.strace"
file-types = [{ glob = "tools/gyp/**/*.strace" }]
grammar = "strace"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-supercollider"
scope = "source.supercollider"
file-types = [{ glob = "tools/gyp/**/*.scd" }, { glob = "tools/gyp/**/*.sc" }, { glob = "tools/gyp/**/*.quark" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "supercollider"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-svelte"
scope = "source.svelte"
file-types = [{ glob = "tools/gyp/**/*.svelte" }]
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "svelteserver" ]
grammar = "svelte"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-sway"
scope = "source.sway"
file-types = [{ glob = "tools/gyp/**/*.sw" }]
language-servers = [ "forc" ]
roots = ["Forc.toml", "Forc.lock"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
grammar = "sway"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-swift"
scope = "source.swift"
file-types = [{ glob = "tools/gyp/**/*.swift" }, { glob = "tools/gyp/**/*.swiftinterface" }]
roots = [ "Package.swift" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
formatter = { command = "swift-format" }
language-servers = [ "sourcekit-lsp" ]
grammar = "swift"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-t32"
scope = "source.t32"
file-types = [{ glob = "tools/gyp/**/*.cmm" }, { glob = "tools/gyp/**/*.t32" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "t32"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-tablegen"
scope = "source.tablegen"
file-types = [{ glob = "tools/gyp/**/*.td" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "tablegen"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-tact"
scope = "source.tact"
file-types = [{ glob = "tools/gyp/**/*.tact" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "tact"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-task"
scope = "source.task"
file-types = [{ glob = "tools/gyp/**/*.task" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "task"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-tcl"
scope = "source.tcl"
file-types = [{ glob = "tools/gyp/**/*.tcl" }]
shebangs = [ "tclsh", "tclish", "jimsh", "wish" ]
comment-token = '#'
grammar = "tcl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-teal"
scope = "source.tl"
file-types = [{ glob = "tools/gyp/**/*.tl" }]
comment-tokens = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
roots = [ "tlconfig.lua" ]
language-servers = [ "teal-lsp" ]
grammar = "teal"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-templ"
scope = "source.templ"
file-types = [{ glob = "tools/gyp/**/*.templ" }]
roots = ["go.work", "go.mod"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "templ" ]
grammar = "templ"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-textproto"
file-types = [{ glob = "tools/gyp/**/*.txtpb" }, { glob = "tools/gyp/**/*.textpb" }, { glob = "tools/gyp/**/*.textproto" }]
comment-token = "#"
scope = "source.textproto"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "txtpbfmt" }
auto-format = true
grammar = "textproto"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-tfvars"
scope = "source.tfvars"
language-id = "terraform-vars"
file-types = [{ glob = "tools/gyp/**/*.tfvars" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "tfvars"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-thrift"
scope = "source.thrift"
file-types = [{ glob = "tools/gyp/**/*.thrift" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "thrift"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-todotxt"
scope = "text.todotxt"
file-types = [{ glob = "tools/gyp/**/*.todo.txt" }, { glob = "tools/gyp/**/*.todotxt" }]
formatter = { command = "sort" }
auto-format = true
grammar = "todotxt"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-toml"
scope = "source.toml"
file-types = [{ glob = "tools/gyp/**/*.toml" }, { glob = "tools/gyp/**/pdm.lock" }, { glob = "tools/gyp/**/poetry.lock" }, { glob = "tools/gyp/**/Cargo.lock" }, { glob = "tools/gyp/**/uv.lock" }]
comment-token = "#"
language-servers = [ "taplo" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "toml"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-tsq"
scope = "source.tsq"
file-types = [{ glob = "tools/gyp/**/queries/*.scm" }, { glob = "tools/gyp/**/injections.scm" }, { glob = "tools/gyp/**/highlights.scm" }, { glob = "tools/gyp/**/indents.scm" }, { glob = "tools/gyp/**/textobjects.scm" }, { glob = "tools/gyp/**/locals.scm" }, { glob = "tools/gyp/**/tags.scm" }]
comment-token = ";"
language-servers = ["ts_query_ls"]
grammar = "tsq"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-tsx"
scope = "source.tsx"
language-id = "typescriptreact"
file-types = [{ glob = "tools/gyp/**/*.tsx" }]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "tsx"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-twig"
scope = "source.twig"
file-types = [{ glob = "tools/gyp/**/*.twig" }]
block-comment-tokens = { start = "{#", end = "#}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "twig"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-typescript"
scope = "source.ts"
language-id = "typescript"
file-types = [{ glob = "tools/gyp/**/*.ts" }, { glob = "tools/gyp/**/*.mts" }, { glob = "tools/gyp/**/*.cts" }]
shebangs = ["deno", "bun", "ts-node"]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "typescript"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-typespec"
scope = "source.typespec"
language-id = "typespec"
file-types = [{ glob = "tools/gyp/**/*.tsp" }]
roots = ["tspconfig.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["typespec"]
indent = { unit = "  ", tab-width = 2 }
grammar = "typespec"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-typst"
scope = "source.typst"
file-types = [{ glob = "tools/gyp/**/*.typst" }, { glob = "tools/gyp/**/*.typ" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["tinymist", "typst-lsp"]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '$' = '$', '"' = '"' }
grammar = "typst"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-ungrammar"
scope = "source.ungrammar"
file-types = [{ glob = "tools/gyp/**/*.ungram" }, { glob = "tools/gyp/**/*.ungrammar" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "ungrammar"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-unison"
scope = "source.unison"
file-types = [{ glob = "tools/gyp/**/*.u" }]
shebangs = []
auto-format = true
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
grammar = "unison"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-unknown"
scope = "text.plain"
file-types = [{ glob = "*.foo" }, { glob = "*.txt" }]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-uxntal"
scope = "source.tal"
file-types = [{ glob = "tools/gyp/**/*.tal" }]
auto-format = true
block-comment-tokens = { start = "(", end = ")" }
grammar = "uxntal"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-v"
scope = "source.v"
file-types = [{ glob = "tools/gyp/**/*.v" }, { glob = "tools/gyp/**/*.vv" }, { glob = "tools/gyp/**/*.vsh" }]
shebangs = ["v run"]
roots = ["v.mod"]
language-servers = [ "vlang-language-server" ]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "v"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-vala"
scope = "source.vala"
file-types = [{ glob = "tools/gyp/**/*.vala" }, { glob = "tools/gyp/**/*.vapi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vala-language-server" ]
grammar = "vala"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-vento"
scope = "text.html.vto"
file-types = [{ glob = "tools/gyp/**/*.vto" }]
block-comment-tokens = { start = "{{#", end = "#}}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "vento"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-verilog"
scope = "source.verilog"
file-types = [{ glob = "tools/gyp/**/*.v" }, { glob = "tools/gyp/**/*.vh" }, { glob = "tools/gyp/**/*.sv" }, { glob = "tools/gyp/**/*.svh" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "svlangserver" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "verilog"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-vhdl"
scope = "source.vhdl"
file-types = [{ glob = "tools/gyp/**/*.vhd" }, { glob = "tools/gyp/**/*.vhdl" }]
comment-token = "--"
language-servers = [ "vhdl_ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "vhdl"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-vhs"
scope = "source.vhs"
file-types = [{ glob = "tools/gyp/**/*.tape" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "vhs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-vue"
scope = "source.vue"
file-types = [{ glob = "tools/gyp/**/*.vue" }]
roots = ["package.json"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vuels" ]
grammar = "vue"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-wast"
scope = "source.wast"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "tools/gyp/**/*.wast" }]
grammar = "wast"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-wat"
scope = "source.wat"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "tools/gyp/**/*.wat" }]
grammar = "wat"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-webc"
scope = "text.html.webc"
file-types = [{ glob = "tools/gyp/**/*.webc" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "webc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-wgsl"
scope = "source.wgsl"
file-types = [{ glob = "tools/gyp/**/*.wgsl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "wgsl_analyzer" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "wgsl"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-wit"
scope = "source.wit"
file-types = [{ glob = "tools/gyp/**/*.wit" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "wit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-wren"
scope = "source.wren"
file-types = [{ glob = "tools/gyp/**/*.wren" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "wren"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-xit"
scope = "source.xit"
file-types = [{ glob = "tools/gyp/**/*.xit" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "xit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-xml"
scope = "source.xml"
file-types = [{ glob = "tools/gyp/**/*.xml" }, { glob = "tools/gyp/**/*.mobileconfig" }, { glob = "tools/gyp/**/*.plist" }, { glob = "tools/gyp/**/*.xib" }, { glob = "tools/gyp/**/*.storyboard" }, { glob = "tools/gyp/**/*.svg" }, { glob = "tools/gyp/**/*.xsd" }, { glob = "tools/gyp/**/*.gml" }, { glob = "tools/gyp/**/*.xaml" }, { glob = "tools/gyp/**/*.gir" }, { glob = "tools/gyp/**/*.rss" }, { glob = "tools/gyp/**/*.atom" }, { glob = "tools/gyp/**/*.opml" }, { glob = "tools/gyp/**/*.policy" }, { glob = "tools/gyp/**/*.ascx" }, { glob = "tools/gyp/**/*.axml" }, { glob = "tools/gyp/**/*.axaml" }, { glob = "tools/gyp/**/*.bpmn" }, { glob = "tools/gyp/**/*.cpt" }, { glob = "tools/gyp/**/*.csl" }, { glob = "tools/gyp/**/*.csproj.user" }, { glob = "tools/gyp/**/*.dita" }, { glob = "tools/gyp/**/*.ditamap" }, { glob = "tools/gyp/**/*.dtml" }, { glob = "tools/gyp/**/*.fxml" }, { glob = "tools/gyp/**/*.iml" }, { glob = "tools/gyp/**/*.isml" }, { glob = "tools/gyp/**/*.jmx" }, { glob = "tools/gyp/**/*.launch" }, { glob = "tools/gyp/**/*.menu" }, { glob = "tools/gyp/**/*.mxml" }, { glob = "tools/gyp/**/*.nuspec" }, { glob = "tools/gyp/**/*.osc" }, { glob = "tools/gyp/**/*.osm" }, { glob = "tools/gyp/**/*.pt" }, { glob = "tools/gyp/**/*.publishsettings" }, { glob = "tools/gyp/**/*.pubxml" }, { glob = "tools/gyp/**/*.pubxml.user" }, { glob = "tools/gyp/**/*.rbxlx" }, { glob = "tools/gyp/**/*.rbxmx" }, { glob = "tools/gyp/**/*.rng" }, { glob = "tools/gyp/**/*.shproj" }, { glob = "tools/gyp/**/*.tld" }, { glob = "tools/gyp/**/*.tmx" }, { glob = "tools/gyp/**/*.vbproj.user" }, { glob = "tools/gyp/**/*.vcxproj" }, { glob = "tools/gyp/**/*.vcxproj.filters" }, { glob = "tools/gyp/**/*.wsdl" }, { glob = "tools/gyp/**/*.wxi" }, { glob = "tools/gyp/**/*.wxs" }, { glob = "tools/gyp/**/*.xbl" }, { glob = "tools/gyp/**/*.xlf" }, { glob = "tools/gyp/**/*.xliff" }, { glob = "tools/gyp/**/*.xpdl" }, { glob = "tools/gyp/**/*.xul" }, { glob = "tools/gyp/**/*.xoml" }, { glob = "tools/gyp/**/*.musicxml" }, { glob = "tools/gyp/**/*.glif" }, { glob = "tools/gyp/**/*.ui" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "xml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-xtc"
scope = "source.xtc"
file-types = [{ glob = "tools/gyp/**/*.xtc" }, { glob = "tools/gyp/**/*.xpc" }, { glob = "tools/gyp/**/*.xoa" }]
comment-token = ";"
grammar = "xtc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-yaml"
scope = "source.yaml"
file-types = [{ glob = "tools/gyp/**/*.yml" }, { glob = "tools/gyp/**/*.yaml" }, { glob = "tools/gyp/**/.prettierrc" }, { glob = "tools/gyp/**/.clangd" }, { glob = "tools/gyp/**/.clang-format" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "yaml-language-server", "ansible-language-server" ]
grammar = "yaml"

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-yuck"
scope = "source.yuck"
file-types = [{ glob = "tools/gyp/**/*.yuck" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "yuck"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-gyp-**-zig"
scope = "source.zig"
file-types = [{ glob = "tools/gyp/**/*.zig" }, { glob = "tools/gyp/**/*.zon" }]
roots = ["build.zig"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
language-servers = [ "zls" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "zig" , args = ["fmt", "--stdin"] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "zig"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ada"
scope = "source.ada"
file-types = [{ glob = "tools/icu/**/*.adb" }, { glob = "tools/icu/**/*.ads" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-language-server"]
grammar = "ada"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-adl"
scope = "source.adl"
file-types = [{ glob = "tools/icu/**/*.adl" }]
roots = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '<' = '>' }
grammar = "adl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-agda"
scope = "source.agda"
file-types = [{ glob = "tools/icu/**/*.agda" }]
roots = []
comment-token = "--"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', "'" = "'", '{' = '}', '(' = ')', '[' = ']' }
grammar = "agda"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-amber"
scope = "source.ab"
file-types = [{ glob = "tools/icu/**/*.ab" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "amber"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-astro"
scope = "source.astro"
file-types = [{ glob = "tools/icu/**/*.astro" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "astro"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-awk"
scope = "source.awk"
file-types = [{ glob = "tools/icu/**/*.awk" }, { glob = "tools/icu/**/*.gawk" }, { glob = "tools/icu/**/*.nawk" }, { glob = "tools/icu/**/*.mawk" }]
comment-token = "#"
language-servers = [ "awk-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "awk"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-bash"
scope = "source.bash"
file-types = [{ glob = "tools/icu/**/*.sh" }, { glob = "tools/icu/**/*.bash" }, { glob = "tools/icu/**/*.ash" }, { glob = "tools/icu/**/*.dash" }, { glob = "tools/icu/**/*.ksh" }, { glob = "tools/icu/**/*.mksh" }, { glob = "tools/icu/**/*.zsh" }, { glob = "tools/icu/**/*.zshenv" }, { glob = "tools/icu/**/*.zlogin" }, { glob = "tools/icu/**/*.zlogout" }, { glob = "tools/icu/**/*.zprofile" }, { glob = "tools/icu/**/*.zshrc" }, { glob = "tools/icu/**/*.eclass" }, { glob = "tools/icu/**/*.ebuild" }, { glob = "tools/icu/**/*.bazelrc" }, { glob = "tools/icu/**/*.Renviron" }, { glob = "tools/icu/**/*.zsh-theme" }, { glob = "tools/icu/**/*.cshrc" }, { glob = "tools/icu/**/*.tcshrc" }, { glob = "tools/icu/**/*.bashrc_Apple_Terminal" }, { glob = "tools/icu/**/*.zshrc_Apple_Terminal" }, { glob = "tools/icu/**/i3/config" }, { glob = "tools/icu/**/sway/config" }, { glob = "tools/icu/**/tmux.conf" }, { glob = "tools/icu/**/.bash_history" }, { glob = "tools/icu/**/.bash_login" }, { glob = "tools/icu/**/.bash_logout" }, { glob = "tools/icu/**/.bash_profile" }, { glob = "tools/icu/**/.bashrc" }, { glob = "tools/icu/**/.profile" }, { glob = "tools/icu/**/.zshenv" }, { glob = "tools/icu/**/.zlogin" }, { glob = "tools/icu/**/.zlogout" }, { glob = "tools/icu/**/.zprofile" }, { glob = "tools/icu/**/.zshrc" }, { glob = "tools/icu/**/.zimrc" }, { glob = "tools/icu/**/APKBUILD" }, { glob = "tools/icu/**/.bash_aliases" }, { glob = "tools/icu/**/.Renviron" }, { glob = "tools/icu/**/.xprofile" }, { glob = "tools/icu/**/.xsession" }, { glob = "tools/icu/**/.xsessionrc" }, { glob = "tools/icu/**/.yashrc" }, { glob = "tools/icu/**/.yash_profile" }, { glob = "tools/icu/**/.hushlogin" }]
shebangs = ["sh", "bash", "dash", "zsh"]
comment-token = "#"
language-servers = [ "bash-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "bash"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-bass"
scope = "source.bass"
file-types = [{ glob = "tools/icu/**/*.bass" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bass" ]
grammar = "bass"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-beancount"
scope = "source.beancount"
file-types = [{ glob = "tools/icu/**/*.beancount" }, { glob = "tools/icu/**/*.bean" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "beancount"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-bibtex"
scope = "source.bib"
file-types = [{ glob = "tools/icu/**/*.bib" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter= { command = 'bibtex-tidy', args = [
  "-",
  "--curly",
  "--drop-all-caps",
  "--remove-empty-fields",
  "--sort-fields",
  "--sort=year,author,id",
  "--strip-enclosing-braces",
  "--trailing-commas",
] }
grammar = "bibtex"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-bicep"
scope = "source.bicep"
file-types = [{ glob = "tools/icu/**/*.bicep" }, { glob = "tools/icu/**/*.bicepparam" }]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bicep-langserver" ]
grammar = "bicep"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-bitbake"
language-servers = [ "bitbake-language-server" ]
scope = "source.bitbake"
file-types = [{ glob = "tools/icu/**/*.bb" }, { glob = "tools/icu/**/*.bbappend" }, { glob = "tools/icu/**/*.bbclass" }, { glob = "tools/icu/**/conf/*.conf" }, { glob = "tools/icu/**/conf/*/*.{inc,conf}" }, { glob = "tools/icu/**/recipe-*/*/*.inc" }]
comment-token = "#"
grammar = "bitbake"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-blade"
scope = "source.blade.php"
file-types = [{ glob = "tools/icu/**/*.blade.php" }, { glob = "tools/icu/**/*.blade" }]
roots = ["composer.json", "index.php"]
grammar = "blade"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-blueprint"
scope = "source.blueprint"
file-types = [{ glob = "tools/icu/**/*.blp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "blueprint-compiler" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "blueprint"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-c"
scope = "source.c"
file-types = [{ glob = "tools/icu/**/*.c" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "c"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-c-sharp"
scope = "source.csharp"
file-types = [{ glob = "tools/icu/**/*.cs" }, { glob = "tools/icu/**/*.csx" }, { glob = "tools/icu/**/*.cake" }]
roots = ["sln", "csproj"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "omnisharp" ]
debugger= { name = "netcoredbg", transport = "tcp", command = "netcoredbg", args = [ "--interpreter=vscode" ], port-arg = "--server={}", templates = [{ name = "launch", request = "launch", completion = [ { name = "path to dll", completion = "filename" } ], args = { type = "coreclr", console = "internalConsole", internalConsoleOptions = "openOnSessionStart", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { processId = "{0}" } }] }
grammar = "c-sharp"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-cabal"
scope = "source.cabal"
file-types = [{ glob = "tools/icu/**/*.cabal" }]
roots = ["cabal.project", "Setup.hs"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "--"
language-servers = [ "haskell-language-server" ]
grammar = "cabal"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-cairo"
scope = "source.cairo"
file-types = [{ glob = "tools/icu/**/*.cairo" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
# auto-format = true
language-servers = [ "cairo-language-server" ]
grammar = "cairo"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-capnp"
scope = "source.capnp"
file-types = [{ glob = "tools/icu/**/*.capnp" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "capnp"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-cel"
scope = "source.cel"
file-types = [{ glob = "tools/icu/**/*.cel" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cel"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-circom"
scope            = "source.circom"
file-types = [{ glob = "tools/icu/**/*.circom" }]
roots            = ["package.json"]
comment-tokens   = "//"
indent = { unit = "  ", tab-width = 2 }
auto-format      = false
language-servers = ["circom-lsp"]
grammar = "circom"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-clojure"
scope = "source.clojure"
file-types = [{ glob = "tools/icu/**/*.clj" }, { glob = "tools/icu/**/*.cljs" }, { glob = "tools/icu/**/*.cljc" }, { glob = "tools/icu/**/*.clje" }, { glob = "tools/icu/**/*.cljr" }, { glob = "tools/icu/**/*.cljx" }, { glob = "tools/icu/**/*.edn" }, { glob = "tools/icu/**/*.boot" }]
roots = ["project.clj", "build.boot", "deps.edn", "shadow-cljs.edn"]
comment-token = ";"
language-servers = [ "clojure-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "clojure"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-cmake"
scope = "source.cmake"
file-types = [{ glob = "tools/icu/**/*.cmake" }, { glob = "tools/icu/**/CMakeLists.txt" }]
comment-token = "#"
block-comment-tokens = { start = "#[[", end = "]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cmake-language-server" ]
grammar = "cmake"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-comment"
scope = "scope.comment"
file-types = []
grammar = "comment"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-common-lisp"
scope = "source.lisp"
file-types = [{ glob = "tools/icu/**/*.lisp" }, { glob = "tools/icu/**/*.asd" }, { glob = "tools/icu/**/*.cl" }, { glob = "tools/icu/**/*.l" }, { glob = "tools/icu/**/*.lsp" }, { glob = "tools/icu/**/*.ny" }, { glob = "tools/icu/**/*.podsl" }, { glob = "tools/icu/**/*.sexp" }]
shebangs = ["lisp", "sbcl", "ccl", "clisp", "ecl"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cl-lsp" ]
grammar = "common-lisp"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-cpon"
scope = "scope.cpon"
file-types = [{ glob = "tools/icu/**/*.cpon" }, { glob = "tools/icu/**/*.cp" }]
auto-format = true
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cpon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-cpp"
scope = "source.cpp"
file-types = [{ glob = "tools/icu/**/*.cc" }, { glob = "tools/icu/**/*.hh" }, { glob = "tools/icu/**/*.c++" }, { glob = "tools/icu/**/*.cpp" }, { glob = "tools/icu/**/*.hpp" }, { glob = "tools/icu/**/*.h" }, { glob = "tools/icu/**/*.ipp" }, { glob = "tools/icu/**/*.tpp" }, { glob = "tools/icu/**/*.cxx" }, { glob = "tools/icu/**/*.hxx" }, { glob = "tools/icu/**/*.ixx" }, { glob = "tools/icu/**/*.txx" }, { glob = "tools/icu/**/*.ino" }, { glob = "tools/icu/**/*.C" }, { glob = "tools/icu/**/*.H" }, { glob = "tools/icu/**/*.cu" }, { glob = "tools/icu/**/*.cuh" }, { glob = "tools/icu/**/*.cppm" }, { glob = "tools/icu/**/*.h++" }, { glob = "tools/icu/**/*.ii" }, { glob = "tools/icu/**/*.inl" }, { glob = "tools/icu/**/.hpp.in" }, { glob = "tools/icu/**/.h.in" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "cpp"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-crystal"
scope = "source.cr"
file-types = [{ glob = "tools/icu/**/*.cr" }]
roots = ["shard.yml", "shard.lock"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "crystal"
language-servers = [ "crystalline" ]

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-css"
scope = "source.css"
file-types = [{ glob = "tools/icu/**/*.css" }, { glob = "tools/icu/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "css"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-cue"
scope = "source.cue"
file-types = [{ glob = "tools/icu/**/*.cue" }]
roots = ["cue.mod"]
auto-format = true
comment-token = "//"
language-servers = [ "cuelsp" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "cue", args = ["fmt", "-"] }
grammar = "cue"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-cylc"
scope = "source.cylc"
file-types = [{ glob = "tools/icu/**/*.cylc" }, { glob = "tools/icu/**/suite.rc" }]
comment-tokens = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "cylc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-d"
scope = "source.d"
file-types = [{ glob = "tools/icu/**/*.d" }, { glob = "tools/icu/**/*.dd" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "serve-d" ]
formatter = { command = "dfmt" }
grammar = "d"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-dart"
scope = "source.dart"
file-types = [{ glob = "tools/icu/**/*.dart" }]
roots = ["pubspec.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "dart" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "dart"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-dbml"
scope = "source.dbml"
file-types = [{ glob = "tools/icu/**/*.dbml" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dbml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-devicetree"
scope = "source.devicetree"
file-types = [{ glob = "tools/icu/**/*.dts" }, { glob = "tools/icu/**/*.dtsi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "devicetree"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-dhall"
scope = "source.dhall"
file-types = [{ glob = "tools/icu/**/*.dhall" }]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dhall-lsp-server" ]
formatter = { command = "dhall" , args = ["format"] }
grammar = "dhall"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-diff"
scope = "source.diff"
file-types = [{ glob = "tools/icu/**/*.diff" }, { glob = "tools/icu/**/*.patch" }, { glob = "tools/icu/**/*.rej" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "diff"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-docker-compose"
scope = "source.yaml.docker-compose"
roots = ["docker-compose.yaml", "docker-compose.yml"]
language-servers = [ "docker-compose-langserver", "yaml-language-server" ]
file-types = [{ glob = "tools/icu/**/docker-compose.yaml" }, { glob = "tools/icu/**/docker-compose.yml" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "docker-compose"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-dockerfile"
scope = "source.dockerfile"
roots = ["Dockerfile", "Containerfile"]
file-types = [{ glob = "tools/icu/**/*.Dockerfile" }, { glob = "tools/icu/**/Dockerfile" }, { glob = "tools/icu/**/Dockerfile.*" }, { glob = "tools/icu/**/*.dockerfile" }, { glob = "tools/icu/**/dockerfile" }, { glob = "tools/icu/**/dockerfile.*" }, { glob = "tools/icu/**/*.Containerfile" }, { glob = "tools/icu/**/Containerfile" }, { glob = "tools/icu/**/Containerfile.*" }, { glob = "tools/icu/**/*.containerfile" }, { glob = "tools/icu/**/containerfile" }, { glob = "tools/icu/**/containerfile.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "docker-langserver" ]
grammar = "dockerfile"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-dot"
scope = "source.dot"
file-types = [{ glob = "tools/icu/**/*.dot" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dot-language-server" ]
grammar = "dot"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-dtd"
scope = "source.dtd"
file-types = [{ glob = "tools/icu/**/*.dtd" }, { glob = "tools/icu/**/*.ent" }]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '<' = '>' }
grammar = "dtd"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-dune"
scope = "source.dune"
roots = ["dune-project"]
file-types = [{ glob = "tools/icu/**/dune-project" }, { glob = "tools/icu/**/dune" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dune"
auto-format = true
formatter = { command = "dune", args = ["format-dune-file"] }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-earthfile"
scope = "source.earthfile"
roots = ["Earthfile"]
file-types = [{ glob = "tools/icu/**/Earthfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["earthlyls"]
grammar = "earthfile"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-edoc"
scope = "source.edoc"
file-types = [{ glob = "tools/icu/**/*.edoc" }, { glob = "tools/icu/**/*.edoc.in" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "edoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-eex"
scope = "source.eex"
file-types = [{ glob = "tools/icu/**/*.eex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "eex"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ejs"
scope = "text.html.ejs"
file-types = [{ glob = "tools/icu/**/*.ejs" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ejs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-elisp"
scope = "source.elisp"
file-types = [{ glob = "tools/icu/**/*.el" }]
comment-tokens = [";"]
auto-pairs= { '(' = ')', '"' = '"' }
grammar = "elisp"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-elixir"
scope = "source.elixir"
file-types = [{ glob = "tools/icu/**/*.ex" }, { glob = "tools/icu/**/*.exs" }, { glob = "tools/icu/**/mix.lock" }]
shebangs = ["elixir"]
roots = ["mix.exs", "mix.lock"]
comment-token = "#"
language-servers = [ "elixir-ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elixir"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-elm"
scope = "source.elm"
file-types = [{ glob = "tools/icu/**/*.elm" }]
roots = ["elm.json"]
auto-format = true
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "elm-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elm"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-elvish"
scope = "source.elvish"
shebangs = ["elvish"]
file-types = [{ glob = "tools/icu/**/*.elv" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elvish" ]
grammar = "elvish"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-env"
scope = "source.env"
file-types = [{ glob = "tools/icu/**/.env" }, { glob = "tools/icu/**/.env.*" }, { glob = "tools/icu/**/.envrc" }, { glob = "tools/icu/**/.envrc.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "env"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-erb"
scope = "text.html.erb"
file-types = [{ glob = "tools/icu/**/*.erb" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "erb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-erlang"
scope = "source.erlang"
file-types = [{ glob = "tools/icu/**/*.erl" }, { glob = "tools/icu/**/*.hrl" }, { glob = "tools/icu/**/*.app" }, { glob = "tools/icu/**/rebar.config" }, { glob = "tools/icu/**/rebar.lock" }, { glob = "tools/icu/**/*.app.src" }]
roots = ["rebar.config"]
shebangs = ["escript"]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "erlang-ls", "elp" ]
grammar = "erlang"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-esdl"
scope = "source.esdl"
file-types = [{ glob = "tools/icu/**/*.esdl" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
roots = ["edgedb.toml"]
grammar = "esdl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-fidl"
scope = "source.fidl"
file-types = [{ glob = "tools/icu/**/*.fidl" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "fidl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-fish"
scope = "source.fish"
file-types = [{ glob = "tools/icu/**/*.fish" }]
shebangs = ["fish"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "fish_indent" }
grammar = "fish"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-forth"
scope = "source.forth"
file-types = [{ glob = "tools/icu/**/*.fs" }, { glob = "tools/icu/**/*.forth" }, { glob = "tools/icu/**/*.fth" }, { glob = "tools/icu/**/*.4th" }]
comment-token = "\\"
language-servers = [ "forth-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "forth"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-fortran"
scope = "source.fortran"
file-types = [{ glob = "tools/icu/**/*.f" }, { glob = "tools/icu/**/*.for" }, { glob = "tools/icu/**/*.f90" }, { glob = "tools/icu/**/*.f95" }, { glob = "tools/icu/**/*.f03" }]
roots = ["fpm.toml"]
comment-token = "!"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "fortls" ]
grammar = "fortran"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-fsharp"
scope = "source.fs"
roots = ["sln", "fsproj"]
file-types = [{ glob = "tools/icu/**/*.fs" }, { glob = "tools/icu/**/*.fsx" }, { glob = "tools/icu/**/*.fsi" }, { glob = "tools/icu/**/*.fsscript" }]
comment-token = "//"
block-comment-tokens = { start = "(*", end = "*)" }
indent = { unit = "  ", tab-width = 2 }
auto-format = true
language-servers = ["fsharp-ls"]
grammar = "fsharp"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gas"
scope = "source.gas"
file-types = [{ glob = "tools/icu/**/*.s" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gas"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gdscript"
scope = "source.gdscript"
file-types = [{ glob = "tools/icu/**/*.gd" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
formatter = { command = "gdformat", args = ["-"] }
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
grammar = "gdscript"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gemini"
scope = "source.gmi"
file-types = [{ glob = "tools/icu/**/*.gmi" }]
grammar = "gemini"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gherkin"
scope = "source.feature"
file-types = [{ glob = "tools/icu/**/*.feature" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gherkin"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-git-attributes"
scope = "source.gitattributes"
file-types = [{ glob = "tools/icu/**/.gitattributes" }]
comment-token = "#"
grammar = "git-attributes"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-git-commit"
scope = "git.commitmsg"
file-types = [{ glob = "tools/icu/**/COMMIT_EDITMSG" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "git-commit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-git-config"
scope = "source.gitconfig"
file-types = [{ glob = "tools/icu/**/.gitmodules" }, { glob = "tools/icu/**/.gitconfig" }, { glob = "tools/icu/**/.git/config" }, { glob = "tools/icu/**/.config/git/config" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-config"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-git-ignore"
scope = "source.gitignore"
file-types = [{ glob = "tools/icu/**/.gitignore_global" }, { glob = "tools/icu/**/git/ignore" }, { glob = "tools/icu/**/.ignore" }, { glob = "tools/icu/**/CODEOWNERS" }, { glob = "tools/icu/**/.config/helix/ignore" }, { glob = "tools/icu/**/.helix/ignore" }, { glob = "tools/icu/**/.*ignore" }]
comment-token = "#"
grammar = "git-ignore"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-git-rebase"
scope = "source.gitrebase"
file-types = [{ glob = "tools/icu/**/git-rebase-todo" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-rebase"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gjs"
scope = "source.gjs"
file-types = [{ glob = "tools/icu/**/*.gjs" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gjs"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gleam"
scope = "source.gleam"
file-types = [{ glob = "tools/icu/**/*.gleam" }]
roots = ["gleam.toml"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "gleam" ]
auto-format = true
grammar = "gleam"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-glimmer"
scope = "source.glimmer"
file-types = [{ glob = "tools/icu/**/{app,addon}/{components,templates}/*.hbs" }]
block-comment-tokens = { start = "{{!", end = "}}" }
roots = ["package.json", "ember-cli-build.js"]
grammar = "glimmer"
language-servers = ["ember-language-server"]
formatter = { command = "prettier", args = ['--parser', 'glimmer'] }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>', "'" = "'" }
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-glsl"
scope = "source.glsl"
file-types = [{ glob = "tools/icu/**/*.glsl" }, { glob = "tools/icu/**/*.vert" }, { glob = "tools/icu/**/*.tesc" }, { glob = "tools/icu/**/*.tese" }, { glob = "tools/icu/**/*.geom" }, { glob = "tools/icu/**/*.frag" }, { glob = "tools/icu/**/*.comp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "glsl_analyzer" ]
grammar = "glsl"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gn"
scope = "source.gn"
file-types = [{ glob = "tools/icu/**/*.gn" }, { glob = "tools/icu/**/*.gni" }]
roots = []
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "gn", args = ["format", "--stdin"] }
grammar = "gn"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-go"
scope = "source.go"
file-types = [{ glob = "tools/icu/**/*.go" }]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls", "golangci-lint-lsp" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "go", transport = "tcp", command = "dlv", args = ["dap"], port-arg = "-l 127.0.0.1:{}", templates = [{ name = "source", request = "launch", completion = [ { name = "entrypoint", completion = "filename", default = "." } ], args = { mode = "debug", program = "{0}" } }, { name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { mode = "exec", program = "{0}" } }, { name = "test", request = "launch", completion = [ { name = "tests", completion = "directory", default = "." } ], args = { mode = "test", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { mode = "local", processId = "{0}" } }, { name = "core", request = "launch", completion = [ { name = "binary", completion = "filename" }, { name = "core", completion = "filename" } ], args = { mode = "core", program = "{0}", coreFilePath = "{1}" } }] }
grammar = "go"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-godot-resource"
scope = "source.tscn"
file-types = [{ glob = "tools/icu/**/*.tscn" }, { glob = "tools/icu/**/*.tres" }, { glob = "tools/icu/**/*.godot" }, { glob = "tools/icu/**/*.gdextension" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "godot-resource"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gomod"
scope = "source.gomod"
file-types = [{ glob = "tools/icu/**/go.mod" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gomod"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gotmpl"
scope = "source.gotmpl"
file-types = [{ glob = "tools/icu/**/*.gotmpl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gotmpl"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gowork"
scope = "source.gowork"
file-types = [{ glob = "tools/icu/**/go.work" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gowork"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gpr"
scope = "source.gpr"
file-types = [{ glob = "tools/icu/**/*.gpr" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-gpr-language-server"]
grammar = "gpr"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-graphql"
scope = "source.graphql"
file-types = [{ glob = "tools/icu/**/*.gql" }, { glob = "tools/icu/**/*.graphql" }, { glob = "tools/icu/**/*.graphqls" }]
language-servers = [ "graphql-language-service" ]
comment-token = "#"
block-comment-tokens = { start = "\"\"\"", end = "\"\"\"" }
indent = { unit = "  ", tab-width = 2 }
grammar = "graphql"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-groovy"
language-id = "groovy"
scope = "source.groovy"
file-types = [{ glob = "tools/icu/**/*.gradle" }, { glob = "tools/icu/**/*.groovy" }, { glob = "tools/icu/**/*.jenkinsfile" }, { glob = "tools/icu/**/Jenkinsfile" }, { glob = "tools/icu/**/Jenkinsfile.*" }]
shebangs = ["groovy"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "groovy"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-gts"
scope = "source.gts"
file-types = [{ glob = "tools/icu/**/*.gts" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gts"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-hare"
scope = "source.hare"
file-types = [{ glob = "tools/icu/**/*.ha" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "hare"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-haskell"
scope = "source.haskell"
file-types = [{ glob = "tools/icu/**/*.hs" }, { glob = "tools/icu/**/*.hs-boot" }, { glob = "tools/icu/**/*.hsc" }]
roots = ["Setup.hs", "stack.yaml", "cabal.project"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "haskell-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-haskell-persistent"
scope = "source.persistentmodels"
file-types = [{ glob = "tools/icu/**/*.persistentmodels" }]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell-persistent"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-hcl"
scope = "source.hcl"
language-id = "terraform"
file-types = [{ glob = "tools/icu/**/*.hcl" }, { glob = "tools/icu/**/*.tf" }, { glob = "tools/icu/**/*.nomad" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "hcl"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-heex"
scope = "source.heex"
file-types = [{ glob = "tools/icu/**/*.heex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elixir-ls" ]
grammar = "heex"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-helm"
grammar = "helm"
scope = "source.helm"
roots = ["Chart.yaml"]
comment-token = "#"
language-servers = ["helm_ls"]
file-types = [{ glob = "tools/icu/**/templates/*.yaml" }, { glob = "tools/icu/**/templates/*.yml" }, { glob = "tools/icu/**/templates/_*.tpl" }, { glob = "tools/icu/**/templates/NOTES.txt" }]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-hocon"
scope = "source.conf"
file-types = [{ glob = "tools/icu/**/**/src/*/resources/**/*.conf" }, { glob = "tools/icu/**/*scalafmt*.conf" }, { glob = "tools/icu/**/*scalafix*.conf" }]
comment-token = "#"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "hocon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-hoon"
scope = "source.hoon"
file-types = [{ glob = "tools/icu/**/*.hoon" }]
comment-token = "::"
indent = { unit = "  ", tab-width = 2 }
grammar = "hoon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-hosts"
scope = "source.hosts"
file-types = [{ glob = "tools/icu/**/hosts" }]
comment-token = "#"
grammar = "hosts"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-html"
scope = "text.html.basic"
file-types = [{ glob = "tools/icu/**/*.html" }, { glob = "tools/icu/**/*.htm" }, { glob = "tools/icu/**/*.shtml" }, { glob = "tools/icu/**/*.xhtml" }, { glob = "tools/icu/**/*.xht" }, { glob = "tools/icu/**/*.jsp" }, { glob = "tools/icu/**/*.asp" }, { glob = "tools/icu/**/*.aspx" }, { glob = "tools/icu/**/*.jshtm" }, { glob = "tools/icu/**/*.volt" }, { glob = "tools/icu/**/*.rhtml" }, { glob = "tools/icu/**/*.cshtml" }]
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "vscode-html-language-server", "superhtml" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "html"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-hurl"
scope = "source.hurl"
file-types = [{ glob = "tools/icu/**/*.hurl" }]
comment-token = "#"
formatter = { command = "hurlfmt" }
indent = { unit = "  ", tab-width = 2 }
grammar = "hurl"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-hyprlang"
scope = "source.hyprlang"
roots = ["hyprland.conf"]
file-types = [{ glob = "tools/icu/**/hypr/*.conf" }]
comment-token = "#"
grammar = "hyprlang"
language-servers = ["hyprls"]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-idris"
scope = "source.idr"
file-types = [{ glob = "tools/icu/**/*.idr" }]
shebangs = []
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "idris2-lsp" ]
grammar = "idris"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-iex"
scope = "source.iex"
file-types = [{ glob = "tools/icu/**/*.iex" }]
comment-token = "#"
grammar = "iex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ini"
scope = "source.ini"
file-types = [{ glob = "tools/icu/**/*.ini" }, { glob = "tools/icu/**/*.service" }, { glob = "tools/icu/**/*.automount" }, { glob = "tools/icu/**/*.device" }, { glob = "tools/icu/**/*.mount" }, { glob = "tools/icu/**/*.path" }, { glob = "tools/icu/**/*.service" }, { glob = "tools/icu/**/*.slice" }, { glob = "tools/icu/**/*.socket" }, { glob = "tools/icu/**/*.swap" }, { glob = "tools/icu/**/*.target" }, { glob = "tools/icu/**/*.timer" }, { glob = "tools/icu/**/*.container" }, { glob = "tools/icu/**/*.volume" }, { glob = "tools/icu/**/*.kube" }, { glob = "tools/icu/**/*.network" }, { glob = "tools/icu/**/.editorconfig" }, { glob = "tools/icu/**/.npmrc" }, { glob = "tools/icu/**/npmrc" }, { glob = "tools/icu/**/rclone.conf" }, { glob = "tools/icu/**/*.properties" }, { glob = "tools/icu/**/*.cfg" }, { glob = "tools/icu/**/*.directory" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "ini"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-inko"
auto-format = true
scope = "source.inko"
file-types = [{ glob = "tools/icu/**/*.inko" }]
roots = ["inko.pkg"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "inko", args = ["fmt", "-"] }
grammar = "inko"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-janet"
scope = "source.janet"
file-types = [{ glob = "tools/icu/**/*.cgen" }, { glob = "tools/icu/**/*.janet" }, { glob = "tools/icu/**/*.jdn" }]
shebangs = ["janet"]
roots = ["project.janet"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "janet-format" }
grammar = "janet"
auto-pairs= { '"' = '"', '(' = ')', '[' = ']', '{' = '}', "`" = "`" }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-java"
scope = "source.java"
file-types = [{ glob = "tools/icu/**/*.java" }, { glob = "tools/icu/**/*.jav" }, { glob = "tools/icu/**/*.pde" }]
roots = ["pom.xml", "build.gradle", "build.gradle.kts"]
language-servers = [ "jdtls" ]
indent = { unit = "  ", tab-width = 2 }
comment-tokens = ["//"]
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "java"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-javascript"
scope = "source.js"
language-id = "javascript"
file-types = [{ glob = "tools/icu/**/*.js" }, { glob = "tools/icu/**/*.mjs" }, { glob = "tools/icu/**/*.cjs" }, { glob = "tools/icu/**/*.rules" }, { glob = "tools/icu/**/*.es6" }, { glob = "tools/icu/**/*.pac" }, { glob = "tools/icu/**/.node_repl_history" }, { glob = "tools/icu/**/jakefile" }]
shebangs = ["node"]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "node-debug2", transport = "stdio", quirks = { absolute-paths = true }, templates = [{ name = "source", request = "launch", completion = [ { name = "main", completion = "filename", default = "index.js" } ], args = { program = "{0}" } }] }
grammar = "javascript"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-jinja"
scope = "text.html.jinja"
file-types = [{ glob = "tools/icu/**/*.jinja" }, { glob = "tools/icu/**/*.jinja2" }, { glob = "tools/icu/**/*.j2" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jinja"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-jjdescription"
scope = "jj.description"
file-types = [{ glob = "tools/icu/**/*.jjdescription" }]
comment-token = "JJ:"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "jjdescription"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-jq"
scope = "source.jq"
file-types = [{ glob = "tools/icu/**/*.jq" }]
comment-token = "#"
language-servers = ["jq-lsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "jq"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-jsdoc"
scope = "source.jsdoc"
file-types = [{ glob = "tools/icu/**/*.jsdoc" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsdoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-json"
scope = "source.json"
file-types = [{ glob = "tools/icu/**/*.json" }, { glob = "tools/icu/**/*.arb" }, { glob = "tools/icu/**/*.ipynb" }, { glob = "tools/icu/**/*.geojson" }, { glob = "tools/icu/**/*.gltf" }, { glob = "tools/icu/**/*.webmanifest" }, { glob = "tools/icu/**/flake.lock" }, { glob = "tools/icu/**/.babelrc" }, { glob = "tools/icu/**/.bowerrc" }, { glob = "tools/icu/**/.jscrc" }, { glob = "tools/icu/**/*.js.map" }, { glob = "tools/icu/**/*.ts.map" }, { glob = "tools/icu/**/*.css.map" }, { glob = "tools/icu/**/.jslintrc" }, { glob = "tools/icu/**/*.jsonl" }, { glob = "tools/icu/**/*.jsonld" }, { glob = "tools/icu/**/.vuerc" }, { glob = "tools/icu/**/composer.lock" }, { glob = "tools/icu/**/.watchmanconfig" }, { glob = "tools/icu/**/*.avsc" }, { glob = "tools/icu/**/*.ldtk" }, { glob = "tools/icu/**/*.ldtkl" }, { glob = "tools/icu/**/.swift-format" }]
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "json"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-json5"
scope = "source.json5"
file-types = [{ glob = "tools/icu/**/*.json5" }]
language-servers = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "json5"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-jsonc"
scope = "source.json"
file-types = [{ glob = "tools/icu/**/*.jsonc" }, { glob = "tools/icu/**/tsconfig.json" }]
grammar = "jsonc"
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-jsonnet"
scope = "source.jsonnet"
file-types = [{ glob = "tools/icu/**/*.libsonnet" }, { glob = "tools/icu/**/*.jsonnet" }]
roots = ["jsonnetfile.json"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "jsonnet-language-server" ]
grammar = "jsonnet"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-jsx"
scope = "source.jsx"
language-id = "javascriptreact"
file-types = [{ glob = "tools/icu/**/*.jsx" }]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsx"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-julia"
scope = "source.julia"
file-types = [{ glob = "tools/icu/**/*.jl" }]
shebangs = ["julia"]
roots = ["Manifest.toml", "Project.toml"]
comment-token = "#"
block-comment-tokens = { start = "#=", end = "=#" }
language-servers = [ "julia" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "julia"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-just"
scope = "source.just"
file-types = [{ glob = "tools/icu/**/*.just" }, { glob = "tools/icu/**/justfile" }, { glob = "tools/icu/**/Justfile" }, { glob = "tools/icu/**/.justfile" }, { glob = "tools/icu/**/.Justfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "just"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-kdl"
scope = "source.kdl"
file-types = [{ glob = "tools/icu/**/*.kdl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "kdl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-koka"
scope = "source.koka"
file-types = [{ glob = "tools/icu/**/*.kk" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koka"]
grammar = "koka"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-kotlin"
scope = "source.kotlin"
file-types = [{ glob = "tools/icu/**/*.kt" }, { glob = "tools/icu/**/*.kts" }]
roots = ["settings.gradle", "settings.gradle.kts"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "kotlin-language-server" ]
grammar = "kotlin"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-koto"
scope = "source.koto"
file-types = [{ glob = "tools/icu/**/*.koto" }]
comment-token = "#"
block-comment-tokens = ["#-", "-#"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koto-ls"]
grammar = "koto"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-latex"
scope = "source.tex"
file-types = [{ glob = "tools/icu/**/*.tex" }, { glob = "tools/icu/**/*.sty" }, { glob = "tools/icu/**/*.cls" }, { glob = "tools/icu/**/*.Rd" }, { glob = "tools/icu/**/*.bbx" }, { glob = "tools/icu/**/*.cbx" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "latex"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ld"
scope = "source.ld"
file-types = [{ glob = "tools/icu/**/*.ld" }]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ld"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ldif"
scope = "source.ldif"
file-types = [{ glob = "tools/icu/**/*.ldif" }]
comment-token = "#"
grammar = "ldif"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-lean"
scope = "source.lean"
file-types = [{ glob = "tools/icu/**/*.lean" }]
roots = [ "lakefile.lean" ]
comment-token = "--"
block-comment-tokens = { start = "/-", end = "-/" }
language-servers = [ "lean" ]
indent = { unit = "  ", tab-width = 2 }
rulers = [101]
text-width = 100
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '⟨' = '⟩' }
grammar = "lean"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ledger"
scope = "source.ledger"
file-types = [{ glob = "tools/icu/**/*.ldg" }, { glob = "tools/icu/**/*.ledger" }, { glob = "tools/icu/**/*.journal" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "ledger"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-llvm"
scope = "source.llvm"
file-types = [{ glob = "tools/icu/**/*.ll" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-llvm-mir"
scope = "source.llvm_mir"
file-types = []
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-llvm-mir-yaml"
# TODO allow languages to point to their grammar like so:
#
#     grammar = "yaml"
scope = "source.yaml"
file-types = [{ glob = "tools/icu/**/*.mir" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir-yaml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-log"
scope = "source.log"
file-types = [{ glob = "tools/icu/**/*.log" }]
grammar = "log"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-lpf"
comment-token = "#"
scope = "source.lpf"
file-types = [{ glob = "tools/icu/**/*.lpf" }]
grammar = "lpf"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-lua"
scope = "source.lua"
file-types = [{ glob = "tools/icu/**/*.lua" }]
shebangs = ["lua", "luajit"]
roots = [".luarc.json", ".luacheckrc", ".stylua.toml", "selene.toml", ".git"]
comment-token = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "lua-language-server" ]
grammar = "lua"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-make"
scope = "source.make"
file-types = [{ glob = "tools/icu/**/Makefile" }, { glob = "tools/icu/**/makefile" }, { glob = "tools/icu/**/*.make" }, { glob = "tools/icu/**/*.mk" }, { glob = "tools/icu/**/*.mak" }, { glob = "tools/icu/**/GNUmakefile" }, { glob = "tools/icu/**/OCamlMakefile" }]
shebangs = ["make", "gmake"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "make"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-markdoc"
scope = "text.markdoc"
block-comment-tokens = { start = "<!--", end = "-->" }
file-types = [{ glob = "tools/icu/**/*.mdoc" }]
language-servers = [ "markdoc-ls" ]
grammar = "markdoc"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-markdown"
scope = "source.md"
file-types = [{ glob = "tools/icu/**/*.md" }, { glob = "tools/icu/**/*.livemd" }, { glob = "tools/icu/**/*.markdown" }, { glob = "tools/icu/**/*.mdx" }, { glob = "tools/icu/**/*.mkd" }, { glob = "tools/icu/**/*.mkdn" }, { glob = "tools/icu/**/*.mdwn" }, { glob = "tools/icu/**/*.mdown" }, { glob = "tools/icu/**/*.markdn" }, { glob = "tools/icu/**/*.mdtxt" }, { glob = "tools/icu/**/*.mdtext" }, { glob = "tools/icu/**/*.workbook" }, { glob = "tools/icu/**/PULLREQ_EDITMSG" }]
roots = [".marksman.toml"]
language-servers = [ "marksman", "markdown-oxide" ]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "markdown"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-markdown.inline"
scope = "source.markdown.inline"
file-types = []
grammar = "markdown.inline"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-matlab"
scope = "source.m"
file-types = [{ glob = "tools/icu/**/*.m" }]
comment-token = "%"
shebangs = ["octave-cli", "matlab"]
indent = { unit = "  ", tab-width = 2 }
grammar = "matlab"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-mermaid"
scope = "source.mermaid"
file-types = [{ glob = "tools/icu/**/*.mermaid" }, { glob = "tools/icu/**/*.mmd" }]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
grammar = "mermaid"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-meson"
scope = "source.meson"
file-types = [{ glob = "tools/icu/**/meson.build" }, { glob = "tools/icu/**/meson.options" }, { glob = "tools/icu/**/meson_options.txt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["mesonlsp"]
grammar = "meson"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-mint"
scope = "source.mint"
file-types = [{ glob = "tools/icu/**/*.mint" }]
shebangs = []
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "mint" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "mint"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-mojo"
scope = "source.mojo"
roots = ["__init__.mojo"]
file-types = [{ glob = "tools/icu/**/*.mojo" }, { glob = "tools/icu/**/*.🔥" }]
language-servers = [ "mojo-lsp" ]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "magic", args = ["run", "mojo" , "format", "-q", "-"]}
grammar = "mojo"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-move"
scope = "source.move"
roots = ["Move.toml"]
file-types = [{ glob = "tools/icu/**/*.move" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = []
grammar = "move"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-msbuild"
scope = "source.msbuild"
file-types = [{ glob = "tools/icu/**/*.proj" }, { glob = "tools/icu/**/*.vbproj" }, { glob = "tools/icu/**/*.csproj" }, { glob = "tools/icu/**/*.fsproj" }, { glob = "tools/icu/**/*.targets" }, { glob = "tools/icu/**/*.props" }]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "msbuild"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-nasm"
scope = "source.nasm"
file-types = [{ glob = "tools/icu/**/*.asm" }, { glob = "tools/icu/**/*.S" }, { glob = "tools/icu/**/*.nasm" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "nasm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-nestedtext"
scope = "text.nested"
file-types = [{ glob = "tools/icu/**/*.nt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nestedtext"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-nginx"
scope = "source.nginx"
file-types = [{ glob = "tools/icu/**/sites-available/*.conf" }, { glob = "tools/icu/**/sites-enabled/*.conf" }, { glob = "tools/icu/**/nginx.conf" }, { glob = "tools/icu/**/conf.d/*.conf" }]
roots = ["nginx.conf"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nginx"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-nickel"
scope = "source.nickel"
file-types = [{ glob = "tools/icu/**/*.ncl" }]
shebangs = []
comment-token = "#"
language-servers = [ "nls" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "nickel"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-nim"
scope = "source.nim"
file-types = [{ glob = "tools/icu/**/*.nim" }, { glob = "tools/icu/**/*.nims" }, { glob = "tools/icu/**/*.nimble" }]
shebangs = []
comment-token = "#"
block-comment-tokens = { start = "#[", end = "]#" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nimlangserver" ]
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '{' = '}' }
grammar = "nim"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-nix"
scope = "source.nix"
file-types = [{ glob = "tools/icu/**/*.nix" }]
shebangs = []
comment-token = "#"
language-servers = [ "nil", "nixd" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "nix"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-nu"
scope = "source.nu"
file-types = [{ glob = "tools/icu/**/*.nu" }, { glob = "tools/icu/**/*.nuon" }]
shebangs = ["nu"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nu-lsp" ]
grammar = "nu"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-nunjucks"
scope = "text.html.nunjucks"
file-types = [{ glob = "tools/icu/**/*.njk" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "nunjucks"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ocaml"
scope = "source.ocaml"
file-types = [{ glob = "tools/icu/**/*.ml" }]
shebangs = ["ocaml", "ocamlrun", "ocamlscript"]
block-comment-tokens = { start = "(*", end = "*)" }
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ocaml-interface"
scope = "source.ocaml.interface"
file-types = [{ glob = "tools/icu/**/*.mli" }]
shebangs = []
block-comment-tokens = { start = "(*", end = "*)" }
comment-token = "(**)"
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml-interface"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-odin"
auto-format = true
scope = "source.odin"
file-types = [{ glob = "tools/icu/**/*.odin" }]
roots = ["ols.json", "main.odin"]
language-servers = [ "ols" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "odinfmt", args = [ "-stdin" ] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "odin"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ohm"
scope = "source.ohm"
file-types = [{ glob = "tools/icu/**/*.ohm" }]
comment-token = "//"
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "ohm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-opencl"
scope = "source.cl"
file-types = [{ glob = "tools/icu/**/*.cl" }]
comment-token = "//"
language-servers = [ "clangd" ]
grammar = "opencl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-openscad"
scope = "source.openscad"
file-types = [{ glob = "tools/icu/**/*.scad" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "openscad-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "openscad"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-org"
scope = "source.org"
file-types = [{ glob = "tools/icu/**/*.org" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "org"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-pascal"
scope = "source.pascal"
file-types = [{ glob = "tools/icu/**/*.pas" }, { glob = "tools/icu/**/*.pp" }, { glob = "tools/icu/**/*.inc" }, { glob = "tools/icu/**/*.lpr" }, { glob = "tools/icu/**/*.lfm" }]
comment-token = "//"
block-comment-tokens = { start = "{", end = "}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "pasls" ]
grammar = "pascal"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-passwd"
scope = "source.passwd"
file-types = [{ glob = "tools/icu/**/passwd" }]
grammar = "passwd"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-pem"
scope = "source.pem"
file-types = [{ glob = "tools/icu/**/*.pem" }, { glob = "tools/icu/**/*.cert" }, { glob = "tools/icu/**/*.crt" }]
grammar = "pem"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-perl"
scope = "source.perl"
file-types = [{ glob = "tools/icu/**/*.pl" }, { glob = "tools/icu/**/*.pm" }, { glob = "tools/icu/**/*.t" }, { glob = "tools/icu/**/*.psgi" }, { glob = "tools/icu/**/*.raku" }, { glob = "tools/icu/**/*.rakumod" }, { glob = "tools/icu/**/*.rakutest" }, { glob = "tools/icu/**/*.rakudoc" }, { glob = "tools/icu/**/*.nqp" }, { glob = "tools/icu/**/*.p6" }, { glob = "tools/icu/**/*.pl6" }, { glob = "tools/icu/**/*.pm6" }]
shebangs = ["perl"]
comment-token = "#"
language-servers = [ "perlnavigator" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "perl"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-pest"
scope = "source.pest"
file-types = [{ glob = "tools/icu/**/*.pest" }]
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pest-language-server"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "pest"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-php"
scope = "source.php"
file-types = [{ glob = "tools/icu/**/*.php" }, { glob = "tools/icu/**/*.inc" }, { glob = "tools/icu/**/*.php4" }, { glob = "tools/icu/**/*.php5" }, { glob = "tools/icu/**/*.phtml" }, { glob = "tools/icu/**/*.ctp" }]
shebangs = ["php"]
roots = ["composer.json", "index.php"]
comment-token = "//"
language-servers = [ "intelephense" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "php"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-php-only"
scope = "source.php-only"
file-types = []
indent = { unit = "  ", tab-width = 2 }
roots = ["composer.json", "index.php"]
grammar = "php-only"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-pkgbuild"
scope = "source.bash"
file-types = [{ glob = "tools/icu/**/PKGBUILD" }]
comment-token = "#"
grammar = "pkgbuild"
language-servers = [
  "pkgbuild-language-server",
  { except-features = [
    "diagnostics",
  ], name = "bash-language-server" },
]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-pkl"
scope = "source.pkl"
file-types = [{ glob = "tools/icu/**/*.pkl" }, { glob = "tools/icu/**/*.pcf" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "pkl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-po"
scope = "source.po"
file-types = [{ glob = "tools/icu/**/*.po" }, { glob = "tools/icu/**/*.pot" }]
comment-token = "#"
grammar = "po"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-pod"
scope = "source.pod"
file-types = [{ glob = "tools/icu/**/*.pod" }]
grammar = "pod"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ponylang"
scope = "source.pony"
file-types = [{ glob = "tools/icu/**/*.pony" }]
roots = ["corral.json", "lock.json"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "ponylang"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-powershell"
scope = "source.powershell"
file-types = [{ glob = "tools/icu/**/*.ps1" }, { glob = "tools/icu/**/*.psm1" }, { glob = "tools/icu/**/*.psd1" }, { glob = "tools/icu/**/*.pscc" }, { glob = "tools/icu/**/*.psrc" }]
shebangs = [ "pwsh", "powershell" ]
comment-token = '#'
block-comment-tokens = { start = "<#", end = "#>" }
indent = { unit = "  ", tab-width = 2 }
grammar = "powershell"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-prisma"
scope = "source.prisma"
file-types = [{ glob = "tools/icu/**/*.prisma" }]
roots = ["package.json"]
comment-token = "//"
language-servers = [ "prisma-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "prisma"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-prolog"
scope = "source.prolog"
file-types = [{ glob = "tools/icu/**/*.pl" }, { glob = "tools/icu/**/*.prolog" }]
shebangs = ["swipl"]
comment-token = "%"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "swipl" ]
grammar = "prolog"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-protobuf"
scope = "source.proto"
file-types = [{ glob = "tools/icu/**/*.proto" }]
language-servers = [ "bufls", "pbkit" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "protobuf"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-prql"
scope = "source.prql"
file-types = [{ glob = "tools/icu/**/*.prql" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "prql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-purescript"
scope = "source.purescript"
file-types = [{ glob = "tools/icu/**/*.purs" }]
roots = ["spago.yaml", "spago.dhall", "bower.json"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "purescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "purs-tidy", args = ["format"] }
grammar = "purescript"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-python"
scope = "source.python"
file-types = [{ glob = "tools/icu/**/*.py" }, { glob = "tools/icu/**/*.pyi" }, { glob = "tools/icu/**/*.py3" }, { glob = "tools/icu/**/*.pyw" }, { glob = "tools/icu/**/*.ptl" }, { glob = "tools/icu/**/*.rpy" }, { glob = "tools/icu/**/*.cpy" }, { glob = "tools/icu/**/*.ipy" }, { glob = "tools/icu/**/*.pyt" }, { glob = "tools/icu/**/.python_history" }, { glob = "tools/icu/**/.pythonstartup" }, { glob = "tools/icu/**/.pythonrc" }, { glob = "tools/icu/**/SConstruct" }, { glob = "tools/icu/**/SConscript" }]
shebangs = ["python", "uv"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["ruff", "jedi", "pylsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "python"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-qml"
scope = "source.qml"
file-types = [{ glob = "tools/icu/**/*.qml" }]
language-servers = [ "qmlls" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "qml"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-quint"
scope = "source.quint"
file-types = [{ glob = "tools/icu/**/*.qnt" }]
language-servers = ["quint-language-server"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "quint"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-r"
scope = "source.r"
file-types = [{ glob = "tools/icu/**/*.r" }, { glob = "tools/icu/**/*.R" }, { glob = "tools/icu/**/.Rprofile" }, { glob = "tools/icu/**/Rprofile.site" }, { glob = "tools/icu/**/.RHistory" }]
shebangs = ["r", "R"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "r" ]
grammar = "r"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-racket"
scope = "source.racket"
file-types = [{ glob = "tools/icu/**/*.rkt" }, { glob = "tools/icu/**/*.rktd" }, { glob = "tools/icu/**/*.rktl" }, { glob = "tools/icu/**/*.scrbl" }]
shebangs = ["racket"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "#|", end = "|#" }
language-servers = [ "racket" ]
grammar = "racket"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-regex"
scope = "source.regex"
file-types = [{ glob = "tools/icu/**/*.regex" }, { glob = "tools/icu/**/.Rbuildignore" }]
grammar = "regex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-rego"
scope = "source.rego"
file-types = [{ glob = "tools/icu/**/*.rego" }]
auto-format = true
comment-token = "#"
language-servers = [ "regols" ]
grammar = "rego"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-rescript"
scope = "source.rescript"
file-types = [{ glob = "tools/icu/**/*.res" }]
roots = ["bsconfig.json"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "rescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "rescript"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-rmarkdown"
scope = "source.rmd"
language-id = "rmd"
file-types = [{ glob = "tools/icu/**/*.rmd" }, { glob = "tools/icu/**/*.Rmd" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "rmarkdown"
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "r" ]

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-robot"
scope = "source.robot"
file-types = [{ glob = "tools/icu/**/*.robot" }, { glob = "tools/icu/**/*.resource" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "robotframework_ls" ]
grammar = "robot"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ron"
scope = "source.ron"
file-types = [{ glob = "tools/icu/**/*.ron" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ron"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-rst"
scope = "source.rst"
comment-token = ".."
file-types = [{ glob = "tools/icu/**/*.rst" }]
grammar = "rst"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ruby"
scope = "source.ruby"
file-types = [{ glob = "tools/icu/**/*.rb" }, { glob = "tools/icu/**/*.rake" }, { glob = "tools/icu/**/*.irb" }, { glob = "tools/icu/**/*.gemspec" }, { glob = "tools/icu/**/*.rabl" }, { glob = "tools/icu/**/*.jbuilder" }, { glob = "tools/icu/**/*.jb" }, { glob = "tools/icu/**/*.podspec" }, { glob = "tools/icu/**/*.rjs" }, { glob = "tools/icu/**/*.rbi" }, { glob = "tools/icu/**/*.rbs" }, { glob = "tools/icu/**/rakefile" }, { glob = "tools/icu/**/gemfile" }, { glob = "tools/icu/**/Rakefile" }, { glob = "tools/icu/**/Gemfile" }, { glob = "tools/icu/**/Podfile" }, { glob = "tools/icu/**/Vagrantfile" }, { glob = "tools/icu/**/Brewfile" }, { glob = "tools/icu/**/Guardfile" }, { glob = "tools/icu/**/Capfile" }, { glob = "tools/icu/**/Cheffile" }, { glob = "tools/icu/**/Hobofile" }, { glob = "tools/icu/**/Appraisals" }, { glob = "tools/icu/**/Rantfile" }, { glob = "tools/icu/**/Berksfile" }, { glob = "tools/icu/**/Berksfile.lock" }, { glob = "tools/icu/**/Thorfile" }, { glob = "tools/icu/**/Puppetfile" }, { glob = "tools/icu/**/Fastfile" }, { glob = "tools/icu/**/Appfile" }, { glob = "tools/icu/**/Deliverfile" }, { glob = "tools/icu/**/Matchfile" }, { glob = "tools/icu/**/Scanfile" }, { glob = "tools/icu/**/Snapfile" }, { glob = "tools/icu/**/Gymfile" }]
shebangs = ["ruby"]
comment-token = "#"
language-servers = [ "solargraph" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "ruby"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-rust"
scope = "source.rust"
file-types = [{ glob = "tools/icu/**/*.rs" }]
roots = ["Cargo.toml", "Cargo.lock"]
shebangs = ["rust-script", "cargo"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
  { start = "/*!", end = "*/" },
]
language-servers = [ "rust-analyzer" ]
indent = { unit = "  ", tab-width = 2 }
persistent-diagnostic-sources = ["rustc", "clippy"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}" } }, { name = "binary (terminal)", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}", runInTerminal = true } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "rust"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-sage"
scope = "source.sage"
file-types = [{ glob = "tools/icu/**/*.sage" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "sage"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-scala"
scope = "source.scala"
roots = ["build.sbt", "build.sc", "build.gradle", "build.gradle.kts", "pom.xml", ".scala-build"]
file-types = [{ glob = "tools/icu/**/*.scala" }, { glob = "tools/icu/**/*.sbt" }, { glob = "tools/icu/**/*.sc" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "metals" ]
grammar = "scala"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-scheme"
scope = "source.scheme"
file-types = [{ glob = "tools/icu/**/*.ss" }, { glob = "tools/icu/**/*.scm" }]
shebangs = ["scheme", "guile", "chicken"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "scheme"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-scss"
scope = "source.scss"
file-types = [{ glob = "tools/icu/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "scss"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-slint"
scope = "source.slint"
file-types = [{ glob = "tools/icu/**/*.slint" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "slint-lsp" ]
grammar = "slint"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-smali"
scope = "source.smali"
file-types = [{ glob = "tools/icu/**/*.smali" }]
comment-token = "#"
roots = []
indent = { unit = "  ", tab-width = 2 }
grammar = "smali"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-smithy"
scope = "source.smithy"
file-types = [{ glob = "tools/icu/**/*.smithy" }]
roots = ["smithy-build.json"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cs" ]
grammar = "smithy"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-sml"
scope = "source.sml"
file-types = [{ glob = "tools/icu/**/*.sml" }]
block-comment-tokens = { start = "(*", end = "*)" }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "sml"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-snakemake"
scope = "source.snakemake"
roots = ["Snakefile", "config.yaml", "environment.yaml", "workflow/"]
file-types = [{ glob = "tools/icu/**/*.smk" }, { glob = "tools/icu/**/Snakefile" }]
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pylsp" ]
formatter= { command = "snakefmt", args = ["-"] }
grammar = "snakemake"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-solidity"
scope = "source.sol"
file-types = [{ glob = "tools/icu/**/*.sol" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "solc" ]
grammar = "solidity"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-spade"
scope = "source.spade"
roots = ["swim.toml"]
file-types = [{ glob = "tools/icu/**/*.spade" }]
comment-tokens = ["//", "///"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
language-servers = [ "spade-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '<' = '>' }
grammar = "spade"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-spicedb"
scope = "source.zed"
file-types = [{ glob = "tools/icu/**/*.zed" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "spicedb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-sql"
scope = "source.sql"
file-types = [{ glob = "tools/icu/**/*.sql" }, { glob = "tools/icu/**/*.dsql" }]
comment-token = "--"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "sql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-sshclientconfig"
scope = "source.sshclientconfig"
file-types = [{ glob = "tools/icu/**/.ssh/config" }, { glob = "tools/icu/**//etc/ssh/ssh_config" }, { glob = "tools/icu/**/ssh_config.d/*.conf" }]
comment-token = "#"
grammar = "sshclientconfig"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-starlark"
scope = "source.starlark"
file-types = [{ glob = "tools/icu/**/*.bzl" }, { glob = "tools/icu/**/*.bazel" }, { glob = "tools/icu/**/*.star" }, { glob = "tools/icu/**/BUILD" }, { glob = "tools/icu/**/BUILD.*" }, { glob = "tools/icu/**/Tiltfile" }, { glob = "tools/icu/**/WORKSPACE" }, { glob = "tools/icu/**/WORKSPACE.bzlmod" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "starlark"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-strace"
scope = "source.strace"
file-types = [{ glob = "tools/icu/**/*.strace" }]
grammar = "strace"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-supercollider"
scope = "source.supercollider"
file-types = [{ glob = "tools/icu/**/*.scd" }, { glob = "tools/icu/**/*.sc" }, { glob = "tools/icu/**/*.quark" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "supercollider"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-svelte"
scope = "source.svelte"
file-types = [{ glob = "tools/icu/**/*.svelte" }]
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "svelteserver" ]
grammar = "svelte"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-sway"
scope = "source.sway"
file-types = [{ glob = "tools/icu/**/*.sw" }]
language-servers = [ "forc" ]
roots = ["Forc.toml", "Forc.lock"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
grammar = "sway"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-swift"
scope = "source.swift"
file-types = [{ glob = "tools/icu/**/*.swift" }, { glob = "tools/icu/**/*.swiftinterface" }]
roots = [ "Package.swift" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
formatter = { command = "swift-format" }
language-servers = [ "sourcekit-lsp" ]
grammar = "swift"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-t32"
scope = "source.t32"
file-types = [{ glob = "tools/icu/**/*.cmm" }, { glob = "tools/icu/**/*.t32" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "t32"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-tablegen"
scope = "source.tablegen"
file-types = [{ glob = "tools/icu/**/*.td" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "tablegen"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-tact"
scope = "source.tact"
file-types = [{ glob = "tools/icu/**/*.tact" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "tact"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-task"
scope = "source.task"
file-types = [{ glob = "tools/icu/**/*.task" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "task"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-tcl"
scope = "source.tcl"
file-types = [{ glob = "tools/icu/**/*.tcl" }]
shebangs = [ "tclsh", "tclish", "jimsh", "wish" ]
comment-token = '#'
grammar = "tcl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-teal"
scope = "source.tl"
file-types = [{ glob = "tools/icu/**/*.tl" }]
comment-tokens = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
roots = [ "tlconfig.lua" ]
language-servers = [ "teal-lsp" ]
grammar = "teal"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-templ"
scope = "source.templ"
file-types = [{ glob = "tools/icu/**/*.templ" }]
roots = ["go.work", "go.mod"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "templ" ]
grammar = "templ"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-textproto"
file-types = [{ glob = "tools/icu/**/*.txtpb" }, { glob = "tools/icu/**/*.textpb" }, { glob = "tools/icu/**/*.textproto" }]
comment-token = "#"
scope = "source.textproto"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "txtpbfmt" }
auto-format = true
grammar = "textproto"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-tfvars"
scope = "source.tfvars"
language-id = "terraform-vars"
file-types = [{ glob = "tools/icu/**/*.tfvars" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "tfvars"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-thrift"
scope = "source.thrift"
file-types = [{ glob = "tools/icu/**/*.thrift" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "thrift"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-todotxt"
scope = "text.todotxt"
file-types = [{ glob = "tools/icu/**/*.todo.txt" }, { glob = "tools/icu/**/*.todotxt" }]
formatter = { command = "sort" }
auto-format = true
grammar = "todotxt"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-toml"
scope = "source.toml"
file-types = [{ glob = "tools/icu/**/*.toml" }, { glob = "tools/icu/**/pdm.lock" }, { glob = "tools/icu/**/poetry.lock" }, { glob = "tools/icu/**/Cargo.lock" }, { glob = "tools/icu/**/uv.lock" }]
comment-token = "#"
language-servers = [ "taplo" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "toml"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-tsq"
scope = "source.tsq"
file-types = [{ glob = "tools/icu/**/queries/*.scm" }, { glob = "tools/icu/**/injections.scm" }, { glob = "tools/icu/**/highlights.scm" }, { glob = "tools/icu/**/indents.scm" }, { glob = "tools/icu/**/textobjects.scm" }, { glob = "tools/icu/**/locals.scm" }, { glob = "tools/icu/**/tags.scm" }]
comment-token = ";"
language-servers = ["ts_query_ls"]
grammar = "tsq"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-tsx"
scope = "source.tsx"
language-id = "typescriptreact"
file-types = [{ glob = "tools/icu/**/*.tsx" }]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "tsx"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-twig"
scope = "source.twig"
file-types = [{ glob = "tools/icu/**/*.twig" }]
block-comment-tokens = { start = "{#", end = "#}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "twig"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-typescript"
scope = "source.ts"
language-id = "typescript"
file-types = [{ glob = "tools/icu/**/*.ts" }, { glob = "tools/icu/**/*.mts" }, { glob = "tools/icu/**/*.cts" }]
shebangs = ["deno", "bun", "ts-node"]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "typescript"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-typespec"
scope = "source.typespec"
language-id = "typespec"
file-types = [{ glob = "tools/icu/**/*.tsp" }]
roots = ["tspconfig.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["typespec"]
indent = { unit = "  ", tab-width = 2 }
grammar = "typespec"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-typst"
scope = "source.typst"
file-types = [{ glob = "tools/icu/**/*.typst" }, { glob = "tools/icu/**/*.typ" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["tinymist", "typst-lsp"]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '$' = '$', '"' = '"' }
grammar = "typst"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-ungrammar"
scope = "source.ungrammar"
file-types = [{ glob = "tools/icu/**/*.ungram" }, { glob = "tools/icu/**/*.ungrammar" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "ungrammar"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-unison"
scope = "source.unison"
file-types = [{ glob = "tools/icu/**/*.u" }]
shebangs = []
auto-format = true
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
grammar = "unison"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-unknown"
scope = "text.plain"
file-types = [{ glob = "*.foo" }, { glob = "*.txt" }]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-uxntal"
scope = "source.tal"
file-types = [{ glob = "tools/icu/**/*.tal" }]
auto-format = true
block-comment-tokens = { start = "(", end = ")" }
grammar = "uxntal"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-v"
scope = "source.v"
file-types = [{ glob = "tools/icu/**/*.v" }, { glob = "tools/icu/**/*.vv" }, { glob = "tools/icu/**/*.vsh" }]
shebangs = ["v run"]
roots = ["v.mod"]
language-servers = [ "vlang-language-server" ]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "v"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-vala"
scope = "source.vala"
file-types = [{ glob = "tools/icu/**/*.vala" }, { glob = "tools/icu/**/*.vapi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vala-language-server" ]
grammar = "vala"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-vento"
scope = "text.html.vto"
file-types = [{ glob = "tools/icu/**/*.vto" }]
block-comment-tokens = { start = "{{#", end = "#}}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "vento"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-verilog"
scope = "source.verilog"
file-types = [{ glob = "tools/icu/**/*.v" }, { glob = "tools/icu/**/*.vh" }, { glob = "tools/icu/**/*.sv" }, { glob = "tools/icu/**/*.svh" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "svlangserver" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "verilog"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-vhdl"
scope = "source.vhdl"
file-types = [{ glob = "tools/icu/**/*.vhd" }, { glob = "tools/icu/**/*.vhdl" }]
comment-token = "--"
language-servers = [ "vhdl_ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "vhdl"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-vhs"
scope = "source.vhs"
file-types = [{ glob = "tools/icu/**/*.tape" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "vhs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-vue"
scope = "source.vue"
file-types = [{ glob = "tools/icu/**/*.vue" }]
roots = ["package.json"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vuels" ]
grammar = "vue"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-wast"
scope = "source.wast"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "tools/icu/**/*.wast" }]
grammar = "wast"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-wat"
scope = "source.wat"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "tools/icu/**/*.wat" }]
grammar = "wat"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-webc"
scope = "text.html.webc"
file-types = [{ glob = "tools/icu/**/*.webc" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "webc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-wgsl"
scope = "source.wgsl"
file-types = [{ glob = "tools/icu/**/*.wgsl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "wgsl_analyzer" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "wgsl"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-wit"
scope = "source.wit"
file-types = [{ glob = "tools/icu/**/*.wit" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "wit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-wren"
scope = "source.wren"
file-types = [{ glob = "tools/icu/**/*.wren" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "wren"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-xit"
scope = "source.xit"
file-types = [{ glob = "tools/icu/**/*.xit" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "xit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-xml"
scope = "source.xml"
file-types = [{ glob = "tools/icu/**/*.xml" }, { glob = "tools/icu/**/*.mobileconfig" }, { glob = "tools/icu/**/*.plist" }, { glob = "tools/icu/**/*.xib" }, { glob = "tools/icu/**/*.storyboard" }, { glob = "tools/icu/**/*.svg" }, { glob = "tools/icu/**/*.xsd" }, { glob = "tools/icu/**/*.gml" }, { glob = "tools/icu/**/*.xaml" }, { glob = "tools/icu/**/*.gir" }, { glob = "tools/icu/**/*.rss" }, { glob = "tools/icu/**/*.atom" }, { glob = "tools/icu/**/*.opml" }, { glob = "tools/icu/**/*.policy" }, { glob = "tools/icu/**/*.ascx" }, { glob = "tools/icu/**/*.axml" }, { glob = "tools/icu/**/*.axaml" }, { glob = "tools/icu/**/*.bpmn" }, { glob = "tools/icu/**/*.cpt" }, { glob = "tools/icu/**/*.csl" }, { glob = "tools/icu/**/*.csproj.user" }, { glob = "tools/icu/**/*.dita" }, { glob = "tools/icu/**/*.ditamap" }, { glob = "tools/icu/**/*.dtml" }, { glob = "tools/icu/**/*.fxml" }, { glob = "tools/icu/**/*.iml" }, { glob = "tools/icu/**/*.isml" }, { glob = "tools/icu/**/*.jmx" }, { glob = "tools/icu/**/*.launch" }, { glob = "tools/icu/**/*.menu" }, { glob = "tools/icu/**/*.mxml" }, { glob = "tools/icu/**/*.nuspec" }, { glob = "tools/icu/**/*.osc" }, { glob = "tools/icu/**/*.osm" }, { glob = "tools/icu/**/*.pt" }, { glob = "tools/icu/**/*.publishsettings" }, { glob = "tools/icu/**/*.pubxml" }, { glob = "tools/icu/**/*.pubxml.user" }, { glob = "tools/icu/**/*.rbxlx" }, { glob = "tools/icu/**/*.rbxmx" }, { glob = "tools/icu/**/*.rng" }, { glob = "tools/icu/**/*.shproj" }, { glob = "tools/icu/**/*.tld" }, { glob = "tools/icu/**/*.tmx" }, { glob = "tools/icu/**/*.vbproj.user" }, { glob = "tools/icu/**/*.vcxproj" }, { glob = "tools/icu/**/*.vcxproj.filters" }, { glob = "tools/icu/**/*.wsdl" }, { glob = "tools/icu/**/*.wxi" }, { glob = "tools/icu/**/*.wxs" }, { glob = "tools/icu/**/*.xbl" }, { glob = "tools/icu/**/*.xlf" }, { glob = "tools/icu/**/*.xliff" }, { glob = "tools/icu/**/*.xpdl" }, { glob = "tools/icu/**/*.xul" }, { glob = "tools/icu/**/*.xoml" }, { glob = "tools/icu/**/*.musicxml" }, { glob = "tools/icu/**/*.glif" }, { glob = "tools/icu/**/*.ui" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "xml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-xtc"
scope = "source.xtc"
file-types = [{ glob = "tools/icu/**/*.xtc" }, { glob = "tools/icu/**/*.xpc" }, { glob = "tools/icu/**/*.xoa" }]
comment-token = ";"
grammar = "xtc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-yaml"
scope = "source.yaml"
file-types = [{ glob = "tools/icu/**/*.yml" }, { glob = "tools/icu/**/*.yaml" }, { glob = "tools/icu/**/.prettierrc" }, { glob = "tools/icu/**/.clangd" }, { glob = "tools/icu/**/.clang-format" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "yaml-language-server", "ansible-language-server" ]
grammar = "yaml"

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-yuck"
scope = "source.yuck"
file-types = [{ glob = "tools/icu/**/*.yuck" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "yuck"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-icu-**-zig"
scope = "source.zig"
file-types = [{ glob = "tools/icu/**/*.zig" }, { glob = "tools/icu/**/*.zon" }]
roots = ["build.zig"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
language-servers = [ "zls" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "zig" , args = ["fmt", "--stdin"] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "zig"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ada"
scope = "source.ada"
file-types = [{ glob = "tools/msvs/**/*.adb" }, { glob = "tools/msvs/**/*.ads" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-language-server"]
grammar = "ada"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-adl"
scope = "source.adl"
file-types = [{ glob = "tools/msvs/**/*.adl" }]
roots = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '<' = '>' }
grammar = "adl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-agda"
scope = "source.agda"
file-types = [{ glob = "tools/msvs/**/*.agda" }]
roots = []
comment-token = "--"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', "'" = "'", '{' = '}', '(' = ')', '[' = ']' }
grammar = "agda"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-amber"
scope = "source.ab"
file-types = [{ glob = "tools/msvs/**/*.ab" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "amber"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-astro"
scope = "source.astro"
file-types = [{ glob = "tools/msvs/**/*.astro" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "astro"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-awk"
scope = "source.awk"
file-types = [{ glob = "tools/msvs/**/*.awk" }, { glob = "tools/msvs/**/*.gawk" }, { glob = "tools/msvs/**/*.nawk" }, { glob = "tools/msvs/**/*.mawk" }]
comment-token = "#"
language-servers = [ "awk-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "awk"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-bash"
scope = "source.bash"
file-types = [{ glob = "tools/msvs/**/*.sh" }, { glob = "tools/msvs/**/*.bash" }, { glob = "tools/msvs/**/*.ash" }, { glob = "tools/msvs/**/*.dash" }, { glob = "tools/msvs/**/*.ksh" }, { glob = "tools/msvs/**/*.mksh" }, { glob = "tools/msvs/**/*.zsh" }, { glob = "tools/msvs/**/*.zshenv" }, { glob = "tools/msvs/**/*.zlogin" }, { glob = "tools/msvs/**/*.zlogout" }, { glob = "tools/msvs/**/*.zprofile" }, { glob = "tools/msvs/**/*.zshrc" }, { glob = "tools/msvs/**/*.eclass" }, { glob = "tools/msvs/**/*.ebuild" }, { glob = "tools/msvs/**/*.bazelrc" }, { glob = "tools/msvs/**/*.Renviron" }, { glob = "tools/msvs/**/*.zsh-theme" }, { glob = "tools/msvs/**/*.cshrc" }, { glob = "tools/msvs/**/*.tcshrc" }, { glob = "tools/msvs/**/*.bashrc_Apple_Terminal" }, { glob = "tools/msvs/**/*.zshrc_Apple_Terminal" }, { glob = "tools/msvs/**/i3/config" }, { glob = "tools/msvs/**/sway/config" }, { glob = "tools/msvs/**/tmux.conf" }, { glob = "tools/msvs/**/.bash_history" }, { glob = "tools/msvs/**/.bash_login" }, { glob = "tools/msvs/**/.bash_logout" }, { glob = "tools/msvs/**/.bash_profile" }, { glob = "tools/msvs/**/.bashrc" }, { glob = "tools/msvs/**/.profile" }, { glob = "tools/msvs/**/.zshenv" }, { glob = "tools/msvs/**/.zlogin" }, { glob = "tools/msvs/**/.zlogout" }, { glob = "tools/msvs/**/.zprofile" }, { glob = "tools/msvs/**/.zshrc" }, { glob = "tools/msvs/**/.zimrc" }, { glob = "tools/msvs/**/APKBUILD" }, { glob = "tools/msvs/**/.bash_aliases" }, { glob = "tools/msvs/**/.Renviron" }, { glob = "tools/msvs/**/.xprofile" }, { glob = "tools/msvs/**/.xsession" }, { glob = "tools/msvs/**/.xsessionrc" }, { glob = "tools/msvs/**/.yashrc" }, { glob = "tools/msvs/**/.yash_profile" }, { glob = "tools/msvs/**/.hushlogin" }]
shebangs = ["sh", "bash", "dash", "zsh"]
comment-token = "#"
language-servers = [ "bash-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "bash"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-bass"
scope = "source.bass"
file-types = [{ glob = "tools/msvs/**/*.bass" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bass" ]
grammar = "bass"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-beancount"
scope = "source.beancount"
file-types = [{ glob = "tools/msvs/**/*.beancount" }, { glob = "tools/msvs/**/*.bean" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "beancount"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-bibtex"
scope = "source.bib"
file-types = [{ glob = "tools/msvs/**/*.bib" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter= { command = 'bibtex-tidy', args = [
  "-",
  "--curly",
  "--drop-all-caps",
  "--remove-empty-fields",
  "--sort-fields",
  "--sort=year,author,id",
  "--strip-enclosing-braces",
  "--trailing-commas",
] }
grammar = "bibtex"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-bicep"
scope = "source.bicep"
file-types = [{ glob = "tools/msvs/**/*.bicep" }, { glob = "tools/msvs/**/*.bicepparam" }]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "bicep-langserver" ]
grammar = "bicep"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-bitbake"
language-servers = [ "bitbake-language-server" ]
scope = "source.bitbake"
file-types = [{ glob = "tools/msvs/**/*.bb" }, { glob = "tools/msvs/**/*.bbappend" }, { glob = "tools/msvs/**/*.bbclass" }, { glob = "tools/msvs/**/conf/*.conf" }, { glob = "tools/msvs/**/conf/*/*.{inc,conf}" }, { glob = "tools/msvs/**/recipe-*/*/*.inc" }]
comment-token = "#"
grammar = "bitbake"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-blade"
scope = "source.blade.php"
file-types = [{ glob = "tools/msvs/**/*.blade.php" }, { glob = "tools/msvs/**/*.blade" }]
roots = ["composer.json", "index.php"]
grammar = "blade"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-blueprint"
scope = "source.blueprint"
file-types = [{ glob = "tools/msvs/**/*.blp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "blueprint-compiler" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "blueprint"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-c"
scope = "source.c"
file-types = [{ glob = "tools/msvs/**/*.c" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "c"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-c-sharp"
scope = "source.csharp"
file-types = [{ glob = "tools/msvs/**/*.cs" }, { glob = "tools/msvs/**/*.csx" }, { glob = "tools/msvs/**/*.cake" }]
roots = ["sln", "csproj"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "omnisharp" ]
debugger= { name = "netcoredbg", transport = "tcp", command = "netcoredbg", args = [ "--interpreter=vscode" ], port-arg = "--server={}", templates = [{ name = "launch", request = "launch", completion = [ { name = "path to dll", completion = "filename" } ], args = { type = "coreclr", console = "internalConsole", internalConsoleOptions = "openOnSessionStart", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { processId = "{0}" } }] }
grammar = "c-sharp"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-cabal"
scope = "source.cabal"
file-types = [{ glob = "tools/msvs/**/*.cabal" }]
roots = ["cabal.project", "Setup.hs"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "--"
language-servers = [ "haskell-language-server" ]
grammar = "cabal"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-cairo"
scope = "source.cairo"
file-types = [{ glob = "tools/msvs/**/*.cairo" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
# auto-format = true
language-servers = [ "cairo-language-server" ]
grammar = "cairo"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-capnp"
scope = "source.capnp"
file-types = [{ glob = "tools/msvs/**/*.capnp" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "capnp"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-cel"
scope = "source.cel"
file-types = [{ glob = "tools/msvs/**/*.cel" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cel"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-circom"
scope            = "source.circom"
file-types = [{ glob = "tools/msvs/**/*.circom" }]
roots            = ["package.json"]
comment-tokens   = "//"
indent = { unit = "  ", tab-width = 2 }
auto-format      = false
language-servers = ["circom-lsp"]
grammar = "circom"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-clojure"
scope = "source.clojure"
file-types = [{ glob = "tools/msvs/**/*.clj" }, { glob = "tools/msvs/**/*.cljs" }, { glob = "tools/msvs/**/*.cljc" }, { glob = "tools/msvs/**/*.clje" }, { glob = "tools/msvs/**/*.cljr" }, { glob = "tools/msvs/**/*.cljx" }, { glob = "tools/msvs/**/*.edn" }, { glob = "tools/msvs/**/*.boot" }]
roots = ["project.clj", "build.boot", "deps.edn", "shadow-cljs.edn"]
comment-token = ";"
language-servers = [ "clojure-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "clojure"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-cmake"
scope = "source.cmake"
file-types = [{ glob = "tools/msvs/**/*.cmake" }, { glob = "tools/msvs/**/CMakeLists.txt" }]
comment-token = "#"
block-comment-tokens = { start = "#[[", end = "]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cmake-language-server" ]
grammar = "cmake"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-comment"
scope = "scope.comment"
file-types = []
grammar = "comment"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-common-lisp"
scope = "source.lisp"
file-types = [{ glob = "tools/msvs/**/*.lisp" }, { glob = "tools/msvs/**/*.asd" }, { glob = "tools/msvs/**/*.cl" }, { glob = "tools/msvs/**/*.l" }, { glob = "tools/msvs/**/*.lsp" }, { glob = "tools/msvs/**/*.ny" }, { glob = "tools/msvs/**/*.podsl" }, { glob = "tools/msvs/**/*.sexp" }]
shebangs = ["lisp", "sbcl", "ccl", "clisp", "ecl"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cl-lsp" ]
grammar = "common-lisp"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-cpon"
scope = "scope.cpon"
file-types = [{ glob = "tools/msvs/**/*.cpon" }, { glob = "tools/msvs/**/*.cp" }]
auto-format = true
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "cpon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-cpp"
scope = "source.cpp"
file-types = [{ glob = "tools/msvs/**/*.cc" }, { glob = "tools/msvs/**/*.hh" }, { glob = "tools/msvs/**/*.c++" }, { glob = "tools/msvs/**/*.cpp" }, { glob = "tools/msvs/**/*.hpp" }, { glob = "tools/msvs/**/*.h" }, { glob = "tools/msvs/**/*.ipp" }, { glob = "tools/msvs/**/*.tpp" }, { glob = "tools/msvs/**/*.cxx" }, { glob = "tools/msvs/**/*.hxx" }, { glob = "tools/msvs/**/*.ixx" }, { glob = "tools/msvs/**/*.txx" }, { glob = "tools/msvs/**/*.ino" }, { glob = "tools/msvs/**/*.C" }, { glob = "tools/msvs/**/*.H" }, { glob = "tools/msvs/**/*.cu" }, { glob = "tools/msvs/**/*.cuh" }, { glob = "tools/msvs/**/*.cppm" }, { glob = "tools/msvs/**/*.h++" }, { glob = "tools/msvs/**/*.ii" }, { glob = "tools/msvs/**/*.inl" }, { glob = "tools/msvs/**/.hpp.in" }, { glob = "tools/msvs/**/.h.in" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "clangd" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "cpp"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-crystal"
scope = "source.cr"
file-types = [{ glob = "tools/msvs/**/*.cr" }]
roots = ["shard.yml", "shard.lock"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "crystal"
language-servers = [ "crystalline" ]

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-css"
scope = "source.css"
file-types = [{ glob = "tools/msvs/**/*.css" }, { glob = "tools/msvs/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "css"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-cue"
scope = "source.cue"
file-types = [{ glob = "tools/msvs/**/*.cue" }]
roots = ["cue.mod"]
auto-format = true
comment-token = "//"
language-servers = [ "cuelsp" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "cue", args = ["fmt", "-"] }
grammar = "cue"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-cylc"
scope = "source.cylc"
file-types = [{ glob = "tools/msvs/**/*.cylc" }, { glob = "tools/msvs/**/suite.rc" }]
comment-tokens = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "cylc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-d"
scope = "source.d"
file-types = [{ glob = "tools/msvs/**/*.d" }, { glob = "tools/msvs/**/*.dd" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "serve-d" ]
formatter = { command = "dfmt" }
grammar = "d"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-dart"
scope = "source.dart"
file-types = [{ glob = "tools/msvs/**/*.dart" }]
roots = ["pubspec.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "dart" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "dart"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-dbml"
scope = "source.dbml"
file-types = [{ glob = "tools/msvs/**/*.dbml" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dbml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-devicetree"
scope = "source.devicetree"
file-types = [{ glob = "tools/msvs/**/*.dts" }, { glob = "tools/msvs/**/*.dtsi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "devicetree"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-dhall"
scope = "source.dhall"
file-types = [{ glob = "tools/msvs/**/*.dhall" }]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dhall-lsp-server" ]
formatter = { command = "dhall" , args = ["format"] }
grammar = "dhall"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-diff"
scope = "source.diff"
file-types = [{ glob = "tools/msvs/**/*.diff" }, { glob = "tools/msvs/**/*.patch" }, { glob = "tools/msvs/**/*.rej" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "diff"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-docker-compose"
scope = "source.yaml.docker-compose"
roots = ["docker-compose.yaml", "docker-compose.yml"]
language-servers = [ "docker-compose-langserver", "yaml-language-server" ]
file-types = [{ glob = "tools/msvs/**/docker-compose.yaml" }, { glob = "tools/msvs/**/docker-compose.yml" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "docker-compose"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-dockerfile"
scope = "source.dockerfile"
roots = ["Dockerfile", "Containerfile"]
file-types = [{ glob = "tools/msvs/**/*.Dockerfile" }, { glob = "tools/msvs/**/Dockerfile" }, { glob = "tools/msvs/**/Dockerfile.*" }, { glob = "tools/msvs/**/*.dockerfile" }, { glob = "tools/msvs/**/dockerfile" }, { glob = "tools/msvs/**/dockerfile.*" }, { glob = "tools/msvs/**/*.Containerfile" }, { glob = "tools/msvs/**/Containerfile" }, { glob = "tools/msvs/**/Containerfile.*" }, { glob = "tools/msvs/**/*.containerfile" }, { glob = "tools/msvs/**/containerfile" }, { glob = "tools/msvs/**/containerfile.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "docker-langserver" ]
grammar = "dockerfile"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-dot"
scope = "source.dot"
file-types = [{ glob = "tools/msvs/**/*.dot" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "dot-language-server" ]
grammar = "dot"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-dtd"
scope = "source.dtd"
file-types = [{ glob = "tools/msvs/**/*.dtd" }, { glob = "tools/msvs/**/*.ent" }]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '<' = '>' }
grammar = "dtd"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-dune"
scope = "source.dune"
roots = ["dune-project"]
file-types = [{ glob = "tools/msvs/**/dune-project" }, { glob = "tools/msvs/**/dune" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "dune"
auto-format = true
formatter = { command = "dune", args = ["format-dune-file"] }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-earthfile"
scope = "source.earthfile"
roots = ["Earthfile"]
file-types = [{ glob = "tools/msvs/**/Earthfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["earthlyls"]
grammar = "earthfile"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-edoc"
scope = "source.edoc"
file-types = [{ glob = "tools/msvs/**/*.edoc" }, { glob = "tools/msvs/**/*.edoc.in" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "edoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-eex"
scope = "source.eex"
file-types = [{ glob = "tools/msvs/**/*.eex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "eex"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ejs"
scope = "text.html.ejs"
file-types = [{ glob = "tools/msvs/**/*.ejs" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ejs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-elisp"
scope = "source.elisp"
file-types = [{ glob = "tools/msvs/**/*.el" }]
comment-tokens = [";"]
auto-pairs= { '(' = ')', '"' = '"' }
grammar = "elisp"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-elixir"
scope = "source.elixir"
file-types = [{ glob = "tools/msvs/**/*.ex" }, { glob = "tools/msvs/**/*.exs" }, { glob = "tools/msvs/**/mix.lock" }]
shebangs = ["elixir"]
roots = ["mix.exs", "mix.lock"]
comment-token = "#"
language-servers = [ "elixir-ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elixir"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-elm"
scope = "source.elm"
file-types = [{ glob = "tools/msvs/**/*.elm" }]
roots = ["elm.json"]
auto-format = true
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "elm-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "elm"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-elvish"
scope = "source.elvish"
shebangs = ["elvish"]
file-types = [{ glob = "tools/msvs/**/*.elv" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elvish" ]
grammar = "elvish"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-env"
scope = "source.env"
file-types = [{ glob = "tools/msvs/**/.env" }, { glob = "tools/msvs/**/.env.*" }, { glob = "tools/msvs/**/.envrc" }, { glob = "tools/msvs/**/.envrc.*" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "env"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-erb"
scope = "text.html.erb"
file-types = [{ glob = "tools/msvs/**/*.erb" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "erb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-erlang"
scope = "source.erlang"
file-types = [{ glob = "tools/msvs/**/*.erl" }, { glob = "tools/msvs/**/*.hrl" }, { glob = "tools/msvs/**/*.app" }, { glob = "tools/msvs/**/rebar.config" }, { glob = "tools/msvs/**/rebar.lock" }, { glob = "tools/msvs/**/*.app.src" }]
roots = ["rebar.config"]
shebangs = ["escript"]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "erlang-ls", "elp" ]
grammar = "erlang"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-esdl"
scope = "source.esdl"
file-types = [{ glob = "tools/msvs/**/*.esdl" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
roots = ["edgedb.toml"]
grammar = "esdl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-fidl"
scope = "source.fidl"
file-types = [{ glob = "tools/msvs/**/*.fidl" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "fidl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-fish"
scope = "source.fish"
file-types = [{ glob = "tools/msvs/**/*.fish" }]
shebangs = ["fish"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "fish_indent" }
grammar = "fish"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-forth"
scope = "source.forth"
file-types = [{ glob = "tools/msvs/**/*.fs" }, { glob = "tools/msvs/**/*.forth" }, { glob = "tools/msvs/**/*.fth" }, { glob = "tools/msvs/**/*.4th" }]
comment-token = "\\"
language-servers = [ "forth-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "forth"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-fortran"
scope = "source.fortran"
file-types = [{ glob = "tools/msvs/**/*.f" }, { glob = "tools/msvs/**/*.for" }, { glob = "tools/msvs/**/*.f90" }, { glob = "tools/msvs/**/*.f95" }, { glob = "tools/msvs/**/*.f03" }]
roots = ["fpm.toml"]
comment-token = "!"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "fortls" ]
grammar = "fortran"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-fsharp"
scope = "source.fs"
roots = ["sln", "fsproj"]
file-types = [{ glob = "tools/msvs/**/*.fs" }, { glob = "tools/msvs/**/*.fsx" }, { glob = "tools/msvs/**/*.fsi" }, { glob = "tools/msvs/**/*.fsscript" }]
comment-token = "//"
block-comment-tokens = { start = "(*", end = "*)" }
indent = { unit = "  ", tab-width = 2 }
auto-format = true
language-servers = ["fsharp-ls"]
grammar = "fsharp"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gas"
scope = "source.gas"
file-types = [{ glob = "tools/msvs/**/*.s" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gas"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gdscript"
scope = "source.gdscript"
file-types = [{ glob = "tools/msvs/**/*.gd" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
formatter = { command = "gdformat", args = ["-"] }
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
grammar = "gdscript"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gemini"
scope = "source.gmi"
file-types = [{ glob = "tools/msvs/**/*.gmi" }]
grammar = "gemini"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gherkin"
scope = "source.feature"
file-types = [{ glob = "tools/msvs/**/*.feature" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "gherkin"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-git-attributes"
scope = "source.gitattributes"
file-types = [{ glob = "tools/msvs/**/.gitattributes" }]
comment-token = "#"
grammar = "git-attributes"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-git-commit"
scope = "git.commitmsg"
file-types = [{ glob = "tools/msvs/**/COMMIT_EDITMSG" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "git-commit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-git-config"
scope = "source.gitconfig"
file-types = [{ glob = "tools/msvs/**/.gitmodules" }, { glob = "tools/msvs/**/.gitconfig" }, { glob = "tools/msvs/**/.git/config" }, { glob = "tools/msvs/**/.config/git/config" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-config"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-git-ignore"
scope = "source.gitignore"
file-types = [{ glob = "tools/msvs/**/.gitignore_global" }, { glob = "tools/msvs/**/git/ignore" }, { glob = "tools/msvs/**/.ignore" }, { glob = "tools/msvs/**/CODEOWNERS" }, { glob = "tools/msvs/**/.config/helix/ignore" }, { glob = "tools/msvs/**/.helix/ignore" }, { glob = "tools/msvs/**/.*ignore" }]
comment-token = "#"
grammar = "git-ignore"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-git-rebase"
scope = "source.gitrebase"
file-types = [{ glob = "tools/msvs/**/git-rebase-todo" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "git-rebase"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gjs"
scope = "source.gjs"
file-types = [{ glob = "tools/msvs/**/*.gjs" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gjs"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gleam"
scope = "source.gleam"
file-types = [{ glob = "tools/msvs/**/*.gleam" }]
roots = ["gleam.toml"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "gleam" ]
auto-format = true
grammar = "gleam"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-glimmer"
scope = "source.glimmer"
file-types = [{ glob = "tools/msvs/**/{app,addon}/{components,templates}/*.hbs" }]
block-comment-tokens = { start = "{{!", end = "}}" }
roots = ["package.json", "ember-cli-build.js"]
grammar = "glimmer"
language-servers = ["ember-language-server"]
formatter = { command = "prettier", args = ['--parser', 'glimmer'] }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>', "'" = "'" }
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-glsl"
scope = "source.glsl"
file-types = [{ glob = "tools/msvs/**/*.glsl" }, { glob = "tools/msvs/**/*.vert" }, { glob = "tools/msvs/**/*.tesc" }, { glob = "tools/msvs/**/*.tese" }, { glob = "tools/msvs/**/*.geom" }, { glob = "tools/msvs/**/*.frag" }, { glob = "tools/msvs/**/*.comp" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "glsl_analyzer" ]
grammar = "glsl"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gn"
scope = "source.gn"
file-types = [{ glob = "tools/msvs/**/*.gn" }, { glob = "tools/msvs/**/*.gni" }]
roots = []
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "gn", args = ["format", "--stdin"] }
grammar = "gn"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-go"
scope = "source.go"
file-types = [{ glob = "tools/msvs/**/*.go" }]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls", "golangci-lint-lsp" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "go", transport = "tcp", command = "dlv", args = ["dap"], port-arg = "-l 127.0.0.1:{}", templates = [{ name = "source", request = "launch", completion = [ { name = "entrypoint", completion = "filename", default = "." } ], args = { mode = "debug", program = "{0}" } }, { name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { mode = "exec", program = "{0}" } }, { name = "test", request = "launch", completion = [ { name = "tests", completion = "directory", default = "." } ], args = { mode = "test", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { mode = "local", processId = "{0}" } }, { name = "core", request = "launch", completion = [ { name = "binary", completion = "filename" }, { name = "core", completion = "filename" } ], args = { mode = "core", program = "{0}", coreFilePath = "{1}" } }] }
grammar = "go"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-godot-resource"
scope = "source.tscn"
file-types = [{ glob = "tools/msvs/**/*.tscn" }, { glob = "tools/msvs/**/*.tres" }, { glob = "tools/msvs/**/*.godot" }, { glob = "tools/msvs/**/*.gdextension" }]
shebangs = []
roots = ["project.godot"]
auto-format = true
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "godot-resource"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gomod"
scope = "source.gomod"
file-types = [{ glob = "tools/msvs/**/go.mod" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gomod"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gotmpl"
scope = "source.gotmpl"
file-types = [{ glob = "tools/msvs/**/*.gotmpl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gotmpl"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gowork"
scope = "source.gowork"
file-types = [{ glob = "tools/msvs/**/go.work" }]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "gowork"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gpr"
scope = "source.gpr"
file-types = [{ glob = "tools/msvs/**/*.gpr" }]
roots = ["alire.toml"]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["ada-gpr-language-server"]
grammar = "gpr"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-graphql"
scope = "source.graphql"
file-types = [{ glob = "tools/msvs/**/*.gql" }, { glob = "tools/msvs/**/*.graphql" }, { glob = "tools/msvs/**/*.graphqls" }]
language-servers = [ "graphql-language-service" ]
comment-token = "#"
block-comment-tokens = { start = "\"\"\"", end = "\"\"\"" }
indent = { unit = "  ", tab-width = 2 }
grammar = "graphql"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-groovy"
language-id = "groovy"
scope = "source.groovy"
file-types = [{ glob = "tools/msvs/**/*.gradle" }, { glob = "tools/msvs/**/*.groovy" }, { glob = "tools/msvs/**/*.jenkinsfile" }, { glob = "tools/msvs/**/Jenkinsfile" }, { glob = "tools/msvs/**/Jenkinsfile.*" }]
shebangs = ["groovy"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "groovy"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-gts"
scope = "source.gts"
file-types = [{ glob = "tools/msvs/**/*.gts" }]
roots = ["package.json", "ember-cli-build.js"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
    { except-features = [
        "format", "diagnostics",
    ], name = "typescript-language-server" },
    "vscode-eslint-language-server",
    "ember-language-server",
]
indent = { unit = "  ", tab-width = 2 }
grammar = "gts"
auto-pairs= { '<' = '>', "'" = "'", "{" = "}", "(" = ")", '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-hare"
scope = "source.hare"
file-types = [{ glob = "tools/msvs/**/*.ha" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "hare"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-haskell"
scope = "source.haskell"
file-types = [{ glob = "tools/msvs/**/*.hs" }, { glob = "tools/msvs/**/*.hs-boot" }, { glob = "tools/msvs/**/*.hsc" }]
roots = ["Setup.hs", "stack.yaml", "cabal.project"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "haskell-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-haskell-persistent"
scope = "source.persistentmodels"
file-types = [{ glob = "tools/msvs/**/*.persistentmodels" }]
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
grammar = "haskell-persistent"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-hcl"
scope = "source.hcl"
language-id = "terraform"
file-types = [{ glob = "tools/msvs/**/*.hcl" }, { glob = "tools/msvs/**/*.tf" }, { glob = "tools/msvs/**/*.nomad" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "hcl"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-heex"
scope = "source.heex"
file-types = [{ glob = "tools/msvs/**/*.heex" }]
roots = ["mix.exs", "mix.lock"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "elixir-ls" ]
grammar = "heex"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-helm"
grammar = "helm"
scope = "source.helm"
roots = ["Chart.yaml"]
comment-token = "#"
language-servers = ["helm_ls"]
file-types = [{ glob = "tools/msvs/**/templates/*.yaml" }, { glob = "tools/msvs/**/templates/*.yml" }, { glob = "tools/msvs/**/templates/_*.tpl" }, { glob = "tools/msvs/**/templates/NOTES.txt" }]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-hocon"
scope = "source.conf"
file-types = [{ glob = "tools/msvs/**/**/src/*/resources/**/*.conf" }, { glob = "tools/msvs/**/*scalafmt*.conf" }, { glob = "tools/msvs/**/*scalafix*.conf" }]
comment-token = "#"
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "hocon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-hoon"
scope = "source.hoon"
file-types = [{ glob = "tools/msvs/**/*.hoon" }]
comment-token = "::"
indent = { unit = "  ", tab-width = 2 }
grammar = "hoon"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-hosts"
scope = "source.hosts"
file-types = [{ glob = "tools/msvs/**/hosts" }]
comment-token = "#"
grammar = "hosts"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-html"
scope = "text.html.basic"
file-types = [{ glob = "tools/msvs/**/*.html" }, { glob = "tools/msvs/**/*.htm" }, { glob = "tools/msvs/**/*.shtml" }, { glob = "tools/msvs/**/*.xhtml" }, { glob = "tools/msvs/**/*.xht" }, { glob = "tools/msvs/**/*.jsp" }, { glob = "tools/msvs/**/*.asp" }, { glob = "tools/msvs/**/*.aspx" }, { glob = "tools/msvs/**/*.jshtm" }, { glob = "tools/msvs/**/*.volt" }, { glob = "tools/msvs/**/*.rhtml" }, { glob = "tools/msvs/**/*.cshtml" }]
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "vscode-html-language-server", "superhtml" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "html"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-hurl"
scope = "source.hurl"
file-types = [{ glob = "tools/msvs/**/*.hurl" }]
comment-token = "#"
formatter = { command = "hurlfmt" }
indent = { unit = "  ", tab-width = 2 }
grammar = "hurl"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-hyprlang"
scope = "source.hyprlang"
roots = ["hyprland.conf"]
file-types = [{ glob = "tools/msvs/**/hypr/*.conf" }]
comment-token = "#"
grammar = "hyprlang"
language-servers = ["hyprls"]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-idris"
scope = "source.idr"
file-types = [{ glob = "tools/msvs/**/*.idr" }]
shebangs = []
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "idris2-lsp" ]
grammar = "idris"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-iex"
scope = "source.iex"
file-types = [{ glob = "tools/msvs/**/*.iex" }]
comment-token = "#"
grammar = "iex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ini"
scope = "source.ini"
file-types = [{ glob = "tools/msvs/**/*.ini" }, { glob = "tools/msvs/**/*.service" }, { glob = "tools/msvs/**/*.automount" }, { glob = "tools/msvs/**/*.device" }, { glob = "tools/msvs/**/*.mount" }, { glob = "tools/msvs/**/*.path" }, { glob = "tools/msvs/**/*.service" }, { glob = "tools/msvs/**/*.slice" }, { glob = "tools/msvs/**/*.socket" }, { glob = "tools/msvs/**/*.swap" }, { glob = "tools/msvs/**/*.target" }, { glob = "tools/msvs/**/*.timer" }, { glob = "tools/msvs/**/*.container" }, { glob = "tools/msvs/**/*.volume" }, { glob = "tools/msvs/**/*.kube" }, { glob = "tools/msvs/**/*.network" }, { glob = "tools/msvs/**/.editorconfig" }, { glob = "tools/msvs/**/.npmrc" }, { glob = "tools/msvs/**/npmrc" }, { glob = "tools/msvs/**/rclone.conf" }, { glob = "tools/msvs/**/*.properties" }, { glob = "tools/msvs/**/*.cfg" }, { glob = "tools/msvs/**/*.directory" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "ini"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-inko"
auto-format = true
scope = "source.inko"
file-types = [{ glob = "tools/msvs/**/*.inko" }]
roots = ["inko.pkg"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "inko", args = ["fmt", "-"] }
grammar = "inko"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-janet"
scope = "source.janet"
file-types = [{ glob = "tools/msvs/**/*.cgen" }, { glob = "tools/msvs/**/*.janet" }, { glob = "tools/msvs/**/*.jdn" }]
shebangs = ["janet"]
roots = ["project.janet"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "janet-format" }
grammar = "janet"
auto-pairs= { '"' = '"', '(' = ')', '[' = ']', '{' = '}', "`" = "`" }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-java"
scope = "source.java"
file-types = [{ glob = "tools/msvs/**/*.java" }, { glob = "tools/msvs/**/*.jav" }, { glob = "tools/msvs/**/*.pde" }]
roots = ["pom.xml", "build.gradle", "build.gradle.kts"]
language-servers = [ "jdtls" ]
indent = { unit = "  ", tab-width = 2 }
comment-tokens = ["//"]
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "java"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-javascript"
scope = "source.js"
language-id = "javascript"
file-types = [{ glob = "tools/msvs/**/*.js" }, { glob = "tools/msvs/**/*.mjs" }, { glob = "tools/msvs/**/*.cjs" }, { glob = "tools/msvs/**/*.rules" }, { glob = "tools/msvs/**/*.es6" }, { glob = "tools/msvs/**/*.pac" }, { glob = "tools/msvs/**/.node_repl_history" }, { glob = "tools/msvs/**/jakefile" }]
shebangs = ["node"]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
debugger= { name = "node-debug2", transport = "stdio", quirks = { absolute-paths = true }, templates = [{ name = "source", request = "launch", completion = [ { name = "main", completion = "filename", default = "index.js" } ], args = { program = "{0}" } }] }
grammar = "javascript"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-jinja"
scope = "text.html.jinja"
file-types = [{ glob = "tools/msvs/**/*.jinja" }, { glob = "tools/msvs/**/*.jinja2" }, { glob = "tools/msvs/**/*.j2" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jinja"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-jjdescription"
scope = "jj.description"
file-types = [{ glob = "tools/msvs/**/*.jjdescription" }]
comment-token = "JJ:"
indent = { unit = "  ", tab-width = 2 }
rulers = [51, 73]
text-width = 72
grammar = "jjdescription"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-jq"
scope = "source.jq"
file-types = [{ glob = "tools/msvs/**/*.jq" }]
comment-token = "#"
language-servers = ["jq-lsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "jq"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-jsdoc"
scope = "source.jsdoc"
file-types = [{ glob = "tools/msvs/**/*.jsdoc" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsdoc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-json"
scope = "source.json"
file-types = [{ glob = "tools/msvs/**/*.json" }, { glob = "tools/msvs/**/*.arb" }, { glob = "tools/msvs/**/*.ipynb" }, { glob = "tools/msvs/**/*.geojson" }, { glob = "tools/msvs/**/*.gltf" }, { glob = "tools/msvs/**/*.webmanifest" }, { glob = "tools/msvs/**/flake.lock" }, { glob = "tools/msvs/**/.babelrc" }, { glob = "tools/msvs/**/.bowerrc" }, { glob = "tools/msvs/**/.jscrc" }, { glob = "tools/msvs/**/*.js.map" }, { glob = "tools/msvs/**/*.ts.map" }, { glob = "tools/msvs/**/*.css.map" }, { glob = "tools/msvs/**/.jslintrc" }, { glob = "tools/msvs/**/*.jsonl" }, { glob = "tools/msvs/**/*.jsonld" }, { glob = "tools/msvs/**/.vuerc" }, { glob = "tools/msvs/**/composer.lock" }, { glob = "tools/msvs/**/.watchmanconfig" }, { glob = "tools/msvs/**/*.avsc" }, { glob = "tools/msvs/**/*.ldtk" }, { glob = "tools/msvs/**/*.ldtkl" }, { glob = "tools/msvs/**/.swift-format" }]
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "json"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-json5"
scope = "source.json5"
file-types = [{ glob = "tools/msvs/**/*.json5" }]
language-servers = []
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "json5"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-jsonc"
scope = "source.json"
file-types = [{ glob = "tools/msvs/**/*.jsonc" }, { glob = "tools/msvs/**/tsconfig.json" }]
grammar = "jsonc"
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-jsonnet"
scope = "source.jsonnet"
file-types = [{ glob = "tools/msvs/**/*.libsonnet" }, { glob = "tools/msvs/**/*.jsonnet" }]
roots = ["jsonnetfile.json"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "jsonnet-language-server" ]
grammar = "jsonnet"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-jsx"
scope = "source.jsx"
language-id = "javascriptreact"
file-types = [{ glob = "tools/msvs/**/*.jsx" }]
roots = [ "package.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "jsx"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-julia"
scope = "source.julia"
file-types = [{ glob = "tools/msvs/**/*.jl" }]
shebangs = ["julia"]
roots = ["Manifest.toml", "Project.toml"]
comment-token = "#"
block-comment-tokens = { start = "#=", end = "=#" }
language-servers = [ "julia" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "julia"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-just"
scope = "source.just"
file-types = [{ glob = "tools/msvs/**/*.just" }, { glob = "tools/msvs/**/justfile" }, { glob = "tools/msvs/**/Justfile" }, { glob = "tools/msvs/**/.justfile" }, { glob = "tools/msvs/**/.Justfile" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "just"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-kdl"
scope = "source.kdl"
file-types = [{ glob = "tools/msvs/**/*.kdl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "kdl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-koka"
scope = "source.koka"
file-types = [{ glob = "tools/msvs/**/*.kk" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koka"]
grammar = "koka"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-kotlin"
scope = "source.kotlin"
file-types = [{ glob = "tools/msvs/**/*.kt" }, { glob = "tools/msvs/**/*.kts" }]
roots = ["settings.gradle", "settings.gradle.kts"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "kotlin-language-server" ]
grammar = "kotlin"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-koto"
scope = "source.koto"
file-types = [{ glob = "tools/msvs/**/*.koto" }]
comment-token = "#"
block-comment-tokens = ["#-", "-#"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["koto-ls"]
grammar = "koto"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-latex"
scope = "source.tex"
file-types = [{ glob = "tools/msvs/**/*.tex" }, { glob = "tools/msvs/**/*.sty" }, { glob = "tools/msvs/**/*.cls" }, { glob = "tools/msvs/**/*.Rd" }, { glob = "tools/msvs/**/*.bbx" }, { glob = "tools/msvs/**/*.cbx" }]
comment-token = "%"
language-servers = [ "texlab" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "latex"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ld"
scope = "source.ld"
file-types = [{ glob = "tools/msvs/**/*.ld" }]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ld"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ldif"
scope = "source.ldif"
file-types = [{ glob = "tools/msvs/**/*.ldif" }]
comment-token = "#"
grammar = "ldif"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-lean"
scope = "source.lean"
file-types = [{ glob = "tools/msvs/**/*.lean" }]
roots = [ "lakefile.lean" ]
comment-token = "--"
block-comment-tokens = { start = "/-", end = "-/" }
language-servers = [ "lean" ]
indent = { unit = "  ", tab-width = 2 }
rulers = [101]
text-width = 100
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '⟨' = '⟩' }
grammar = "lean"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ledger"
scope = "source.ledger"
file-types = [{ glob = "tools/msvs/**/*.ldg" }, { glob = "tools/msvs/**/*.ledger" }, { glob = "tools/msvs/**/*.journal" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "ledger"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-llvm"
scope = "source.llvm"
file-types = [{ glob = "tools/msvs/**/*.ll" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-llvm-mir"
scope = "source.llvm_mir"
file-types = []
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-llvm-mir-yaml"
# TODO allow languages to point to their grammar like so:
#
#     grammar = "yaml"
scope = "source.yaml"
file-types = [{ glob = "tools/msvs/**/*.mir" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "llvm-mir-yaml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-log"
scope = "source.log"
file-types = [{ glob = "tools/msvs/**/*.log" }]
grammar = "log"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-lpf"
comment-token = "#"
scope = "source.lpf"
file-types = [{ glob = "tools/msvs/**/*.lpf" }]
grammar = "lpf"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-lua"
scope = "source.lua"
file-types = [{ glob = "tools/msvs/**/*.lua" }]
shebangs = ["lua", "luajit"]
roots = [".luarc.json", ".luacheckrc", ".stylua.toml", "selene.toml", ".git"]
comment-token = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "lua-language-server" ]
grammar = "lua"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-make"
scope = "source.make"
file-types = [{ glob = "tools/msvs/**/Makefile" }, { glob = "tools/msvs/**/makefile" }, { glob = "tools/msvs/**/*.make" }, { glob = "tools/msvs/**/*.mk" }, { glob = "tools/msvs/**/*.mak" }, { glob = "tools/msvs/**/GNUmakefile" }, { glob = "tools/msvs/**/OCamlMakefile" }]
shebangs = ["make", "gmake"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "make"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-markdoc"
scope = "text.markdoc"
block-comment-tokens = { start = "<!--", end = "-->" }
file-types = [{ glob = "tools/msvs/**/*.mdoc" }]
language-servers = [ "markdoc-ls" ]
grammar = "markdoc"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-markdown"
scope = "source.md"
file-types = [{ glob = "tools/msvs/**/*.md" }, { glob = "tools/msvs/**/*.livemd" }, { glob = "tools/msvs/**/*.markdown" }, { glob = "tools/msvs/**/*.mdx" }, { glob = "tools/msvs/**/*.mkd" }, { glob = "tools/msvs/**/*.mkdn" }, { glob = "tools/msvs/**/*.mdwn" }, { glob = "tools/msvs/**/*.mdown" }, { glob = "tools/msvs/**/*.markdn" }, { glob = "tools/msvs/**/*.mdtxt" }, { glob = "tools/msvs/**/*.mdtext" }, { glob = "tools/msvs/**/*.workbook" }, { glob = "tools/msvs/**/PULLREQ_EDITMSG" }]
roots = [".marksman.toml"]
language-servers = [ "marksman", "markdown-oxide" ]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "markdown"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-markdown.inline"
scope = "source.markdown.inline"
file-types = []
grammar = "markdown.inline"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-matlab"
scope = "source.m"
file-types = [{ glob = "tools/msvs/**/*.m" }]
comment-token = "%"
shebangs = ["octave-cli", "matlab"]
indent = { unit = "  ", tab-width = 2 }
grammar = "matlab"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-mermaid"
scope = "source.mermaid"
file-types = [{ glob = "tools/msvs/**/*.mermaid" }, { glob = "tools/msvs/**/*.mmd" }]
comment-token = "%%"
indent = { unit = "  ", tab-width = 2 }
grammar = "mermaid"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-meson"
scope = "source.meson"
file-types = [{ glob = "tools/msvs/**/meson.build" }, { glob = "tools/msvs/**/meson.options" }, { glob = "tools/msvs/**/meson_options.txt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = ["mesonlsp"]
grammar = "meson"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-mint"
scope = "source.mint"
file-types = [{ glob = "tools/msvs/**/*.mint" }]
shebangs = []
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "mint" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "mint"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-mojo"
scope = "source.mojo"
roots = ["__init__.mojo"]
file-types = [{ glob = "tools/msvs/**/*.mojo" }, { glob = "tools/msvs/**/*.🔥" }]
language-servers = [ "mojo-lsp" ]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "magic", args = ["run", "mojo" , "format", "-q", "-"]}
grammar = "mojo"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-move"
scope = "source.move"
roots = ["Move.toml"]
file-types = [{ glob = "tools/msvs/**/*.move" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = []
grammar = "move"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-msbuild"
scope = "source.msbuild"
file-types = [{ glob = "tools/msvs/**/*.proj" }, { glob = "tools/msvs/**/*.vbproj" }, { glob = "tools/msvs/**/*.csproj" }, { glob = "tools/msvs/**/*.fsproj" }, { glob = "tools/msvs/**/*.targets" }, { glob = "tools/msvs/**/*.props" }]
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "msbuild"
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-nasm"
scope = "source.nasm"
file-types = [{ glob = "tools/msvs/**/*.asm" }, { glob = "tools/msvs/**/*.S" }, { glob = "tools/msvs/**/*.nasm" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "nasm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-nestedtext"
scope = "text.nested"
file-types = [{ glob = "tools/msvs/**/*.nt" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nestedtext"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-nginx"
scope = "source.nginx"
file-types = [{ glob = "tools/msvs/**/sites-available/*.conf" }, { glob = "tools/msvs/**/sites-enabled/*.conf" }, { glob = "tools/msvs/**/nginx.conf" }, { glob = "tools/msvs/**/conf.d/*.conf" }]
roots = ["nginx.conf"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "nginx"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-nickel"
scope = "source.nickel"
file-types = [{ glob = "tools/msvs/**/*.ncl" }]
shebangs = []
comment-token = "#"
language-servers = [ "nls" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "nickel"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-nim"
scope = "source.nim"
file-types = [{ glob = "tools/msvs/**/*.nim" }, { glob = "tools/msvs/**/*.nims" }, { glob = "tools/msvs/**/*.nimble" }]
shebangs = []
comment-token = "#"
block-comment-tokens = { start = "#[", end = "]#" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nimlangserver" ]
auto-pairs= { '(' = ')', '[' = ']', '"' = '"', "'" = "'", '{' = '}' }
grammar = "nim"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-nix"
scope = "source.nix"
file-types = [{ glob = "tools/msvs/**/*.nix" }]
shebangs = []
comment-token = "#"
language-servers = [ "nil", "nixd" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "nix"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-nu"
scope = "source.nu"
file-types = [{ glob = "tools/msvs/**/*.nu" }, { glob = "tools/msvs/**/*.nuon" }]
shebangs = ["nu"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "nu-lsp" ]
grammar = "nu"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-nunjucks"
scope = "text.html.nunjucks"
file-types = [{ glob = "tools/msvs/**/*.njk" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "nunjucks"
block-comment-tokens = { start = "{#", end = "#}" }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ocaml"
scope = "source.ocaml"
file-types = [{ glob = "tools/msvs/**/*.ml" }]
shebangs = ["ocaml", "ocamlrun", "ocamlscript"]
block-comment-tokens = { start = "(*", end = "*)" }
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ocaml-interface"
scope = "source.ocaml.interface"
file-types = [{ glob = "tools/msvs/**/*.mli" }]
shebangs = []
block-comment-tokens = { start = "(*", end = "*)" }
comment-token = "(**)"
language-servers = [ "ocamllsp" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "ocaml-interface"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-odin"
auto-format = true
scope = "source.odin"
file-types = [{ glob = "tools/msvs/**/*.odin" }]
roots = ["ols.json", "main.odin"]
language-servers = [ "ols" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "odinfmt", args = [ "-stdin" ] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "odin"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ohm"
scope = "source.ohm"
file-types = [{ glob = "tools/msvs/**/*.ohm" }]
comment-token = "//"
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "ohm"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-opencl"
scope = "source.cl"
file-types = [{ glob = "tools/msvs/**/*.cl" }]
comment-token = "//"
language-servers = [ "clangd" ]
grammar = "opencl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-openscad"
scope = "source.openscad"
file-types = [{ glob = "tools/msvs/**/*.scad" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "openscad-lsp" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "openscad"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-org"
scope = "source.org"
file-types = [{ glob = "tools/msvs/**/*.org" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "org"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-pascal"
scope = "source.pascal"
file-types = [{ glob = "tools/msvs/**/*.pas" }, { glob = "tools/msvs/**/*.pp" }, { glob = "tools/msvs/**/*.inc" }, { glob = "tools/msvs/**/*.lpr" }, { glob = "tools/msvs/**/*.lfm" }]
comment-token = "//"
block-comment-tokens = { start = "{", end = "}" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "pasls" ]
grammar = "pascal"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-passwd"
scope = "source.passwd"
file-types = [{ glob = "tools/msvs/**/passwd" }]
grammar = "passwd"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-pem"
scope = "source.pem"
file-types = [{ glob = "tools/msvs/**/*.pem" }, { glob = "tools/msvs/**/*.cert" }, { glob = "tools/msvs/**/*.crt" }]
grammar = "pem"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-perl"
scope = "source.perl"
file-types = [{ glob = "tools/msvs/**/*.pl" }, { glob = "tools/msvs/**/*.pm" }, { glob = "tools/msvs/**/*.t" }, { glob = "tools/msvs/**/*.psgi" }, { glob = "tools/msvs/**/*.raku" }, { glob = "tools/msvs/**/*.rakumod" }, { glob = "tools/msvs/**/*.rakutest" }, { glob = "tools/msvs/**/*.rakudoc" }, { glob = "tools/msvs/**/*.nqp" }, { glob = "tools/msvs/**/*.p6" }, { glob = "tools/msvs/**/*.pl6" }, { glob = "tools/msvs/**/*.pm6" }]
shebangs = ["perl"]
comment-token = "#"
language-servers = [ "perlnavigator" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "perl"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-pest"
scope = "source.pest"
file-types = [{ glob = "tools/msvs/**/*.pest" }]
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pest-language-server"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "pest"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-php"
scope = "source.php"
file-types = [{ glob = "tools/msvs/**/*.php" }, { glob = "tools/msvs/**/*.inc" }, { glob = "tools/msvs/**/*.php4" }, { glob = "tools/msvs/**/*.php5" }, { glob = "tools/msvs/**/*.phtml" }, { glob = "tools/msvs/**/*.ctp" }]
shebangs = ["php"]
roots = ["composer.json", "index.php"]
comment-token = "//"
language-servers = [ "intelephense" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "php"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-php-only"
scope = "source.php-only"
file-types = []
indent = { unit = "  ", tab-width = 2 }
roots = ["composer.json", "index.php"]
grammar = "php-only"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-pkgbuild"
scope = "source.bash"
file-types = [{ glob = "tools/msvs/**/PKGBUILD" }]
comment-token = "#"
grammar = "pkgbuild"
language-servers = [
  "pkgbuild-language-server",
  { except-features = [
    "diagnostics",
  ], name = "bash-language-server" },
]
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-pkl"
scope = "source.pkl"
file-types = [{ glob = "tools/msvs/**/*.pkl" }, { glob = "tools/msvs/**/*.pcf" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "pkl"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-po"
scope = "source.po"
file-types = [{ glob = "tools/msvs/**/*.po" }, { glob = "tools/msvs/**/*.pot" }]
comment-token = "#"
grammar = "po"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-pod"
scope = "source.pod"
file-types = [{ glob = "tools/msvs/**/*.pod" }]
grammar = "pod"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ponylang"
scope = "source.pony"
file-types = [{ glob = "tools/msvs/**/*.pony" }]
roots = ["corral.json", "lock.json"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "ponylang"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-powershell"
scope = "source.powershell"
file-types = [{ glob = "tools/msvs/**/*.ps1" }, { glob = "tools/msvs/**/*.psm1" }, { glob = "tools/msvs/**/*.psd1" }, { glob = "tools/msvs/**/*.pscc" }, { glob = "tools/msvs/**/*.psrc" }]
shebangs = [ "pwsh", "powershell" ]
comment-token = '#'
block-comment-tokens = { start = "<#", end = "#>" }
indent = { unit = "  ", tab-width = 2 }
grammar = "powershell"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-prisma"
scope = "source.prisma"
file-types = [{ glob = "tools/msvs/**/*.prisma" }]
roots = ["package.json"]
comment-token = "//"
language-servers = [ "prisma-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "prisma"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-prolog"
scope = "source.prolog"
file-types = [{ glob = "tools/msvs/**/*.pl" }, { glob = "tools/msvs/**/*.prolog" }]
shebangs = ["swipl"]
comment-token = "%"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "swipl" ]
grammar = "prolog"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-protobuf"
scope = "source.proto"
file-types = [{ glob = "tools/msvs/**/*.proto" }]
language-servers = [ "bufls", "pbkit" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "protobuf"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-prql"
scope = "source.prql"
file-types = [{ glob = "tools/msvs/**/*.prql" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "prql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-purescript"
scope = "source.purescript"
file-types = [{ glob = "tools/msvs/**/*.purs" }]
roots = ["spago.yaml", "spago.dhall", "bower.json"]
comment-token = "--"
block-comment-tokens = { start = "{-", end = "-}" }
language-servers = [ "purescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-format = true
formatter = { command = "purs-tidy", args = ["format"] }
grammar = "purescript"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-python"
scope = "source.python"
file-types = [{ glob = "tools/msvs/**/*.py" }, { glob = "tools/msvs/**/*.pyi" }, { glob = "tools/msvs/**/*.py3" }, { glob = "tools/msvs/**/*.pyw" }, { glob = "tools/msvs/**/*.ptl" }, { glob = "tools/msvs/**/*.rpy" }, { glob = "tools/msvs/**/*.cpy" }, { glob = "tools/msvs/**/*.ipy" }, { glob = "tools/msvs/**/*.pyt" }, { glob = "tools/msvs/**/.python_history" }, { glob = "tools/msvs/**/.pythonstartup" }, { glob = "tools/msvs/**/.pythonrc" }, { glob = "tools/msvs/**/SConstruct" }, { glob = "tools/msvs/**/SConscript" }]
shebangs = ["python", "uv"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["ruff", "jedi", "pylsp"]
indent = { unit = "  ", tab-width = 2 }
grammar = "python"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-qml"
scope = "source.qml"
file-types = [{ glob = "tools/msvs/**/*.qml" }]
language-servers = [ "qmlls" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "qml"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-quint"
scope = "source.quint"
file-types = [{ glob = "tools/msvs/**/*.qnt" }]
language-servers = ["quint-language-server"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "quint"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-r"
scope = "source.r"
file-types = [{ glob = "tools/msvs/**/*.r" }, { glob = "tools/msvs/**/*.R" }, { glob = "tools/msvs/**/.Rprofile" }, { glob = "tools/msvs/**/Rprofile.site" }, { glob = "tools/msvs/**/.RHistory" }]
shebangs = ["r", "R"]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "r" ]
grammar = "r"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-racket"
scope = "source.racket"
file-types = [{ glob = "tools/msvs/**/*.rkt" }, { glob = "tools/msvs/**/*.rktd" }, { glob = "tools/msvs/**/*.rktl" }, { glob = "tools/msvs/**/*.scrbl" }]
shebangs = ["racket"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
block-comment-tokens = { start = "#|", end = "|#" }
language-servers = [ "racket" ]
grammar = "racket"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-regex"
scope = "source.regex"
file-types = [{ glob = "tools/msvs/**/*.regex" }, { glob = "tools/msvs/**/.Rbuildignore" }]
grammar = "regex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-rego"
scope = "source.rego"
file-types = [{ glob = "tools/msvs/**/*.rego" }]
auto-format = true
comment-token = "#"
language-servers = [ "regols" ]
grammar = "rego"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-rescript"
scope = "source.rescript"
file-types = [{ glob = "tools/msvs/**/*.res" }]
roots = ["bsconfig.json"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "rescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "rescript"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-rmarkdown"
scope = "source.rmd"
language-id = "rmd"
file-types = [{ glob = "tools/msvs/**/*.rmd" }, { glob = "tools/msvs/**/*.Rmd" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "rmarkdown"
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = [ "r" ]

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-robot"
scope = "source.robot"
file-types = [{ glob = "tools/msvs/**/*.robot" }, { glob = "tools/msvs/**/*.resource" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "robotframework_ls" ]
grammar = "robot"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ron"
scope = "source.ron"
file-types = [{ glob = "tools/msvs/**/*.ron" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "ron"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-rst"
scope = "source.rst"
comment-token = ".."
file-types = [{ glob = "tools/msvs/**/*.rst" }]
grammar = "rst"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ruby"
scope = "source.ruby"
file-types = [{ glob = "tools/msvs/**/*.rb" }, { glob = "tools/msvs/**/*.rake" }, { glob = "tools/msvs/**/*.irb" }, { glob = "tools/msvs/**/*.gemspec" }, { glob = "tools/msvs/**/*.rabl" }, { glob = "tools/msvs/**/*.jbuilder" }, { glob = "tools/msvs/**/*.jb" }, { glob = "tools/msvs/**/*.podspec" }, { glob = "tools/msvs/**/*.rjs" }, { glob = "tools/msvs/**/*.rbi" }, { glob = "tools/msvs/**/*.rbs" }, { glob = "tools/msvs/**/rakefile" }, { glob = "tools/msvs/**/gemfile" }, { glob = "tools/msvs/**/Rakefile" }, { glob = "tools/msvs/**/Gemfile" }, { glob = "tools/msvs/**/Podfile" }, { glob = "tools/msvs/**/Vagrantfile" }, { glob = "tools/msvs/**/Brewfile" }, { glob = "tools/msvs/**/Guardfile" }, { glob = "tools/msvs/**/Capfile" }, { glob = "tools/msvs/**/Cheffile" }, { glob = "tools/msvs/**/Hobofile" }, { glob = "tools/msvs/**/Appraisals" }, { glob = "tools/msvs/**/Rantfile" }, { glob = "tools/msvs/**/Berksfile" }, { glob = "tools/msvs/**/Berksfile.lock" }, { glob = "tools/msvs/**/Thorfile" }, { glob = "tools/msvs/**/Puppetfile" }, { glob = "tools/msvs/**/Fastfile" }, { glob = "tools/msvs/**/Appfile" }, { glob = "tools/msvs/**/Deliverfile" }, { glob = "tools/msvs/**/Matchfile" }, { glob = "tools/msvs/**/Scanfile" }, { glob = "tools/msvs/**/Snapfile" }, { glob = "tools/msvs/**/Gymfile" }]
shebangs = ["ruby"]
comment-token = "#"
language-servers = [ "solargraph" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "ruby"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-rust"
scope = "source.rust"
file-types = [{ glob = "tools/msvs/**/*.rs" }]
roots = ["Cargo.toml", "Cargo.lock"]
shebangs = ["rust-script", "cargo"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
  { start = "/*!", end = "*/" },
]
language-servers = [ "rust-analyzer" ]
indent = { unit = "  ", tab-width = 2 }
persistent-diagnostic-sources = ["rustc", "clippy"]
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}" } }, { name = "binary (terminal)", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { program = "{0}", runInTerminal = true } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "rust"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-sage"
scope = "source.sage"
file-types = [{ glob = "tools/msvs/**/*.sage" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "sage"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-scala"
scope = "source.scala"
roots = ["build.sbt", "build.sc", "build.gradle", "build.gradle.kts", "pom.xml", ".scala-build"]
file-types = [{ glob = "tools/msvs/**/*.scala" }, { glob = "tools/msvs/**/*.sbt" }, { glob = "tools/msvs/**/*.sc" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "metals" ]
grammar = "scala"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-scheme"
scope = "source.scheme"
file-types = [{ glob = "tools/msvs/**/*.ss" }, { glob = "tools/msvs/**/*.scm" }]
shebangs = ["scheme", "guile", "chicken"]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "scheme"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-scss"
scope = "source.scss"
file-types = [{ glob = "tools/msvs/**/*.scss" }]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { unit = "  ", tab-width = 2 }
grammar = "scss"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-slint"
scope = "source.slint"
file-types = [{ glob = "tools/msvs/**/*.slint" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "slint-lsp" ]
grammar = "slint"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-smali"
scope = "source.smali"
file-types = [{ glob = "tools/msvs/**/*.smali" }]
comment-token = "#"
roots = []
indent = { unit = "  ", tab-width = 2 }
grammar = "smali"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-smithy"
scope = "source.smithy"
file-types = [{ glob = "tools/msvs/**/*.smithy" }]
roots = ["smithy-build.json"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "cs" ]
grammar = "smithy"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-sml"
scope = "source.sml"
file-types = [{ glob = "tools/msvs/**/*.sml" }]
block-comment-tokens = { start = "(*", end = "*)" }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"' }
grammar = "sml"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-snakemake"
scope = "source.snakemake"
roots = ["Snakefile", "config.yaml", "environment.yaml", "workflow/"]
file-types = [{ glob = "tools/msvs/**/*.smk" }, { glob = "tools/msvs/**/Snakefile" }]
comment-tokens = ["#", "##"]
indent = { unit = "  ", tab-width = 2 }
language-servers = ["pylsp" ]
formatter= { command = "snakefmt", args = ["-"] }
grammar = "snakemake"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-solidity"
scope = "source.sol"
file-types = [{ glob = "tools/msvs/**/*.sol" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "solc" ]
grammar = "solidity"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-spade"
scope = "source.spade"
roots = ["swim.toml"]
file-types = [{ glob = "tools/msvs/**/*.spade" }]
comment-tokens = ["//", "///"]
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
]
language-servers = [ "spade-language-server" ]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '<' = '>' }
grammar = "spade"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-spicedb"
scope = "source.zed"
file-types = [{ glob = "tools/msvs/**/*.zed" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "spicedb"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-sql"
scope = "source.sql"
file-types = [{ glob = "tools/msvs/**/*.sql" }, { glob = "tools/msvs/**/*.dsql" }]
comment-token = "--"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "sql"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-sshclientconfig"
scope = "source.sshclientconfig"
file-types = [{ glob = "tools/msvs/**/.ssh/config" }, { glob = "tools/msvs/**//etc/ssh/ssh_config" }, { glob = "tools/msvs/**/ssh_config.d/*.conf" }]
comment-token = "#"
grammar = "sshclientconfig"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-starlark"
scope = "source.starlark"
file-types = [{ glob = "tools/msvs/**/*.bzl" }, { glob = "tools/msvs/**/*.bazel" }, { glob = "tools/msvs/**/*.star" }, { glob = "tools/msvs/**/BUILD" }, { glob = "tools/msvs/**/BUILD.*" }, { glob = "tools/msvs/**/Tiltfile" }, { glob = "tools/msvs/**/WORKSPACE" }, { glob = "tools/msvs/**/WORKSPACE.bzlmod" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "starlark"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-strace"
scope = "source.strace"
file-types = [{ glob = "tools/msvs/**/*.strace" }]
grammar = "strace"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-supercollider"
scope = "source.supercollider"
file-types = [{ glob = "tools/msvs/**/*.scd" }, { glob = "tools/msvs/**/*.sc" }, { glob = "tools/msvs/**/*.quark" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "supercollider"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-svelte"
scope = "source.svelte"
file-types = [{ glob = "tools/msvs/**/*.svelte" }]
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "svelteserver" ]
grammar = "svelte"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-sway"
scope = "source.sway"
file-types = [{ glob = "tools/msvs/**/*.sw" }]
language-servers = [ "forc" ]
roots = ["Forc.toml", "Forc.lock"]
indent = { unit = "  ", tab-width = 2 }
comment-token = "//"
grammar = "sway"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-swift"
scope = "source.swift"
file-types = [{ glob = "tools/msvs/**/*.swift" }, { glob = "tools/msvs/**/*.swiftinterface" }]
roots = [ "Package.swift" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
formatter = { command = "swift-format" }
language-servers = [ "sourcekit-lsp" ]
grammar = "swift"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-t32"
scope = "source.t32"
file-types = [{ glob = "tools/msvs/**/*.cmm" }, { glob = "tools/msvs/**/*.t32" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "t32"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-tablegen"
scope = "source.tablegen"
file-types = [{ glob = "tools/msvs/**/*.td" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "tablegen"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-tact"
scope = "source.tact"
file-types = [{ glob = "tools/msvs/**/*.tact" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '"' = '"', '{' = '}', '(' = ')', '<' = '>' }
grammar = "tact"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-task"
scope = "source.task"
file-types = [{ glob = "tools/msvs/**/*.task" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "task"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-tcl"
scope = "source.tcl"
file-types = [{ glob = "tools/msvs/**/*.tcl" }]
shebangs = [ "tclsh", "tclish", "jimsh", "wish" ]
comment-token = '#'
grammar = "tcl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-teal"
scope = "source.tl"
file-types = [{ glob = "tools/msvs/**/*.tl" }]
comment-tokens = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
roots = [ "tlconfig.lua" ]
language-servers = [ "teal-lsp" ]
grammar = "teal"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-templ"
scope = "source.templ"
file-types = [{ glob = "tools/msvs/**/*.templ" }]
roots = ["go.work", "go.mod"]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "templ" ]
grammar = "templ"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-textproto"
file-types = [{ glob = "tools/msvs/**/*.txtpb" }, { glob = "tools/msvs/**/*.textpb" }, { glob = "tools/msvs/**/*.textproto" }]
comment-token = "#"
scope = "source.textproto"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "txtpbfmt" }
auto-format = true
grammar = "textproto"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-tfvars"
scope = "source.tfvars"
language-id = "terraform-vars"
file-types = [{ glob = "tools/msvs/**/*.tfvars" }]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "terraform-ls" ]
auto-format = true
grammar = "tfvars"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-thrift"
scope = "source.thrift"
file-types = [{ glob = "tools/msvs/**/*.thrift" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "thrift"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-todotxt"
scope = "text.todotxt"
file-types = [{ glob = "tools/msvs/**/*.todo.txt" }, { glob = "tools/msvs/**/*.todotxt" }]
formatter = { command = "sort" }
auto-format = true
grammar = "todotxt"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-toml"
scope = "source.toml"
file-types = [{ glob = "tools/msvs/**/*.toml" }, { glob = "tools/msvs/**/pdm.lock" }, { glob = "tools/msvs/**/poetry.lock" }, { glob = "tools/msvs/**/Cargo.lock" }, { glob = "tools/msvs/**/uv.lock" }]
comment-token = "#"
language-servers = [ "taplo" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "toml"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-tsq"
scope = "source.tsq"
file-types = [{ glob = "tools/msvs/**/queries/*.scm" }, { glob = "tools/msvs/**/injections.scm" }, { glob = "tools/msvs/**/highlights.scm" }, { glob = "tools/msvs/**/indents.scm" }, { glob = "tools/msvs/**/textobjects.scm" }, { glob = "tools/msvs/**/locals.scm" }, { glob = "tools/msvs/**/tags.scm" }]
comment-token = ";"
language-servers = ["ts_query_ls"]
grammar = "tsq"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '[' = ']', '"' = '"' }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-tsx"
scope = "source.tsx"
language-id = "typescriptreact"
file-types = [{ glob = "tools/msvs/**/*.tsx" }]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "tsx"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-twig"
scope = "source.twig"
file-types = [{ glob = "tools/msvs/**/*.twig" }]
block-comment-tokens = { start = "{#", end = "#}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "twig"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-typescript"
scope = "source.ts"
language-id = "typescript"
file-types = [{ glob = "tools/msvs/**/*.ts" }, { glob = "tools/msvs/**/*.mts" }, { glob = "tools/msvs/**/*.cts" }]
shebangs = ["deno", "bun", "ts-node"]
roots = [ "package.json", "tsconfig.json" ]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "typescript-language-server" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "typescript"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-typespec"
scope = "source.typespec"
language-id = "typespec"
file-types = [{ glob = "tools/msvs/**/*.tsp" }]
roots = ["tspconfig.yaml"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["typespec"]
indent = { unit = "  ", tab-width = 2 }
grammar = "typespec"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-typst"
scope = "source.typst"
file-types = [{ glob = "tools/msvs/**/*.typst" }, { glob = "tools/msvs/**/*.typ" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["tinymist", "typst-lsp"]
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '$' = '$', '"' = '"' }
grammar = "typst"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-ungrammar"
scope = "source.ungrammar"
file-types = [{ glob = "tools/msvs/**/*.ungram" }, { glob = "tools/msvs/**/*.ungrammar" }]
comment-token = "//"
indent = { unit = "  ", tab-width = 2 }
grammar = "ungrammar"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-unison"
scope = "source.unison"
file-types = [{ glob = "tools/msvs/**/*.u" }]
shebangs = []
auto-format = true
comment-token = "--"
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', '`' = '`' }
grammar = "unison"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-unknown"
scope = "text.plain"
file-types = [{ glob = "*.foo" }, { glob = "*.txt" }]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-uxntal"
scope = "source.tal"
file-types = [{ glob = "tools/msvs/**/*.tal" }]
auto-format = true
block-comment-tokens = { start = "(", end = ")" }
grammar = "uxntal"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-v"
scope = "source.v"
file-types = [{ glob = "tools/msvs/**/*.v" }, { glob = "tools/msvs/**/*.vv" }, { glob = "tools/msvs/**/*.vsh" }]
shebangs = ["v run"]
roots = ["v.mod"]
language-servers = [ "vlang-language-server" ]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
grammar = "v"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-vala"
scope = "source.vala"
file-types = [{ glob = "tools/msvs/**/*.vala" }, { glob = "tools/msvs/**/*.vapi" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vala-language-server" ]
grammar = "vala"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-vento"
scope = "text.html.vto"
file-types = [{ glob = "tools/msvs/**/*.vto" }]
block-comment-tokens = { start = "{{#", end = "#}}" }
indent = { unit = "  ", tab-width = 2 }
grammar = "vento"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-verilog"
scope = "source.verilog"
file-types = [{ glob = "tools/msvs/**/*.v" }, { glob = "tools/msvs/**/*.vh" }, { glob = "tools/msvs/**/*.sv" }, { glob = "tools/msvs/**/*.svh" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "svlangserver" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "verilog"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-vhdl"
scope = "source.vhdl"
file-types = [{ glob = "tools/msvs/**/*.vhd" }, { glob = "tools/msvs/**/*.vhdl" }]
comment-token = "--"
language-servers = [ "vhdl_ls" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "vhdl"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-vhs"
scope = "source.vhs"
file-types = [{ glob = "tools/msvs/**/*.tape" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
grammar = "vhs"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-vue"
scope = "source.vue"
file-types = [{ glob = "tools/msvs/**/*.vue" }]
roots = ["package.json"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "vuels" ]
grammar = "vue"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-wast"
scope = "source.wast"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "tools/msvs/**/*.wast" }]
grammar = "wast"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-wat"
scope = "source.wat"
comment-token = ";;"
block-comment-tokens = { start = "(;", end = ";)" }
file-types = [{ glob = "tools/msvs/**/*.wat" }]
grammar = "wat"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-webc"
scope = "text.html.webc"
file-types = [{ glob = "tools/msvs/**/*.webc" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
grammar = "webc"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-wgsl"
scope = "source.wgsl"
file-types = [{ glob = "tools/msvs/**/*.wgsl" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "wgsl_analyzer" ]
indent = { unit = "  ", tab-width = 2 }
grammar = "wgsl"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-wit"
scope = "source.wit"
file-types = [{ glob = "tools/msvs/**/*.wit" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "wit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-wren"
scope = "source.wren"
file-types = [{ glob = "tools/msvs/**/*.wren" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "wren"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-xit"
scope = "source.xit"
file-types = [{ glob = "tools/msvs/**/*.xit" }]
indent = { unit = "  ", tab-width = 2 }
grammar = "xit"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-xml"
scope = "source.xml"
file-types = [{ glob = "tools/msvs/**/*.xml" }, { glob = "tools/msvs/**/*.mobileconfig" }, { glob = "tools/msvs/**/*.plist" }, { glob = "tools/msvs/**/*.xib" }, { glob = "tools/msvs/**/*.storyboard" }, { glob = "tools/msvs/**/*.svg" }, { glob = "tools/msvs/**/*.xsd" }, { glob = "tools/msvs/**/*.gml" }, { glob = "tools/msvs/**/*.xaml" }, { glob = "tools/msvs/**/*.gir" }, { glob = "tools/msvs/**/*.rss" }, { glob = "tools/msvs/**/*.atom" }, { glob = "tools/msvs/**/*.opml" }, { glob = "tools/msvs/**/*.policy" }, { glob = "tools/msvs/**/*.ascx" }, { glob = "tools/msvs/**/*.axml" }, { glob = "tools/msvs/**/*.axaml" }, { glob = "tools/msvs/**/*.bpmn" }, { glob = "tools/msvs/**/*.cpt" }, { glob = "tools/msvs/**/*.csl" }, { glob = "tools/msvs/**/*.csproj.user" }, { glob = "tools/msvs/**/*.dita" }, { glob = "tools/msvs/**/*.ditamap" }, { glob = "tools/msvs/**/*.dtml" }, { glob = "tools/msvs/**/*.fxml" }, { glob = "tools/msvs/**/*.iml" }, { glob = "tools/msvs/**/*.isml" }, { glob = "tools/msvs/**/*.jmx" }, { glob = "tools/msvs/**/*.launch" }, { glob = "tools/msvs/**/*.menu" }, { glob = "tools/msvs/**/*.mxml" }, { glob = "tools/msvs/**/*.nuspec" }, { glob = "tools/msvs/**/*.osc" }, { glob = "tools/msvs/**/*.osm" }, { glob = "tools/msvs/**/*.pt" }, { glob = "tools/msvs/**/*.publishsettings" }, { glob = "tools/msvs/**/*.pubxml" }, { glob = "tools/msvs/**/*.pubxml.user" }, { glob = "tools/msvs/**/*.rbxlx" }, { glob = "tools/msvs/**/*.rbxmx" }, { glob = "tools/msvs/**/*.rng" }, { glob = "tools/msvs/**/*.shproj" }, { glob = "tools/msvs/**/*.tld" }, { glob = "tools/msvs/**/*.tmx" }, { glob = "tools/msvs/**/*.vbproj.user" }, { glob = "tools/msvs/**/*.vcxproj" }, { glob = "tools/msvs/**/*.vcxproj.filters" }, { glob = "tools/msvs/**/*.wsdl" }, { glob = "tools/msvs/**/*.wxi" }, { glob = "tools/msvs/**/*.wxs" }, { glob = "tools/msvs/**/*.xbl" }, { glob = "tools/msvs/**/*.xlf" }, { glob = "tools/msvs/**/*.xliff" }, { glob = "tools/msvs/**/*.xpdl" }, { glob = "tools/msvs/**/*.xul" }, { glob = "tools/msvs/**/*.xoml" }, { glob = "tools/msvs/**/*.musicxml" }, { glob = "tools/msvs/**/*.glif" }, { glob = "tools/msvs/**/*.ui" }]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { unit = "  ", tab-width = 2 }
auto-pairs= { '(' = ')', '{' = '}', '[' = ']', '"' = '"', "'" = "'", "<" = ">" }
grammar = "xml"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-xtc"
scope = "source.xtc"
file-types = [{ glob = "tools/msvs/**/*.xtc" }, { glob = "tools/msvs/**/*.xpc" }, { glob = "tools/msvs/**/*.xoa" }]
comment-token = ";"
grammar = "xtc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-yaml"
scope = "source.yaml"
file-types = [{ glob = "tools/msvs/**/*.yml" }, { glob = "tools/msvs/**/*.yaml" }, { glob = "tools/msvs/**/.prettierrc" }, { glob = "tools/msvs/**/.clangd" }, { glob = "tools/msvs/**/.clang-format" }]
comment-token = "#"
indent = { unit = "  ", tab-width = 2 }
language-servers = [ "yaml-language-server", "ansible-language-server" ]
grammar = "yaml"

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-yuck"
scope = "source.yuck"
file-types = [{ glob = "tools/msvs/**/*.yuck" }]
comment-token = ";"
indent = { unit = "  ", tab-width = 2 }
grammar = "yuck"
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ec2hx-glob-lang-tools-msvs-**-zig"
scope = "source.zig"
file-types = [{ glob = "tools/msvs/**/*.zig" }, { glob = "tools/msvs/**/*.zon" }]
roots = ["build.zig"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
language-servers = [ "zls" ]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "zig" , args = ["fmt", "--stdin"] }
debugger= { name = "lldb-dap", transport = "stdio", command = "lldb-dap", templates = [{ name = "binary", request = "launch", completion = [ { name = "binary", completion = "filename" } ], args = { console = "internalConsole", program = "{0}" } }, { name = "attach", request = "attach", completion = [ "pid" ], args = { console = "internalConsole", pid = "{0}" } }, { name = "gdbserver attach", request = "attach", completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ], args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] } }] }
grammar = "zig"

[[language]]
name = "ec2hx-unknown-lang-vcbuild.bat"
scope = "text.plain"
file-types = [{ glob = "vcbuild.bat" }]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "make"
indent = { unit = "\t", tab-width = 8 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

################################################################################

# global settings, applied equally to all remaining languages:

[[language]]
name = "ada"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "adl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "agda"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "amber"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "astro"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "awk"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "bash"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "bass"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "beancount"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "bibtex"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "bicep"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "bitbake"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "blade"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "blueprint"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "c"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "c-sharp"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "cabal"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "cairo"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "capnp"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "cel"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "circom"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "clojure"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "cmake"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "comment"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "common-lisp"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "cpon"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "cpp"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "crystal"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "css"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "cue"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "cylc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "d"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "dart"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "dbml"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "devicetree"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "dhall"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "diff"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "docker-compose"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "dockerfile"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "dot"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "dtd"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "dune"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "earthfile"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ec2hx-global-fallback-plain-text"
scope = "text.plain"
file-types = [{ glob = "*.foo" }, { glob = "*.txt" }]
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "edoc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "eex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ejs"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "elisp"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "elixir"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "elm"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "elvish"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "env"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "erb"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "erlang"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "esdl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "fidl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "fish"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "forth"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "fortran"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "fsharp"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "gas"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "gdscript"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "gemini"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "gherkin"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "git-attributes"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "git-commit"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "git-config"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "git-ignore"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "git-rebase"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "gjs"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "gleam"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "glimmer"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "glsl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "gn"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "go"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "godot-resource"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "gomod"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "gotmpl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "gowork"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "gpr"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "graphql"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "groovy"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "gts"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "hare"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "haskell"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "haskell-persistent"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "hcl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "heex"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "helm"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "hocon"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "hoon"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "hosts"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "html"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "hurl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "hyprlang"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "idris"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "iex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ini"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "inko"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "janet"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "java"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "javascript"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "jinja"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "jjdescription"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "jq"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "jsdoc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "json"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "json5"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "jsonc"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "jsonnet"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "jsx"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "julia"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "just"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "kdl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "koka"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "kotlin"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "koto"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "latex"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ld"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ldif"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "lean"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ledger"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "llvm"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "llvm-mir"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "llvm-mir-yaml"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "log"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "lpf"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "lua"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "markdoc"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "markdown"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "markdown.inline"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "matlab"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "mermaid"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "meson"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "mint"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "mojo"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "move"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "msbuild"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "nasm"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "nestedtext"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "nginx"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "nickel"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "nim"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "nix"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "nu"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "nunjucks"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ocaml"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ocaml-interface"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "odin"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ohm"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "opencl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "openscad"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "org"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "pascal"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "passwd"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "pem"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "perl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "pest"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "php"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "php-only"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "pkgbuild"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "pkl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "po"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "pod"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ponylang"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "powershell"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "prisma"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "prolog"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "protobuf"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "prql"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "purescript"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "python"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "qml"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "quint"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "r"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "racket"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "regex"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "rego"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "rescript"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "rmarkdown"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "robot"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ron"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "rst"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "ruby"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "rust"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "sage"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "scala"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "scheme"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "scss"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "slint"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "smali"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "smithy"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "sml"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "snakemake"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "solidity"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "spade"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "spicedb"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "sql"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "sshclientconfig"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "starlark"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "strace"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "supercollider"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "svelte"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "sway"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "swift"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "t32"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "tablegen"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "tact"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "task"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "tcl"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "teal"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "templ"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "textproto"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "tfvars"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "thrift"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "todotxt"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "toml"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "tsq"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "tsx"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "twig"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "typescript"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "typespec"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "typst"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "ungrammar"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "unison"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "uxntal"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "v"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "vala"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "vento"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "verilog"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "vhdl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "vhs"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "vue"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "wast"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "wat"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "webc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "wgsl"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "wit"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "wren"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "xit"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "xml"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "xtc"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "yaml"
indent = { unit = "  ", tab-width = 2 }

[[language]]
name = "yuck"
indent = { unit = "  ", tab-width = 2 }
formatter = { command = "ec2hx", args = ["trim-trailing-whitespace"] }
auto-format = true

[[language]]
name = "zig"
indent = { unit = "  ", tab-width = 2 }
